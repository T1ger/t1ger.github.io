<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>t1ger的茶馆</title>
  <subtitle>头顶有光终是幻，足下生云未是仙</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://t1ger.github.io/"/>
  <updated>2017-04-17T10:38:00.520Z</updated>
  <id>https://t1ger.github.io/</id>
  
  <author>
    <name>t1ger</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何生成自签名证书</title>
    <link href="https://t1ger.github.io/2017/04/13/%E5%A6%82%E4%BD%95%E7%94%9F%E6%88%90%E8%87%AA%E7%AD%BE%E5%90%8D%E8%AF%81%E4%B9%A6/"/>
    <id>https://t1ger.github.io/2017/04/13/如何生成自签名证书/</id>
    <published>2017-04-13T08:52:09.000Z</published>
    <updated>2017-04-17T10:38:00.520Z</updated>
    
    <content type="html"><![CDATA[<h5 id="make-work-dir"><a href="#make-work-dir" class="headerlink" title="make work dir"></a><b>make work dir</b></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd /etc/pki/CA/ &amp;&amp; umask 0077 &amp;&amp; mkdir -p /etc/pki/CA/&#123;private,certs,crl,csr,newcerts,private&#125; &amp;&amp; touch index.txt &amp;&amp; echo &apos;00&apos;&gt;serial</div></pre></td></tr></table></figure>
<h5 id="config-file-etc-pki-CA-openssl-conf"><a href="#config-file-etc-pki-CA-openssl-conf" class="headerlink" title="config file /etc/pki/CA/openssl.conf"></a><b>config file /etc/pki/CA/openssl.conf</b></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div></pre></td><td class="code"><pre><div class="line">HOME            = .</div><div class="line">RANDFILE        = $ENV::HOME/.rnd</div><div class="line">oid_section     = new_oids</div><div class="line">[ new_oids ]</div><div class="line">tsa_policy1 = 1.2.3.4.1</div><div class="line">tsa_policy2 = 1.2.3.4.5.6</div><div class="line">tsa_policy3 = 1.2.3.4.5.7</div><div class="line">[ ca ]</div><div class="line">default_ca  = CA_default        # The default ca section</div><div class="line">[ CA_default ]</div><div class="line">dir     = /etc/pki/CA       # Where everything is kept</div><div class="line">certs       = $dir/certs        # Where the issued certs are kept</div><div class="line">crl_dir     = $dir/crl      # Where the issued crl are kept</div><div class="line">database    = $dir/index.txt    # database index file.</div><div class="line">                   # several ctificates with same subject.</div><div class="line">new_certs_dir   = $dir/newcerts     # default place for new certs.</div><div class="line">certificate = $dir/certs/ca.crt     # The CA certificate</div><div class="line">serial      = $dir/serial       # The current serial number</div><div class="line">crlnumber   = $dir/crlnumber    # the current crl number</div><div class="line">                   # must be commented out to leave a V1 CRL</div><div class="line">crl     = $dir/crl/crl.pem      # The current CRL</div><div class="line">private_key = $dir/private/ca.key   # The private key</div><div class="line">RANDFILE    = $dir/private/.rand    # private random number file</div><div class="line">x509_extensions = usr_cert      # The extentions to add to the cert</div><div class="line">name_opt    = ca_default        # Subject Name options</div><div class="line">cert_opt    = ca_default        # Certificate field options</div><div class="line">default_days    = 3650          # how long to certify for</div><div class="line">default_crl_days= 30            # how long before next CRL</div><div class="line">default_md  = sha256        # use public key default MD</div><div class="line">preserve    = no            # keep passed DN ordering</div><div class="line">policy      = policy_dn</div><div class="line">[ policy_match ]</div><div class="line">countryName     = match</div><div class="line">stateOrProvinceName = match</div><div class="line">organizationName    = match</div><div class="line">organizationalUnitName  = optional</div><div class="line">commonName      = supplied</div><div class="line">emailAddress        = optional</div><div class="line">[ policy_anything ]</div><div class="line">countryName     = optional</div><div class="line">stateOrProvinceName = optional</div><div class="line">localityName        = optional</div><div class="line">organizationName    = optional</div><div class="line">organizationalUnitName  = optional</div><div class="line">commonName      = supplied</div><div class="line">emailAddress        = optional</div><div class="line">[ policy_dn ]</div><div class="line">countryName             = supplied              # required parameter, any value allowed</div><div class="line">stateOrProvinceName     = optional</div><div class="line">localityName            = optional</div><div class="line">organizationName        = match                 # required, and must match root certificate</div><div class="line">organizationalUnitName  = optional</div><div class="line">commonName              = supplied              # required parameter, any value allowed</div><div class="line">emailAddress            = optional              # email in DN is deprecated, use subjectAltName</div><div class="line">[ req ]</div><div class="line">default_bits        = 2048</div><div class="line">default_md      = sha256</div><div class="line">encrypt_key             = no</div><div class="line">prompt                  = yes</div><div class="line">default_keyfile     = client.key</div><div class="line">distinguished_name  = req_distinguished_name</div><div class="line">x509_extensions = v3_ca # The extentions to add to the self signed cert</div><div class="line">string_mask = utf8only</div><div class="line">[ req_distinguished_name ]</div><div class="line">countryName         = Country Name (2 letter code)</div><div class="line">countryName_default     = CN</div><div class="line">countryName_min         = 2</div><div class="line">countryName_max         = 2</div><div class="line">stateOrProvinceName     = State or Province Name (full name)</div><div class="line">stateOrProvinceName_default = Beijing</div><div class="line">localityName            = Locality Name (eg, city)</div><div class="line">localityName_default        = Beijing</div><div class="line">0.organizationName      = Organization Name (eg, company)</div><div class="line">0.organizationName_default  = Beijing Century Fortunet Network Technology Co.,Ltd.</div><div class="line">organizationalUnitName      = Organizational Unit Name (eg, section)</div><div class="line">organizationalUnitName_default  = IT Operation Management</div><div class="line">commonName          = Common Name (eg, your name or your server\&apos;s hostname)</div><div class="line">commonName_max          = 64</div><div class="line">emailAddress            = Email Address</div><div class="line">emailAddress_max        = 64</div><div class="line">emailAddress_default        = admin@conf.top</div><div class="line">[ req_attributes ]</div><div class="line">challengePassword       = A challenge password</div><div class="line">challengePassword_min       = 4</div><div class="line">challengePassword_max       = 20</div><div class="line">unstructuredName        = An optional company name</div><div class="line">[ usr_cert ]</div><div class="line">basicConstraints    = CA:FALSE</div><div class="line">nsComment       = &quot;CONFCA Generated Certificate&quot;</div><div class="line">subjectKeyIdentifier    = hash</div><div class="line">authorityKeyIdentifier  = keyid,issuer</div><div class="line">[ v3_req ]</div><div class="line">basicConstraints    = CA:FALSE</div><div class="line">keyUsage        = digitalSignature, keyEncipherment</div><div class="line">extendedKeyUsage        = serverAuth, clientAuth</div><div class="line">subjectKeyIdentifier    = hash</div><div class="line">subjectAltName      = @alt_names</div><div class="line">[ v3_ca ]</div><div class="line">subjectKeyIdentifier=hash</div><div class="line">authorityKeyIdentifier=keyid:always,issuer</div><div class="line">keyUsage        = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment, keyAgreement, keyCertSign, cRLSign</div><div class="line">extendedKeyUsage        = serverAuth, clientAuth, codeSigning, timeStamping, emailProtection, msEFS, 1.3.6.1.4.1.311.10.3.11, 1.3.6.1.4.1.311.20.2.2</div><div class="line">basicConstraints = CA:true</div><div class="line">[ X509_ca ]</div><div class="line">basicConstraints        = CA:TRUE</div><div class="line">nsCertType              = sslCA                 # restrict the usage</div><div class="line">keyUsage                = keyCertSign, cRLSign  # restrict the usage</div><div class="line">subjectKeyIdentifier    = hash</div><div class="line">authorityKeyIdentifier  = keyid:always,issuer:always</div><div class="line">[ X509_server ]</div><div class="line">basicConstraints        = CA:FALSE</div><div class="line">nsCertType              = server                # restrict the usage</div><div class="line">keyUsage                = digitalSignature, keyEncipherment</div><div class="line">extendedKeyUsage        = serverAuth            # restrict the usage</div><div class="line">subjectKeyIdentifier    = hash</div><div class="line">authorityKeyIdentifier  = keyid,issuer</div><div class="line">[ X509_client ]</div><div class="line">basicConstraints        = CA:FALSE</div><div class="line">nsCertType              = client                # restrict the usage</div><div class="line">keyUsage                = digitalSignature      # restrict the usage</div><div class="line">extendedKeyUsage        = clientAuth            # restrict the usage</div><div class="line">subjectKeyIdentifier    = hash</div><div class="line">authorityKeyIdentifier  = keyid,issuer</div><div class="line">[ crl_ext ]</div><div class="line">authorityKeyIdentifier=keyid:always</div><div class="line">[ proxy_cert_ext ]</div><div class="line">basicConstraints=CA:FALSE</div><div class="line">nsComment           = &quot;CONFCA Generated Certificate&quot;</div><div class="line">subjectKeyIdentifier=hash</div><div class="line">authorityKeyIdentifier=keyid,issuer</div><div class="line">proxyCertInfo=critical,language:id-ppl-anyLanguage,pathlen:3,policy:foo</div><div class="line">[ tsa ]</div><div class="line">default_tsa = tsa_config1   # the default TSA section</div><div class="line">[ tsa_config1 ]</div><div class="line">dir     = ./demoCA      # TSA root directory</div><div class="line">serial      = $dir/tsaserial    # The current serial number (mandatory)</div><div class="line">crypto_device   = builtin       # OpenSSL engine to use for signing</div><div class="line">signer_cert = $dir/tsacert.pem  # The TSA signing certificate</div><div class="line">                   # (optional)</div><div class="line">certs       = $dir/cacert.pem   # Certificate chain to include in reply</div><div class="line">                   # (optional)</div><div class="line">signer_key  = $dir/private/tsakey.pem # The TSA private key (optional)</div><div class="line">default_policy  = tsa_policy1       # Policy if request did not specify it</div><div class="line">                   # (optional)</div><div class="line">other_policies  = tsa_policy2, tsa_policy3  # acceptable policies (optional)</div><div class="line">digests     = md5, sha1     # Acceptable message digests (mandatory)</div><div class="line">accuracy    = secs:1, millisecs:500, microsecs:100  # (optional)</div><div class="line">clock_precision_digits  = 0 # number of digits after dot. (optional)</div><div class="line">ordering        = yes   # Is ordering defined for timestamps?</div><div class="line">               # (optional, default: no)</div><div class="line">tsa_name        = yes   # Must the TSA name be included in the reply?</div><div class="line">               # (optional, default: no)</div><div class="line">ess_cert_id_chain   = no    # Must the ESS cert id chain be included?</div><div class="line">               # (optional, default: no)</div><div class="line">[ alt_names ]</div><div class="line">DNS.1 = conf.top</div><div class="line">DNS.2 = *.conf.top</div><div class="line">DNS.3 = vpn.conf.top</div><div class="line">DNS.4 = *.vpn.conf.top</div><div class="line">DNS.5 = ldap.conf.top</div><div class="line">DNS.6 = *.ldap.conf.top</div></pre></td></tr></table></figure>
<p>该文件主要设置了证书请求、签名、crl相关的配置。主要相关的伪命令为ca和req。对于x509不用该配置文件<br>该文件从功能结构上分为4个段落：默认段、ca相关的段、req相关的段、tsa相关的段。每个段中都以name=value的格式定义。<br>该文件中没有被引用的段被视为忽略段，不会起到任何作用。<br>每个段中可以书写哪些name以及它们的意义，可以man相关命令，如man ca可以查看ca相关段可以书写的name，man req可以查看req相关段可以书写的name。</p>
<p>如有域名或更多的IP，请参考如下方式追加：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">DNS.1 = [example1.com]</div><div class="line">DNS.2 = [example2.com]</div><div class="line">IP.2 = [IP2]</div><div class="line">IP.3 = [IP3]</div></pre></td></tr></table></figure></p>
<h5 id="create-ca"><a href="#create-ca" class="headerlink" title="create ca "></a><b>create ca </b></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># 创建CA证书的私钥</div><div class="line">openssl genrsa -out private/ca.key 2048</div><div class="line"># 创建CA证书的公钥，其他配置可以默认，出现 Common Name (eg, your name or your server&apos;s hostname) []:</div><div class="line"># 的时候一定不能默认了，CA证书这里就输入CONFCA</div><div class="line">openssl req -days 177121 -new -sha256 -x509 -key private/ca.key -out certs/ca.crt -config openssl.cnf</div></pre></td></tr></table></figure>
<h5 id="create-domain-cert"><a href="#create-domain-cert" class="headerlink" title="create domain cert "></a><b>create domain cert </b></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">## 创建key</div><div class="line">openssl genrsa -out private/conf.top.key 2048  </div><div class="line">## 生成csr文件,同样遇到输入 Common Name  的时候不能默认，这里输入conf.top</div><div class="line">openssl req -new -sha256 -key private/conf.top.key -out csr/conf.top.csr -extensions v3_req -config openssl.cnf</div><div class="line">## 签名证书</div><div class="line">openssl ca -days 30659 -in csr/conf.top.csr -out certs/conf.top.crt -extensions v3_req -config openssl.cnf</div></pre></td></tr></table></figure>
<p>ref<br><a href="https://www.jslink.org/linux/openldap-ssl-sssd.html" target="_blank" rel="external">ssl域名证书</a><br><a href="http://www.cnblogs.com/gsls200808/p/4502044.html" target="_blank" rel="external">openssl生成证书链多级证书</a><br><a href="https://github.com/tdharris/openssl-toolkit" target="_blank" rel="external">openssl-toolkit</a><br><a href="https://evilshit.wordpress.com/2013/06/19/how-to-create-your-own-pki-with-openssl/" target="_blank" rel="external">How to create your own PKI with openssl</a><br><a href="https://gist.github.com/ezimuel/3cb601853db6ebc4ee49" target="_blank" rel="external">Sign and verify a file using OpenSSL command line tool</a></p>
<hr>
<p>您的鼓励是我写作最大的动力</p>
<p>俗话说，投资效率是最好的投资。 如果您感觉我的文章质量不错，读后收获很大，预计能为您提高 10% 的工作效率，不妨小额捐助我一下，让我有动力继续写出更多好文章。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;make-work-dir&quot;&gt;&lt;a href=&quot;#make-work-dir&quot; class=&quot;headerlink&quot; title=&quot;make work dir&quot;&gt;&lt;/a&gt;&lt;b&gt;make work dir&lt;/b&gt;&lt;/h5&gt;&lt;figure class=&quot;highlig
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>faster way to navigate your filesystem for CentOS</title>
    <link href="https://t1ger.github.io/2017/04/07/faster-way-to-navigate-your-filesystem-for-CentOS/"/>
    <id>https://t1ger.github.io/2017/04/07/faster-way-to-navigate-your-filesystem-for-CentOS/</id>
    <published>2017-04-07T08:49:43.000Z</published>
    <updated>2017-04-07T08:12:14.582Z</updated>
    
    <content type="html"><![CDATA[<h5 id="What-is-autojump"><a href="#What-is-autojump" class="headerlink" title="What is autojump"></a><b>What is autojump</b></h5><p>autojump is a faster way to navigate your filesystem. It works by maintaining a database of the directories you use the most from the command line.</p>
<p>Directories must be visited first before they can be jumped to.</p>
<h5 id="How-to-Install"><a href="#How-to-Install" class="headerlink" title="How to Install"></a><b>How to Install</b></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">yum install epel-release</div><div class="line">yum install autojump</div><div class="line"></div><div class="line">如果你是bash，则添加如下到 ~/.bashrc</div><div class="line">[[ -s /etc/profile.d/autojump.bash ]] &amp;&amp; . /etc/profile.d/autojump.bash</div></pre></td></tr></table></figure>
<h5 id="How-to-usage"><a href="#How-to-usage" class="headerlink" title="How to usage"></a><b>How to usage</b></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">j 目录名字</div><div class="line"></div><div class="line">手动添加目录</div><div class="line">j -a [目录]</div><div class="line"></div><div class="line">手工增加权重</div><div class="line">j -i [权重]</div><div class="line"></div><div class="line">手动减少权重</div><div class="line">j -d [权重] </div><div class="line"></div><div class="line">显示数据库中的统计数据</div><div class="line">j -s</div><div class="line"></div><div class="line">将不存在的目录从数据库中移除</div><div class="line">j --purge</div></pre></td></tr></table></figure>
<p>ref<br><a href="https://github.com/wting/autojump" target="_blank" rel="external">wting/autojump</a></p>
<hr>
<p>您的鼓励是我写作最大的动力</p>
<p>俗话说，投资效率是最好的投资。 如果您感觉我的文章质量不错，读后收获很大，预计能为您提高 10% 的工作效率，不妨小额捐助我一下，让我有动力继续写出更多好文章。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;What-is-autojump&quot;&gt;&lt;a href=&quot;#What-is-autojump&quot; class=&quot;headerlink&quot; title=&quot;What is autojump&quot;&gt;&lt;/a&gt;&lt;b&gt;What is autojump&lt;/b&gt;&lt;/h5&gt;&lt;p&gt;autojum
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Deploy VM to vCenter with Ansible</title>
    <link href="https://t1ger.github.io/2017/03/21/Deploy-VM-to-vCenter-with-Ansible/"/>
    <id>https://t1ger.github.io/2017/03/21/Deploy-VM-to-vCenter-with-Ansible/</id>
    <published>2017-03-21T07:19:51.000Z</published>
    <updated>2017-03-21T07:22:21.172Z</updated>
    
    <content type="html"><![CDATA[<p>ready work </p>
<ul>
<li>install ansible<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># yum install epel-release -y</div><div class="line"># yum install python2-pip -y</div><div class="line"># pip install pysphere</div><div class="line"># yum install ansible -y</div><div class="line">[root@localhost ~]# ansible --version</div><div class="line">ansible 2.2.1.0</div></pre></td></tr></table></figure>
</li>
</ul>
<p>ansible config</p>
<ul>
<li><p>create our inventory list</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">[root@localhost vm-playbook]# cat create_hosts </div><div class="line">[dev-vms]</div><div class="line">ans-dev[127:128] disk=&apos;50&apos; datastore=&apos;datastore1&apos; network=&apos;VM Network&apos; memory=&apos;256&apos; cpucount=&apos;2&apos; osid=&apos;centos64Guest&apos;</div><div class="line"></div><div class="line">ans-dev[127:128]= -  actual VM names that we will be creating</div><div class="line">disk= — is the size in GB to create for each VM</div><div class="line">datastore= — name of the datastore to create the VMs on</div><div class="line">network= — name of network (portgroup) to place the VMs on</div><div class="line">memory= — the amount of memory in MB to allocate to the VMs</div><div class="line">cpucount= — the number of vCPU’s to allocate to the VMs</div><div class="line">osid= — the OS Identifier to specify for the OS type…. reference this guide for OSID’s</div></pre></td></tr></table></figure>
</li>
<li><p>create the actual ansible playbook to run to create the VMs</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line">[root@localhost vm-playbook]# cat create_vms.yml </div><div class="line">---</div><div class="line">- hosts: all</div><div class="line">  gather_facts: false</div><div class="line">  connection: local</div><div class="line">  user: root</div><div class="line">  sudo: false</div><div class="line">  serial: 1</div><div class="line"></div><div class="line">  vars_prompt:</div><div class="line">    - name: &quot;vcenter_hostname&quot;</div><div class="line">      prompt: &quot;Enter vcenter hostname&quot;</div><div class="line">      private: no</div><div class="line">      default: &quot;vcsa&quot;</div><div class="line">    - name: &quot;vcenter_user&quot;</div><div class="line">      prompt: &quot;Enter vcenter username&quot;</div><div class="line">      private: no</div><div class="line">    - name: &quot;vcenter_pass&quot;</div><div class="line">      prompt: &quot;Enter vcenter password&quot;</div><div class="line">      private: yes</div><div class="line"></div><div class="line">  vars:</div><div class="line">    datacenter: &apos;whistle&apos;</div><div class="line">    esxi_host: &apos;192.168.100.120&apos;</div><div class="line">    notes: &apos;Created by Ansible&apos;</div><div class="line"></div><div class="line">  tasks:</div><div class="line">    - vsphere_guest:</div><div class="line">        vcenter_hostname: &quot;&#123;&#123; vcenter_hostname &#125;&#125;&quot;</div><div class="line">        username: &quot;&#123;&#123; vcenter_user &#125;&#125;&quot;</div><div class="line">        password: &quot;&#123;&#123; vcenter_pass &#125;&#125;&quot;</div><div class="line">        guest: &quot;&#123;&#123; inventory_hostname &#125;&#125;&quot;</div><div class="line">        state: present</div><div class="line">        vm_extra_config:</div><div class="line">          notes: &quot;&#123;&#123; notes &#125;&#125;&quot;</div><div class="line">          vcpu.hotadd: yes</div><div class="line">          mem.hotadd:  yes</div><div class="line">          #folder: ansible_test</div><div class="line">        vm_disk:</div><div class="line">          disk1:</div><div class="line">            size_gb: &quot;&#123;&#123; disk &#125;&#125;&quot;</div><div class="line">            type: thin</div><div class="line">            datastore: &quot;&#123;&#123; datastore &#125;&#125;&quot;</div><div class="line">            # VMs can be put into folders. The value given here is either the full path</div><div class="line">            # to the folder (e.g. production/customerA/lamp) or just the last component</div><div class="line">            # of the path (e.g. lamp):</div><div class="line">            #folder: production/customerA/lamp</div><div class="line">        vm_nic:</div><div class="line">          nic1:</div><div class="line">            type: e1000</div><div class="line">            network: &quot;&#123;&#123; network &#125;&#125;&quot;</div><div class="line">            network_type: standard</div><div class="line">        vm_hardware:</div><div class="line">          memory_mb: &quot;&#123;&#123; memory &#125;&#125;&quot;</div><div class="line">          num_cpus: &quot;&#123;&#123; cpucount &#125;&#125;&quot;</div><div class="line">          osid: &quot;&#123;&#123; osid &#125;&#125;&quot;</div><div class="line">          scsi: paravirtual</div><div class="line">          vm_cdrom:</div><div class="line">                type: &quot;iso&quot;</div><div class="line">                iso_path: &quot;datastore1/iso/CentOS-Basic7.3-01071715.iso&quot;</div><div class="line">        esxi:</div><div class="line">          datacenter: &quot;&#123;&#123; datacenter &#125;&#125;&quot;</div><div class="line">          hostname: &quot;&#123;&#123; esxi_host &#125;&#125;&quot;</div></pre></td></tr></table></figure>
</li>
<li><p>now ready to run your playbook</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">[root@localhost vm-playbook]# ansible-playbook -i create_hosts create_vms.yml </div><div class="line">SSH password: </div><div class="line">[DEPRECATION WARNING]: Instead of sudo/sudo_user, use become/become_user and make sure become_method is &apos;sudo&apos; (default).</div><div class="line">This feature will be removed in a future release. Deprecation </div><div class="line">warnings can be disabled by setting deprecation_warnings=False in ansible.cfg.</div><div class="line">Enter vcenter hostname [vcsa]: 192.168.100.120</div><div class="line">Enter vcenter username: administrator</div><div class="line">Enter vcenter password: </div><div class="line"></div><div class="line">PLAY [all] *********************************************************************</div><div class="line"></div><div class="line">TASK [vsphere_guest] ***********************************************************</div><div class="line">changed: [ans-dev127]</div><div class="line"></div><div class="line">PLAY [all] *********************************************************************</div><div class="line"></div><div class="line">TASK [vsphere_guest] ***********************************************************</div><div class="line">changed: [ans-dev128]</div><div class="line"></div><div class="line">PLAY RECAP *********************************************************************</div><div class="line">ans-dev127                 : ok=1    changed=1    unreachable=0    failed=0   </div><div class="line">ans-dev128                 : ok=1    changed=1    unreachable=0    failed=0</div></pre></td></tr></table></figure>
</li>
</ul>
<p>ref</p>
<p><a href="http://docs.ansible.com/ansible/vsphere_guest_module.html" target="_blank" rel="external">vsphere_guest - Create/delete/manage a guest VM through VMware vSphere</a><br><a href="http://everythingshouldbevirtual.com/creating-vsphere-vms-using-ansible" target="_blank" rel="external">Creating vSphere VM’s using Ansible</a><br><a href="http://serverfault.com/questions/740193/create-multiple-vmware-guests-with-vsphere-guest-module" target="_blank" rel="external">Create multiple VMware guests with vsphere_guest module</a><br><a href="http://probably.co.uk/managing-vmware-vsphere-guests-with-ansible-tower.html" target="_blank" rel="external">Managing VMware vSphere guests with Ansible Tower</a></p>
<hr>
<p>您的鼓励是我写作最大的动力</p>
<p>俗话说，投资效率是最好的投资。 如果您感觉我的文章质量不错，读后收获很大，预计能为您提高 10% 的工作效率，不妨小额捐助我一下，让我有动力继续写出更多好文章。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ready work &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;install ansible&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Docker CE vs Docker EE</title>
    <link href="https://t1ger.github.io/2017/03/14/Docker-CE-vs-Docker-EE/"/>
    <id>https://t1ger.github.io/2017/03/14/Docker-CE-vs-Docker-EE/</id>
    <published>2017-03-14T08:59:18.000Z</published>
    <updated>2017-03-14T08:45:27.454Z</updated>
    
    <content type="html"><![CDATA[<p>Docker2016年就明确了将会在企业级方面重点跟进，惊喜就这样来了，在2017年的3月1号之后，Docker的版本命名开始发生变化，同时将CE版本和EE版本进行分开，而这些也是新安装docker时候发现的，一起简单来看一下具体情况吧</p>
<h5 id="版本说明"><a href="#版本说明" class="headerlink" title="版本说明"></a><b>版本说明</b></h5><p>在此之前docker的最新版本更新到docker1.13，而在1.13的基础之上，在2017年的3月1号开始，版本的格式变为如下</p>
<p>项目    说明<br>版本格式    YY.MM<br>stable版本    每个季度发行<br>edge版本    每个月发行<br>当前CE版本    17.03.0-ce</p>
<p>同时将Docker分成CE和EE2个版本。CE版本即社区版(免费，支持周期三个月),EE企业版，强调安全，付费使用。<br>当前的CE版本为17.03.0-ce，基于V1.13.0.主要修复错误，没有重大功能增加，API亦保持不变。</p>
<h5 id="安装CE版本的Docker"><a href="#安装CE版本的Docker" class="headerlink" title="安装CE版本的Docker"></a><b>安装CE版本的Docker</b></h5><p>安装参看官方提供Manual如下</p>
<p>项目    详细<br>CENTOS安装CE版    <a href="https://store.docker.com/editions/community/docker-ce-server-centos?tab=description" target="_blank" rel="external">https://store.docker.com/editions/community/docker-ce-server-centos?tab=description</a><br>也可以使用Easypack下面提供的脚本，只是将上面的内容顺次写进去，加上enable和start以及firewall的关闭等操作而已。</p>
<p>项目    详细<br>CENTOS安装CE（Easypack）版    <a href="https://github.com/liumiaocn/easypack/tree/master/docker" target="_blank" rel="external">https://github.com/liumiaocn/easypack/tree/master/docker</a></p>
<h5 id="安装FAQ"><a href="#安装FAQ" class="headerlink" title="安装FAQ"></a><b>安装FAQ</b></h5><p>在yum 安装时候，报出Peer’s Certificate has expired的错误</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">failure: repodata/repomd.xml from docker-ce-stable: [Errno 256] No more mirrors to try.</div><div class="line">https://download.docker.com/linux/centos/7/x86_64/stable/repodata/repomd.xml: [Errno 14] curl#60 - &quot;Peer&apos;s Certificate has expired.&quot;</div></pre></td></tr></table></figure>
<p>搜索很久，终于看到有位兄弟碰到过，原来是本地时间不正确造成的，详情见<a href="https://xuxinkun.github.io/2016/04/21/curl-ca-problem/" target="_blank" rel="external">这里</a></p>
<p>进行一次ntp同步时间同步，问题解决<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ntpdate pool.ntp.org</div></pre></td></tr></table></figure></p>
<p>ref<br><a href="https://docs.docker.com/engine/installation/linux/centos/" target="_blank" rel="external">Get Docker for CentOS</a><br><a href="https://xuxinkun.github.io/2016/04/21/curl-ca-problem/" target="_blank" rel="external">记一次解决curl https证书问题</a><br><a href="https://github.com/tiny1990/aboutTest" target="_blank" rel="external">docker的环境部署</a></p>
<hr>
<p>您的鼓励是我写作最大的动力</p>
<p>俗话说，投资效率是最好的投资。 如果您感觉我的文章质量不错，读后收获很大，预计能为您提高 10% 的工作效率，不妨小额捐助我一下，让我有动力继续写出更多好文章。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Docker2016年就明确了将会在企业级方面重点跟进，惊喜就这样来了，在2017年的3月1号之后，Docker的版本命名开始发生变化，同时将CE版本和EE版本进行分开，而这些也是新安装docker时候发现的，一起简单来看一下具体情况吧&lt;/p&gt;
&lt;h5 id=&quot;版本说明&quot;&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SQLAdvisor简明教程</title>
    <link href="https://t1ger.github.io/2017/03/13/SQLAdvisor%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/"/>
    <id>https://t1ger.github.io/2017/03/13/SQLAdvisor简明教程/</id>
    <published>2017-03-13T03:49:52.000Z</published>
    <updated>2017-03-13T03:46:10.352Z</updated>
    
    <content type="html"><![CDATA[<h5 id="简介"><a href="#简介" class="headerlink" title="简介"></a><b>简介</b></h5><p>SQLAdvisor是由美团点评公司技术工程部DBA团队（北京）开发维护的一个分析SQL给出索引优化建议的工具。它基于MySQL原生态词法解析，结合分析SQL中的where条件、聚合条件、多表Join关系 给出索引优化建议<br>主要功能：输出SQL索引优化建议</p>
<h5 id="SQLAdvisor安装"><a href="#SQLAdvisor安装" class="headerlink" title="SQLAdvisor安装"></a><b>SQLAdvisor安装</b></h5><ul>
<li><p>安装依赖项</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">1. 配置percona56 yum源: </div><div class="line">   yum install http://www.percona.com/downloads/percona-release/redhat/0.1-3/percona-release-0.1-3.noarch.rpm</div><div class="line"></div><div class="line">2. yum | apt-get  install cmake libaio-devel libffi-devel glib2 glib2-devel</div><div class="line">3. yum | apt-get  install --enablerepo=Percona56 Percona-Server-shared-56</div></pre></td></tr></table></figure>
</li>
<li><p>拉取最新代码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/Meituan-Dianping/SQLAdvisor.git</div></pre></td></tr></table></figure>
</li>
<li><p>编译依赖项sqlparser</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">1. cmake -DBUILD_CONFIG=mysql_release -DCMAKE_BUILD_TYPE=debug -DCMAKE_INSTALL_PREFIX=/usr/local/sqlparser ./</div><div class="line">2. make &amp;&amp; make install</div><div class="line"></div><div class="line">编译sqladvisor时依赖perconaserverclient_r, 因此需要安装Percona-Server-shared-56</div><div class="line">有可能需要配置软链接例如:</div><div class="line">1. cd /usr/lib64/ </div><div class="line">2. ln -s libperconaserverclient_r.so.18 libperconaserverclient_r.so</div></pre></td></tr></table></figure>
</li>
<li><p>安装SQLAdvisor源码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">1. cd SQLAdvisor/sqladvisor/</div><div class="line">2. cmake -DCMAKE_BUILD_TYPE=debug ./</div><div class="line">3. make</div><div class="line">4. 在本路径下生成一个sqladvisor可执行文件，这即是我们想要的。</div></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="SQLAdvisor使用"><a href="#SQLAdvisor使用" class="headerlink" title="SQLAdvisor使用"></a><b>SQLAdvisor使用</b></h5><ul>
<li><p>–help输出</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">[root@localhost sqladvisor]# ./sqladvisor --help</div><div class="line">Usage:</div><div class="line">  sqladvisor [OPTION...] sqladvisor</div><div class="line"></div><div class="line">SQL Advisor Summary</div><div class="line"></div><div class="line">Help Options:</div><div class="line">  -?, --help              Show help options</div><div class="line"></div><div class="line">Application Options:</div><div class="line">  -f, --defaults-file     sqls file</div><div class="line">  -u, --username          username</div><div class="line">  -p, --password          password</div><div class="line">  -P, --port              port</div><div class="line">  -h, --host              host</div><div class="line">  -d, --dbname            database name</div><div class="line">  -q, --sqls              sqls</div><div class="line">  -v, --verbose           1:output logs 0:output nothing</div></pre></td></tr></table></figure>
</li>
<li><p>命令行传参调用</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">./sqladvisor -h xx  -P xx  -u xx -p &apos;xx&apos; -d xx -q &quot;sql&quot; -v 1</div><div class="line"></div><div class="line">注意：命令行传参时，参数名与值需要用空格隔开</div></pre></td></tr></table></figure>
</li>
<li><p>配置文件传参调用</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$&gt; cat sql.cnf</div><div class="line">[sqladvisor]</div><div class="line">username=xx</div><div class="line">password=xx</div><div class="line">host=xx</div><div class="line">port=xx</div><div class="line">dbname=xx</div><div class="line">sqls=sql1;sql2;sql3....</div><div class="line"></div><div class="line">cmd: ./sqladvisor -f sql.cnf  -v 1</div></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="常见错误FAQ"><a href="#常见错误FAQ" class="headerlink" title="常见错误FAQ"></a><b>常见错误FAQ</b></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">我已经安装了libaio-devel库：</div><div class="line">-- Running cmake version 2.8.12.2</div><div class="line">CMake Error at cmake/build_configurations/mysql_release.cmake:46 (MESSAGE):</div><div class="line">          aio is required on Linux, you need to install the required library:</div><div class="line">            Debian/Ubuntu:              apt-get install libaio-dev</div><div class="line">            RedHat/Fedora/Oracle Linux: yum install libaio-devel</div><div class="line">            SuSE:                       zypper install libaio-devel</div><div class="line">          If you really do not want it, pass -DIGNORE_AIO_CHECK to cmake.          </div><div class="line">Call Stack (most recent call first):</div><div class="line">  CMakeLists.txt:131 (INCLUDE)</div><div class="line">  </div><div class="line">原因：刚开始第一次执行cmake的时候就产生了CMakeCache.txt，</div><div class="line">这个时候我并没有安装libaio-devel库，</div><div class="line">然后继续安装依赖库后再执行cmake其实读取的依然是前面生成的cache文件,</div><div class="line">导致cmake判断libaio-devel一直未被安装。</div><div class="line"></div><div class="line">解决：我们rm删除CMakeCache.txt文件后重新执行cmake命令</div></pre></td></tr></table></figure>
<p>ref<br><a href="https://github.com/Meituan-Dianping/SQLAdvisor/blob/master/doc/QUICK_START.md" target="_blank" rel="external">QUICK_START</a><br><a href="https://github.com/Meituan-Dianping/SQLAdvisor/blob/master/doc/THEORY_PRACTICES.md" target="_blank" rel="external">THEORY_PRACTICES</a></p>
<hr>
<p>您的鼓励是我写作最大的动力</p>
<p>俗话说，投资效率是最好的投资。 如果您感觉我的文章质量不错，读后收获很大，预计能为您提高 10% 的工作效率，不妨小额捐助我一下，让我有动力继续写出更多好文章。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;&lt;b&gt;简介&lt;/b&gt;&lt;/h5&gt;&lt;p&gt;SQLAdvisor是由美团点评公司技术工程部DBA团队（北京）开发维护的一个分析SQL给出索引优化建议的工具。它基于MySQ
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>lua基本语法</title>
    <link href="https://t1ger.github.io/2017/02/14/lua%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
    <id>https://t1ger.github.io/2017/02/14/lua基本语法/</id>
    <published>2017-02-14T09:46:12.000Z</published>
    <updated>2017-02-17T10:00:12.371Z</updated>
    
    <content type="html"><![CDATA[<h5 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a><b>关键字</b></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">and	break	do	else	elseif</div><div class="line">end	false	for	function	if</div><div class="line">in	local	nil	not	or</div><div class="line">repeat	return	then	true	until	while</div></pre></td></tr></table></figure>
<h5 id="运算"><a href="#运算" class="headerlink" title="运算"></a><b>运算</b></h5><ul>
<li><p>数字运算</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">支持+，-，*，/，…… 比如2^2 结果为4,2^4结果为16</div><div class="line">连接两个字符串，用&quot;..&quot;运算符</div></pre></td></tr></table></figure>
</li>
<li><p>赋值运算</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">a,b,c,d=1,2,3,4  --多变量一起赋值</div><div class="line">a,b=b,a --交换变量功能</div><div class="line">在默认情况下，变量是全局的。如果需要使用局部变量，使用关键字loacal</div><div class="line">local a,b,c =1,2,3 --a,b,c都是局部变量</div></pre></td></tr></table></figure>
</li>
<li><p>逻辑运算</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">and,or,not</div><div class="line">在lua 中，只有false和nil被计算为false,其他数据都被计算为true,0也是true</div><div class="line">and和or 的运算结果不是true和false,而是和它的两个操作数相关</div><div class="line"></div><div class="line">a and b :如果a为false,则返回a,否则返回b</div><div class="line">a or  b :如果a为true,则返回a,否则返回b</div><div class="line"></div><div class="line">模拟c语言中的语句：x=a?b:c,在lua中，可以写成：x=a and b or c都是局部变量</div><div class="line">有用的语句：x=x or v,相当于： if not x then x=v end</div></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="条件判断语句"><a href="#条件判断语句" class="headerlink" title="条件判断语句"></a><b>条件判断语句</b></h5><ul>
<li><p>if</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">if condition then</div><div class="line">		...</div><div class="line">elseif condition then</div><div class="line">		... else ...</div><div class="line">end</div></pre></td></tr></table></figure>
</li>
<li><p>repeat</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">repeat ... until condition</div></pre></td></tr></table></figure>
</li>
<li><p>while</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">while condition</div><div class="line">do</div><div class="line">	...</div><div class="line">end</div></pre></td></tr></table></figure>
</li>
<li><p>for</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">for var=v1,vn,step</div><div class="line">do</div><div class="line">	...</div><div class="line">end</div><div class="line"></div><div class="line">for var1,var2,... varn in table</div><div class="line">do</div><div class="line">	...</div><div class="line">end</div></pre></td></tr></table></figure>
</li>
<li><p>闭包</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">eg one.</div><div class="line">function newCounter()</div><div class="line">	local i=0</div><div class="line">	return function()  -- anonymous function</div><div class="line">		i=i+1</div><div class="line">			return i</div><div class="line">	end</div><div class="line">end</div><div class="line"></div><div class="line">c1=newCounter()</div><div class="line">print(c1()) --&gt;1</div><div class="line">print(c1()) --&gt;2</div><div class="line"></div><div class="line">eg two.</div><div class="line">function myPower(x)</div><div class="line">	return function(y) return y^x end</div><div class="line">end</div><div class="line"></div><div class="line">power2=myPower(2)</div><div class="line">power3=myPower(3)</div><div class="line"></div><div class="line">print(power2(4)) </div><div class="line">print(power3(5))</div></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="常用结构"><a href="#常用结构" class="headerlink" title="常用结构"></a><b>常用结构</b></h5><ul>
<li>table<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">table 是lua的重要数据类型</div><div class="line">table 类似于 python中的字典</div><div class="line">table 只能通过构造式来创建</div><div class="line"></div><div class="line">lua code</div><div class="line"></div><div class="line">tab=&#123;a=10,b=20,c=30,d=40&#125;</div><div class="line">print(tab[&quot;a&quot;])</div><div class="line"></div><div class="line">comment:</div><div class="line">a)table中的每项要求是 key=value的形式</div><div class="line">b)key只能是字符串，这里的a,b,c,d都是字符串，但是不能加引号</div><div class="line">c)通过key来访问table的值，这时候 a必须加引号</div><div class="line"></div><div class="line"></div><div class="line">tab=&#123;10,m=20,11,12,13&#125;</div><div class="line">print(tab[1]) =10</div><div class="line">print(tab[2]) =11</div><div class="line">print(tab[3]) =12</div><div class="line">print(tab[4]) =13</div><div class="line"></div><div class="line">get table length</div><div class="line">print(table.getn(tab))  -&gt; 4</div><div class="line">print(#tab)             -&gt; 4</div><div class="line"></div><div class="line">for k,v in pairs(tab) do</div><div class="line">		print(k,&quot;:&quot;,v)</div><div class="line">end</div><div class="line"></div><div class="line">1:10</div><div class="line">2:11</div><div class="line">3:12</div><div class="line">4:13</div><div class="line">m:20</div><div class="line"></div><div class="line">注释：</div><div class="line">a)省略key,会自动以1开始编号，并跳过设置过的key</div><div class="line">b)获取表长度，只有当表使用1自动编号开始，可以获取</div></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="lua表空判断"><a href="#lua表空判断" class="headerlink" title="lua表空判断"></a><b>lua表空判断</b></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">local a =&#123;&#125;</div><div class="line">判断table a是否为空，有提供api table.maxn(a) 或 #a 获取表a长度，</div><div class="line">该情况只针对key为数字且安装递增方式。</div><div class="line"></div><div class="line">对于自定义key的情况下，获取表长度会失败，可通过lua内置next函数解决</div></pre></td></tr></table></figure>
<h5 id="MetaTable和MetaMethod"><a href="#MetaTable和MetaMethod" class="headerlink" title="MetaTable和MetaMethod"></a><b>MetaTable和MetaMethod</b></h5><p>MetaTable和MetaMethod是lua中的重要语法，MetaTable用来做类似C++重载操作符的功能</p>
<p>假如有两个函数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">fraction_a =&#123;numerator=2,denominator=3&#125;</div><div class="line">fraction_b =&#123;numerator=4,denominator=7&#125;</div></pre></td></tr></table></figure></p>
<p>如果要实现分数见相加：2/3+4/7,执行fraction_a+fraction_b会报错<br>如果使用MetaTable,则如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">fraction_op=&#123;&#125;</div><div class="line">function fraction_op.__add(f1,f2)</div><div class="line">	ret = &#123;&#125;</div><div class="line">	ret.numerator=f1.numerator*f2.denominator+f2.numerator*f1.denominator</div><div class="line">	ret.denominator=f1.denominator*f2.denominator</div><div class="line">	return ret</div><div class="line">end</div><div class="line"></div><div class="line">setmetatable(fraction_a,fraction_op)</div><div class="line">setmetatable(fraction_a,fraction_op)</div><div class="line"></div><div class="line">fraction_s = fraction_a + fraction_b</div></pre></td></tr></table></figure></p>
<p>至于__add是MetaMethod,这是lua内建约定的，还有如下的MetaMethod：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">__add(a,b)  	对应a+b</div><div class="line">__sub(a,b)  	对应a-b</div><div class="line">__mul(a,b)		对应a*b</div><div class="line">__div(a,b)		对应a/b</div><div class="line">__mod(a,b)		对应a%b</div><div class="line">__pow(a,b)		对应a^b </div><div class="line">__unm(a)		对应-a</div><div class="line">__concat(a,b) 	对应a .. b</div><div class="line">__len(a)		对应#a</div><div class="line">__eq(a,b)		对应a==b</div><div class="line">__lt(a,b)		对应a&lt;b</div><div class="line">__le(a,b)   	对应a&lt;=b</div><div class="line">__index(a,b) 	对应a.b</div><div class="line">__newindex(a,b,c)		对应a.b=c</div><div class="line">__call(a,...)		对应a(...)</div></pre></td></tr></table></figure></p>
<p><a href="http://www.codingnow.com/2000/download/lua_manual.html" target="_blank" rel="external">Lua 5.1 参考手册</a><br><a href="http://17173ops.com/2013/11/01/17173-ngx-lua-manual.shtml#toc9" target="_blank" rel="external">lua基本语法</a><br><a href="http://book.luaer.cn/" target="_blank" rel="external">Programming in Lua</a></p>
<hr>
<p>您的鼓励是我写作最大的动力</p>
<p>俗话说，投资效率是最好的投资。 如果您感觉我的文章质量不错，读后收获很大，预计能为您提高 10% 的工作效率，不妨小额捐助我一下，让我有动力继续写出更多好文章。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;关键字&quot;&gt;&lt;a href=&quot;#关键字&quot; class=&quot;headerlink&quot; title=&quot;关键字&quot;&gt;&lt;/a&gt;&lt;b&gt;关键字&lt;/b&gt;&lt;/h5&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>HTTP调试工具HTTPie</title>
    <link href="https://t1ger.github.io/2017/01/19/HTTP%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7HTTPie/"/>
    <id>https://t1ger.github.io/2017/01/19/HTTP调试工具HTTPie/</id>
    <published>2017-01-19T09:33:50.000Z</published>
    <updated>2017-01-19T10:11:16.573Z</updated>
    
    <content type="html"><![CDATA[<p>HTTPie(读aych-tee-tee-pie)是一个 HTTP 的命令行客户端,其目标是让 CLI 和 web 服务之间的交互尽可能的人性化.<br>HTTPie 采用 Python 开发，底层用到了 Requests 和 Pygments 库，缺省支持json，比curl的语法更加简洁.</p>
<p>安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#Debian，Ubuntu 或者 Linux Mint：</div><div class="line">sudo apt-get install httpie</div><div class="line">#linux</div><div class="line">pip install httpie</div><div class="line">#centos7 </div><div class="line">yum -y install python2-httpie.noarch</div></pre></td></tr></table></figure></p>
<p>用法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">#simulation commit a form</div><div class="line">http -f POST iweishao.com username=neo</div><div class="line"></div><div class="line">#display more detailed request</div><div class="line">http -v iweishao.com</div><div class="line"></div><div class="line">#display Header</div><div class="line">http -h iweishao.com</div><div class="line"></div><div class="line">#display Body</div><div class="line">http -b iweishao.com</div><div class="line"></div><div class="line">#download file</div><div class="line">http -d iweishao.com</div><div class="line"></div><div class="line">#request a delete method</div><div class="line">http DELETE iweishao.com</div><div class="line"></div><div class="line">#pass json data request(default json request)</div><div class="line">http PUT iweishao.com name=neo password=neo_password</div><div class="line">#if json data not string use := to serperate,eg</div><div class="line">http PUT iweishao.com name=neo password=neo_password age:=28 a:=true streets:=&apos;[&quot;a&quot;,&quot;b&quot;]&apos;</div><div class="line"></div><div class="line">#simulation Form Post method,Content-Type: application/x-www-form-urlencoded; charset=utf-8</div><div class="line">http --form POST iweishao.com name=&apos;neo&apos;</div><div class="line"></div><div class="line">#simulation Form upload,Content-Type: multipart/form-data</div><div class="line">http -f POST iweishao.com/jobs name=&apos;neo&apos; file@~/test.pdf</div><div class="line"></div><div class="line">#modify request header,use : serperate</div><div class="line">http iweishao.com User-Agent:Yhz/1.0 &apos;Cookie:a=b;b=c&apos; Referer:http://iweishao.com/</div><div class="line"></div><div class="line">#auth</div><div class="line">http -a username:password iweishao.com</div><div class="line">http --auth-type=digest -a username:password iweishao.com</div><div class="line"></div><div class="line">#use http proxy</div><div class="line">http --proxy=http:http://192.168.1.130:8060 iweishao.com</div><div class="line">http --proxy=http:http://user:pass@192.168.1.130:8060 iweishao.com</div></pre></td></tr></table></figure></p>
<p>高级用法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"># display all and direct</div><div class="line">http --all --follow iweishao.com/redirect/3</div><div class="line"></div><div class="line">#download binary file</div><div class="line">http example.org/movie.mov &gt;mov.mov</div><div class="line"></div><div class="line">#download image,use Imagemagick convert, upload another website</div><div class="line">http octodex.example.com/images/original.jpg |convert - -resize 25% - | http iweishao/Octocats</div><div class="line"># put auth info to session</div><div class="line">http --session=user1 -a user:password example.org X-foo:Bar</div><div class="line">#use before auth session visite</div><div class="line">http --session=user example.org</div></pre></td></tr></table></figure></p>
<hr>
<p>您的鼓励是我写作最大的动力</p>
<p>俗话说，投资效率是最好的投资。 如果您感觉我的文章质量不错，读后收获很大，预计能为您提高 10% 的工作效率，不妨小额捐助我一下，让我有动力继续写出更多好文章。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;HTTPie(读aych-tee-tee-pie)是一个 HTTP 的命令行客户端,其目标是让 CLI 和 web 服务之间的交互尽可能的人性化.&lt;br&gt;HTTPie 采用 Python 开发，底层用到了 Requests 和 Pygments 库，缺省支持json，比cu
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>rpmbuild使用方法简要</title>
    <link href="https://t1ger.github.io/2016/12/29/rpmbuild%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95%E7%AE%80%E8%A6%81/"/>
    <id>https://t1ger.github.io/2016/12/29/rpmbuild使用方法简要/</id>
    <published>2016-12-29T03:05:13.000Z</published>
    <updated>2016-12-29T04:12:36.673Z</updated>
    
    <content type="html"><![CDATA[<h5 id="Install-rpm-build-Package"><a href="#Install-rpm-build-Package" class="headerlink" title="Install rpm-build Package"></a><b>Install rpm-build Package</b></h5><ul>
<li>rpm-build package provides rpmbuild command which is used to build a binary RPM from source code, as configured with .spec file.</li>
<li>rpmdevtools package provides rpmdev-setuptree and rpmdev-newspec commands.</li>
<li>rpmdev-setuptree command is used to creates rpmbuild/ subdirectory, with appropriate subdirectories.</li>
<li><p>rpmdev-newspec command is used to creates a new package spec file in the local directory</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># yum install rpm-build rpmdevtools</div></pre></td></tr></table></figure>
<p>  rpm-build is dependent on the following package</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">elfutils-libelf</div><div class="line">rpm</div><div class="line">rpm-libs</div><div class="line">rpm-python</div></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="Create-RPM-Build-User"><a href="#Create-RPM-Build-User" class="headerlink" title="Create RPM Build User"></a><b>Create RPM Build User</b></h5><p>We do not want to build RPMs as the root account and maybe not even our personal account. It is common to have some form of rpm build account, maybe even, innovatively called rpmbuild. Logging as that user to build RPM files<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># useradd -m build</div><div class="line"># passwd build</div></pre></td></tr></table></figure></p>
<h5 id="RPM-Build-Directories"><a href="#RPM-Build-Directories" class="headerlink" title="RPM Build Directories"></a><b>RPM Build Directories</b></h5><p>rpm-build will automatically create the following directory structures that will be used during the RPM build.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># rpmdev-setuptree</div><div class="line"># ls -lF /root/rpmbuild/</div><div class="line">drwxr-xr-x. 2 root root 4096 Feb  4 12:21 BUILD/</div><div class="line">drwxr-xr-x. 2 root root 4096 Feb  4 12:21 BUILDROOT/</div><div class="line">drwxr-xr-x. 2 root root 4096 Feb  4 12:21 RPMS/</div><div class="line">drwxr-xr-x. 2 root root 4096 Feb  4 12:21 SOURCES/</div><div class="line">drwxr-xr-x. 2 root root 4096 Feb  4 12:21 SPECS/</div><div class="line">drwxr-xr-x. 2 root root 4096 Feb  4 12:21 SRPMS/</div></pre></td></tr></table></figure></p>
<h5 id="Download-Source-Tar-File"><a href="#Download-Source-Tar-File" class="headerlink" title="Download Source Tar File"></a><b>Download Source Tar File</b></h5><p>download the source tar file for the package that you want to build and save it under SOURCES directory</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># wget http://dev.mysql.com/get/Downloads/MySQL-5.6/mysql-5.6.21.tar.gz</div></pre></td></tr></table></figure>
<h5 id="Create-the-SPEC-File"><a href="#Create-the-SPEC-File" class="headerlink" title="Create the SPEC File"></a><b>Create the SPEC File</b></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line">Name:</div><div class="line">Version:</div><div class="line">Release:	1%&#123;?dist&#125;</div><div class="line">Summary:</div><div class="line">Group:</div><div class="line">License:</div><div class="line">URL:</div><div class="line">Source0:</div><div class="line">BuildRoot:	%&#123;_tmppath&#125;/%&#123;name&#125;-%&#123;version&#125;-%&#123;release&#125;-root-%(%&#123;__id_u&#125; -n)</div><div class="line"></div><div class="line">BuildRequires:</div><div class="line">Requires:</div><div class="line"></div><div class="line">%description</div><div class="line"></div><div class="line">%prep</div><div class="line">%setup -q</div><div class="line"></div><div class="line">%build</div><div class="line">%configure</div><div class="line">make %&#123;?_smp_mflags&#125;</div><div class="line"></div><div class="line">%install</div><div class="line">rm -rf %&#123;buildroot&#125;</div><div class="line">make install DESTDIR=%&#123;buildroot&#125;</div><div class="line"></div><div class="line">%clean</div><div class="line">rm -rf %&#123;buildroot&#125;</div><div class="line"></div><div class="line">%files</div><div class="line">%defattr(-,root,root,-)</div><div class="line">%doc</div><div class="line"></div><div class="line">%changelog</div><div class="line"></div><div class="line">Name: Set the name of RPM. Whatever you give here will become the name of RPM.</div><div class="line">Version: Set RPM version number. Default is 1.0</div><div class="line">Release :Set release afterward, default is 1.el6 for RHEL 6</div><div class="line">Summary: describe the contents of the package</div><div class="line">Group: Related to the package groups listed in the XML file.</div><div class="line">License: RHEL 6 software is released under the GPL, but you can release your software under the license you prefer</div><div class="line">URL: Allow you to set the URL of your site.</div><div class="line">Above section specify the information required by package. When you run yum info [package name] or rpm -qi [package name ] command, you saw this information.</div><div class="line">BuildRoot: directory that will be used to actually build the software</div><div class="line">Source0 : specifies the name of the gzip compressed tar archive file. If you have multiple source you can specify them in series Source0, Source1, Source2 etc. For single source you can also use Source phrase.</div><div class="line">BuildRequires or Requires specifies the packages that must be installed before the RPM packages can be built with this spec file.</div><div class="line">%description allows you to include a brief paragraph description of the package.</div><div class="line">%prep commands require to prepare the source code</div><div class="line">%setup move the SOURCE into the BUILD directory and decompress the file archive.</div><div class="line">The –n option specifies the name of the directory where installation script should be entered after decompression.</div><div class="line">%install section is the place where software is compiled and installed.</div><div class="line">%files section allow you to include any additional file that you want in package. You can also specify the directory here, it will includes all files and subdirectories below it as well.</div><div class="line">%clean section will clean up the mess created during the process.</div></pre></td></tr></table></figure>
<p>Let look mysql5.6 program spec file<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div></pre></td><td class="code"><pre><div class="line">Name: mysql-rpm</div><div class="line">Version:5.6.21</div><div class="line">Release: renfengjun</div><div class="line">License: GPL</div><div class="line">URL: http://dev.mysql.com/</div><div class="line">Group: applications/database</div><div class="line">BuildRoot:%&#123;_tmppath&#125;/%&#123;name&#125;-%&#123;version&#125;-%&#123;release&#125;-root</div><div class="line">BuildRequires: cmake</div><div class="line">prefix: /usr/local/mysql</div><div class="line">Summary: mysql-5.6.21.tar.gz</div><div class="line">  </div><div class="line">%description</div><div class="line">The MySQL(TM) software delivers a very fast,multi-threaded, multi-user,</div><div class="line">and robust SQL (Structured Query Language)database server. MySQL Server</div><div class="line">is intended for mission-critical, heavy-loadproduction systems as well</div><div class="line">as for embedding into mass-deployed software.</div><div class="line">  </div><div class="line">%define MYSQL_USER mysql</div><div class="line">%define MYSQL_GROUP mysql</div><div class="line">%define __os_install_post %&#123;nil&#125;</div><div class="line">  </div><div class="line">%build</div><div class="line">cd $OLDPWD/../</div><div class="line">CFLAGS=&quot;-O3 -g -fno-exceptions-static-libgcc -fno-omit-frame-pointer -fno-strict-aliasing&quot;</div><div class="line">CXX=g++</div><div class="line">CXXFLAGS=&quot;-O3 -g -fno-exceptions -fno-rtti-static-libgcc -fno-omit-frame-pointer -fno-strict-aliasing&quot;</div><div class="line">export CFLAGS CXX CXXFLAGS</div><div class="line">  </div><div class="line">cmake .                                                 \</div><div class="line"> -DSYSCONFDIR:PATH=%&#123;prefix&#125;                            \</div><div class="line"> -DCMAKE_INSTALL_PREFIX:PATH=%&#123;prefix&#125;                  \</div><div class="line"> -DCMAKE_BUILD_TYPE:STRING=Release                      \</div><div class="line"> -DENABLE_PROFILING:BOOL=ON                             \</div><div class="line"> -DWITH_DEBUG:BOOL=OFF                                  \</div><div class="line"> -DWITH_VALGRIND:BOOL=OFF                               \</div><div class="line">  -DENABLE_DEBUG_SYNC:BOOL=OFF                           \</div><div class="line"> -DWITH_EXTRA_CHARSETS:STRING=all                       \</div><div class="line"> -DWITH_SSL:STRING=bundled                              \</div><div class="line"> -DWITH_UNIT_TESTS:BOOL=OFF                             \</div><div class="line"> -DWITH_ZLIB:STRING=bundled                             \</div><div class="line"> -DWITH_PARTITION_STORAGE_ENGINE:BOOL=ON                \</div><div class="line"> -DWITH_INNOBASE_STORAGE_ENGINE:BOOL=ON                 \</div><div class="line"> -DWITH_ARCHIVE_STORAGE_ENGINE:BOOL=ON                  \</div><div class="line"> -DWITH_BLACKHOLE_STORAGE_ENGINE:BOOL=ON                \</div><div class="line"> -DWITH_PERFSCHEMA_STORAGE_ENGINE:BOOL=ON               \</div><div class="line"> -DDEFAULT_CHARSET=utf8                                 \</div><div class="line"> -DDEFAULT_COLLATION=utf8_general_ci                    \</div><div class="line"> -DWITH_EXTRA_CHARSETS=all                             \</div><div class="line"> -DENABLED_LOCAL_INFILE:BOOL=ON                         \</div><div class="line"> -DWITH_EMBEDDED_SERVER=0                               \</div><div class="line"> -DINSTALL_LAYOUT:STRING=STANDALONE                     \</div><div class="line"> -DCOMMUNITY_BUILD:BOOL=ON                              \</div><div class="line">  -DMYSQL_SERVER_SUFFIX=&apos;-r5436&apos;;</div><div class="line">  </div><div class="line">make -j `cat /proc/cpuinfo | grep processor| wc-l`</div><div class="line">  </div><div class="line">%install</div><div class="line">cd $OLDPWD/../</div><div class="line">make DESTDIR=$RPM_BUILD_ROOT install</div><div class="line">  </div><div class="line">%clean</div><div class="line">rm -rf $RPM_BUILD_ROOT</div><div class="line">  </div><div class="line">%pre</div><div class="line">mkdir -p /usr/local/mysql/data</div><div class="line">mkdir -p /usr/local/mysql/run</div><div class="line">mkdir -p /usr/local/mysql/log</div><div class="line">groupadd mysql</div><div class="line">useradd -g mysql mysql</div><div class="line">chown -R mysql:mysql /usr/local/mysql/data</div><div class="line">chown -R mysql:mysql /usr/local/mysql/log</div><div class="line">chown -R mysql:mysql /usr/local/mysql/run</div><div class="line">echo &quot;exportPATH=$PATH:/usr/local/mysql/bin&quot; &gt;&gt; /home/mysql/.bash_profile</div><div class="line">  </div><div class="line">%post</div><div class="line">ln -s %&#123;prefix&#125;/lib %&#123;prefix&#125;/lib64</div><div class="line">cp /usr/local/mysql/support-files/mysql.server/etc/init.d/mysql</div><div class="line">chkconfig mysql on</div><div class="line">   </div><div class="line">%preun</div><div class="line">chkconfig --del mysql</div><div class="line">rm -rf /usr/local</div><div class="line">userdel mysql</div><div class="line">rm -rf /var/spool/mail/mysql</div><div class="line">rm -rf /etc/init.d/mysql</div><div class="line">rm -rf /home/mysql</div><div class="line">  </div><div class="line">%files</div><div class="line">%defattr(-, %&#123;MYSQL_USER&#125;, %&#123;MYSQL_GROUP&#125;)</div><div class="line">%attr(755, %&#123;MYSQL_USER&#125;, %&#123;MYSQL_GROUP&#125;)%&#123;prefix&#125;/*</div><div class="line"></div><div class="line">%changelog</div></pre></td></tr></table></figure></p>
<p>Now,we can start build<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rpmbuild -ba mysql.spec</div></pre></td></tr></table></figure></p>
<h5 id="Packaging-RPMMacros"><a href="#Packaging-RPMMacros" class="headerlink" title="Packaging:RPMMacros"></a><b>Packaging:RPMMacros</b></h5><ul>
<li><p>Macros mimicking autoconf variables</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">%&#123;_sysconfdir&#125;        /etc</div><div class="line">%&#123;_prefix&#125;            /usr</div><div class="line">%&#123;_exec_prefix&#125;       %&#123;_prefix&#125;</div><div class="line">%&#123;_bindir&#125;            %&#123;_exec_prefix&#125;/bin</div><div class="line">%&#123;_libdir&#125;            %&#123;_exec_prefix&#125;/%&#123;_lib&#125;</div><div class="line">%&#123;_libexecdir&#125;        %&#123;_exec_prefix&#125;/libexec</div><div class="line">%&#123;_sbindir&#125;           %&#123;_exec_prefix&#125;/sbin</div><div class="line">%&#123;_sharedstatedir&#125;    /var/lib</div><div class="line">%&#123;_datarootdir&#125;       %&#123;_prefix&#125;/share</div><div class="line">%&#123;_datadir&#125;           %&#123;_datarootdir&#125;</div><div class="line">%&#123;_includedir&#125;        %&#123;_prefix&#125;/include</div><div class="line">%&#123;_infodir&#125;           /usr/share/info</div><div class="line">%&#123;_mandir&#125;            /usr/share/man</div><div class="line">%&#123;_localstatedir&#125;     /var</div><div class="line">%&#123;_initddir&#125;          %&#123;_sysconfdir&#125;/rc.d/init.d</div></pre></td></tr></table></figure>
</li>
<li><p>Other macros and variables for paths</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">%&#123;_var&#125;               /var</div><div class="line">%&#123;_tmppath&#125;           %&#123;_var&#125;/tmp</div><div class="line">%&#123;_usr&#125;               /usr</div><div class="line">%&#123;_usrsrc&#125;            %&#123;_usr&#125;/src</div><div class="line">%&#123;_lib&#125;               lib (lib64 on 64bit multilib systems)</div><div class="line">%&#123;_docdir&#125;            %&#123;_datadir&#125;/doc</div><div class="line">%&#123;buildroot&#125;          %&#123;_buildrootdir&#125;/%&#123;name&#125;-%&#123;version&#125;-%&#123;release&#125;.%&#123;_arch&#125;</div><div class="line">$RPM_BUILD_ROOT       %&#123;buildroot&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Build flags macros and variables<br>These macros should be used as flags for the compiler or linker. Note that the values for the macros below reflect the settings on Fedora 13 (i686) with redhat-rpm-config installed.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">%&#123;__global_cflags&#125;   -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4</div><div class="line">%&#123;optflags&#125;          %&#123;__global_cflags&#125; -m32 -march=i686 -mtune=atom -fasynchronous-unwind-tables</div><div class="line">$RPM_OPT_FLAGS       %&#123;optflags&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>RPM directory macros</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">%&#123;_topdir&#125;            %&#123;getenv:HOME&#125;/rpmbuild</div><div class="line">%&#123;_builddir&#125;          %&#123;_topdir&#125;/BUILD</div><div class="line">%&#123;_rpmdir&#125;            %&#123;_topdir&#125;/RPMS</div><div class="line">%&#123;_sourcedir&#125;         %&#123;_topdir&#125;/SOURCES</div><div class="line">%&#123;_specdir&#125;           %&#123;_topdir&#125;/SPECS</div><div class="line">%&#123;_srcrpmdir&#125;         %&#123;_topdir&#125;/SRPMS</div><div class="line">%&#123;_buildrootdir&#125;      %&#123;_topdir&#125;/BUILDROOT</div></pre></td></tr></table></figure>
</li>
</ul>
<p><a href="https://fedoraproject.org/wiki/Packaging:RPMMacros?rd=Packaging/RPMMacros#RPM_directory_macros" target="_blank" rel="external">Packaging:RPMMacros</a><br><a href="https://fedoraproject.org/wiki/How_to_create_an_RPM_package/zh-cn" target="_blank" rel="external">How to create an RPM package/zh-cn</a></p>
<hr>
<p>您的鼓励是我写作最大的动力</p>
<p>俗话说，投资效率是最好的投资。 如果您感觉我的文章质量不错，读后收获很大，预计能为您提高 10% 的工作效率，不妨小额捐助我一下，让我有动力继续写出更多好文章。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;Install-rpm-build-Package&quot;&gt;&lt;a href=&quot;#Install-rpm-build-Package&quot; class=&quot;headerlink&quot; title=&quot;Install rpm-build Package&quot;&gt;&lt;/a&gt;&lt;b&gt;Install 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ansible使用指北(三)</title>
    <link href="https://t1ger.github.io/2016/12/14/ansible%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8C%97-%E4%B8%89/"/>
    <id>https://t1ger.github.io/2016/12/14/ansible使用指北-三/</id>
    <published>2016-12-14T06:48:45.000Z</published>
    <updated>2016-12-14T08:48:43.986Z</updated>
    
    <content type="html"><![CDATA[<p>前言<br>在前面文章中我们认识了ansible的常用功能，今天我们来了解下ansible变量和ansible api,之后我们来看看如何优化ansible的性能</p>
<h5 id="ansible变量"><a href="#ansible变量" class="headerlink" title="ansible变量"></a><b>ansible变量</b></h5><ul>
<li><p>在Inventory中定义变量</p>
<ul>
<li><p>主机与组</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">mail.example.com</div><div class="line">[webservers]</div><div class="line">foo.example.com</div><div class="line">bar.example.com</div><div class="line">[dbservers]</div><div class="line">one.example.com</div><div class="line">two.example.com</div><div class="line">three.example.com</div></pre></td></tr></table></figure>
</li>
<li><p>主机变量</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[atlanta]</div><div class="line">host1 http_port=80 maxRequestsPerChild=808</div><div class="line">host2 http_port=303 maxRequestsPerChild=909</div></pre></td></tr></table></figure>
</li>
<li><p>组的变量</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[atlanta]</div><div class="line">host1</div><div class="line">host2</div><div class="line">[atlanta:vars]</div><div class="line">ntp_server=ntp.atlanta.example.com</div><div class="line">proxy=proxy.atlanta.example.com</div></pre></td></tr></table></figure>
</li>
<li><p>把一个组作为另一个组的子成员</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">[atlanta]</div><div class="line">host1</div><div class="line">host2</div><div class="line">[raleigh]</div><div class="line">host2</div><div class="line">host3</div><div class="line">[southeast:children]</div><div class="line">atlanta</div><div class="line">raleigh</div><div class="line">[southeast:vars]</div><div class="line">some_server=foo.southeast.example.com</div><div class="line">halon_system_timeout=30</div><div class="line">self_destruct_countdown=60</div><div class="line">escape_pods=2</div><div class="line">[usa:children]</div><div class="line">southeast</div><div class="line">northeast</div><div class="line">southwest</div><div class="line">northwest</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>在playbook中定义变量</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">- hosts: webservers</div><div class="line">  vars:</div><div class="line">    http_port: 80</div></pre></td></tr></table></figure>
</li>
<li><p>在文件和role中定义变量<br>角色默认变量允许你为 included roles 或者 dependent roles(见下) 设置默认变量。要创建默认变量，只需在 roles 目录下添加 defaults/main.yml 文件。这些变量在所有可用变量中拥有最低优先级，可能被其他地方定义的变量(包括 inventory 中的变量)所覆盖</p>
</li>
<li><p>使用变量: 关于Jinja2</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#简单的模板中</div><div class="line">My amp goes to &#123;&#123; max_amp_value &#125;&#125;</div><div class="line"></div><div class="line">#在playbook中直接这样用</div><div class="line">template: src=foo.cfg.j2 dest=&#123;&#123; remote_install_path &#125;&#125;/foo.cfg</div></pre></td></tr></table></figure>
</li>
<li><p>注册变量<br>变量的另一个主要用途是在运行命令时,把命令结果存储到一个变量中.不同模块的执行结果是不同的.运行playbook时使用-v选项可以看到可能的结果值. 在ansible执行任务的结果值可以保存在变量中,以便稍后使用它.在 条件选择 章节有一些示例.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">- hosts: web_servers</div><div class="line">  tasks:</div><div class="line">     - shell: /usr/bin/foo</div><div class="line">       register: foo_result</div><div class="line">       ignore_errors: True</div><div class="line">     - shell: /usr/bin/bar</div><div class="line">       when: foo_result.rc == 5</div></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="ansible-api"><a href="#ansible-api" class="headerlink" title="ansible api"></a><b>ansible api</b></h5><p>ansible api 方便对结果输出的整形，以及二次开发及和其他程序之间的耦合调用，先来个简单例子<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">import ansible.runner</div><div class="line">runner = ansible.runner.Runner(</div><div class="line">   module_name=&apos;ping&apos;,</div><div class="line">   module_args=&apos;&apos;,</div><div class="line">   pattern=&apos;web*&apos;,</div><div class="line">   forks=10</div><div class="line">)</div><div class="line">datastructure = runner.run()</div></pre></td></tr></table></figure></p>
<p>结果如下，有兴趣的同学可以对比用命令行输出的结果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;dark&quot; : &#123;</div><div class="line">       &quot;web1.example.com&quot; : &quot;failure message&quot;</div><div class="line">    &#125;,</div><div class="line">    &quot;contacted&quot; : &#123;</div><div class="line">       &quot;web2.example.com&quot; : 1</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>看个详细的例子<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">#!/usr/bin/python</div><div class="line"></div><div class="line">import ansible.runner</div><div class="line">import sys</div><div class="line"></div><div class="line"># construct the ansible runner and execute on all hosts</div><div class="line">results = ansible.runner.Runner(</div><div class="line">    pattern=&apos;*&apos;, forks=10,</div><div class="line">    module_name=&apos;command&apos;, module_args=&apos;/usr/bin/uptime&apos;,</div><div class="line">).run()</div><div class="line"></div><div class="line">if results is None:</div><div class="line">   print &quot;No hosts found&quot;</div><div class="line">   sys.exit(1)</div><div class="line"></div><div class="line">print &quot;UP ***********&quot;</div><div class="line">for (hostname, result) in results[&apos;contacted&apos;].items():</div><div class="line">    if not &apos;failed&apos; in result:</div><div class="line">        print &quot;%s &gt;&gt;&gt; %s&quot; % (hostname, result[&apos;stdout&apos;])</div><div class="line"></div><div class="line">print &quot;FAILED *******&quot;</div><div class="line">for (hostname, result) in results[&apos;contacted&apos;].items():</div><div class="line">    if &apos;failed&apos; in result:</div><div class="line">        print &quot;%s &gt;&gt;&gt; %s&quot; % (hostname, result[&apos;msg&apos;])</div><div class="line"></div><div class="line">print &quot;DOWN *********&quot;</div><div class="line">for (hostname, result) in results[&apos;dark&apos;].items():</div><div class="line">    print &quot;%s &gt;&gt;&gt; %s&quot; % (hostname, result)</div></pre></td></tr></table></figure></p>
<p>上面的示例基本上都是参照<a href="http://docs.ansible.com/ansible/dev_guide/developing_api.html#python-api-2-0" target="_blank" rel="external">官方页面</a>进行执行的，更多用法可以通过pydoc ansible或者通过python里的help(ansible)查看。另外在多主机执行时，可以使用async(异部)方式运行</p>
<h5 id="ansible-性能优化"><a href="#ansible-性能优化" class="headerlink" title="ansible 性能优化"></a><b>ansible 性能优化</b></h5><ul>
<li><p>优化前的准备—收集数据<br>在 github 发现一个 Ansible 任务计时插件“ansible-profile”，安装这个插件后会显示 ansible-playbook 执行每一个任务所花费的时间。Github 地址：<a href="https://github.com/jlafon/ansible-profile。" target="_blank" rel="external">https://github.com/jlafon/ansible-profile。</a> 这个插件安装很简单，只需要简单的三个命令即可完成安装。在你的 playbook 文件的目录下创建一个目录，目录名 callback_plugins 然后将下载的 profile_tasks.py 文件放到该目录下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">cd /etc/ansible </div><div class="line">mkdir callback_plugins </div><div class="line">cd callback_plugins </div><div class="line">wget https://raw.githubusercontent.com/jlafon/ansible-profile/master/callback_plugins/profile_tasks.py</div></pre></td></tr></table></figure>
</li>
<li><p>关闭 gathering facts<br>如果您观察过 ansible-playbook 的执行过程中，您会发现 ansible-playbook 的第 1 个步骤总是执行 gather facts，不论你有没有在 playbook 设定这个 tasks。如果你不需要获取被控机器的 fact 数据的话，你可以关闭获取 fact 数据功能。关闭之后，可以加快 ansible-playbook 的执行效率，尤其是你管理很大量的机器时，这非常明显。关闭获取 facts 很简单，只需要在 playbook 文件中加上“gather_facts: no”即可。如下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">--- </div><div class="line"> - hosts: 172.16.64.240 </div><div class="line"> gather_facts: no </div><div class="line">  remote_user: liheng </div><div class="line">  sudo: yes </div><div class="line">  roles: </div><div class="line">  - &#123;role: profile_test&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>SSH PIPElinING<br>SSH pipelining 是一个加速 Ansible 执行速度的简单方法。ssh pipelining 默认是关闭，之所以默认关闭是为了兼容不同的 sudo 配置，主要是 requiretty 选项。如果不使用 sudo，建议开启。打开此选项可以减少 ansible 执行没有传输时 ssh 在被控机器上执行任务的连接数。不过，如果使用 sudo，必须关闭 requiretty 选项。修改 /etc/ansible/ansible.cfg 文件可以开启 pipelining</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">pipelining=False</div><div class="line">修改为</div><div class="line">pipelining=True</div></pre></td></tr></table></figure>
</li>
<li><p>ControlPersist<br>ControlPersist 特性需要高版本的 SSH 才支持，CentOS 6 默认是不支持的，如果需要使用，需要自行升级 openssh。ControlPersist 即持久化 socket，一次验证，多次通信。并且只需要修改 ssh 客户端就行，也就是 Ansible 机器即可</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">cat ~/.ssh/config </div><div class="line"> Host * </div><div class="line">  Compression yes </div><div class="line">  ServerAliveInterval 60 </div><div class="line">  ServerAliveCountMax 5 </div><div class="line">  ControlMaster auto </div><div class="line">  ControlPath ~/.ssh/sockets/%r@%h-%p</div><div class="line">  ControlPersist 4h</div></pre></td></tr></table></figure>
<p>  在开启了 ControlPersist 特性后，SSH 在建立了 sockets 之后，节省了每次验证和创建的时间。在网络状况不是特别理想，尤其是跨互联网的情况下，所带来的性能提升是非常可观的。有这边需求的，试试就知道了</p>
</li>
</ul>
<h5 id="Ansible-playbook-技巧"><a href="#Ansible-playbook-技巧" class="headerlink" title="Ansible-playbook 技巧"></a><b>Ansible-playbook 技巧</b></h5><ul>
<li><p>获取执行命令的输出 –Register<br>register 关键字可以存储指定命令的输出结果到一个自定义的变量中，我们通过访问这个自定义变量就可以获取到命令的输出结果。Register 的使用很方便，只需要在 task 声明 register 关键字，并自定义一个变量名就可以。如下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">- name: echo date </div><div class="line">  command: date </div><div class="line">  register: date_output </div><div class="line"></div><div class="line"> - name: echo date_output </div><div class="line">  command: echo &quot;30&quot;</div><div class="line">  when: date_output.stdout.split(&apos; &apos;)[2] == &quot;30&quot;</div></pre></td></tr></table></figure>
<p>这里第 1 个 task 是执行了一个 date 命令，register 关键字将 date 命令的输出存储到 date_output 变量名。第 2 个 task 对输出进行分析，并使用 when 对关键字对分析后的进行判断，如果匹配，则执行这个 task，不匹配就不执行。这里要重点说下的，因为 register 获取到的输出内容都是字符串，而 ansible 又是 python 写的，你可以使用 python 字符串的方法对其做处理，比如本文中使用的 split，还可以使用 find 方法。个人觉得，真是非常灵活方便</p>
</li>
<li><p>task委托<br>在对一组服务器 server_group1 执行操作过程中，需要在另外一台机器 A 上执行一个操作，比如在 A 服务器上添加一条 hosts 记录，这些操作必须要在一个 playbook 联动完成。也就是是说 A 服务器这个操作与 server_group1 组上的服务器有依赖关系。Ansible 默认只会在定义好的一组服务器上执行相同的操作，这个特性对于执行批处理是非常有用的。但如果在这过程中需要同时对另外 1 台机器执行操作时，就需要用到 Ansible 的任务委派功能（delegate_to）。使用 delegate_to 关键字可以委派任务到指定的机器上运行。在 playbook 的操作如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">- name: add host record </div><div class="line">  shell: &apos;echo &quot;192.168.1.100 test.xyz.com&quot; &gt;&gt; /etc/hosts&apos;</div><div class="line"></div><div class="line"> - name: add host record to center server </div><div class="line">  shell: &apos;echo &quot;192.168.1.100 test.xyz.com &quot; &gt;&gt; /etc/hosts&apos;</div><div class="line">  delegate_to: 192.168.1.1</div></pre></td></tr></table></figure>
<p>  任务委派功能还可以用于以下场景：<br>a)在部署之前将一个主机从一个负载均衡集群中删除<br>b)当你要对一个主机做改变之前去掉相应 dns 的记录<br>c)当在一个存储设备上创建 iscsi 卷的时候<br>d)当使用外的主机来检测网络出口是否正常的时候</p>
</li>
<li><p>本地操作功能 –local_action<br>Ansible 默认只会对控制机器执行操作，如果需要在 Ansible 本机执行操作,可以使用 delegate_to( 任务委派 ),可以使用另外一外功能实现，这就是 local_action 关键字</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">- name: add host record to center server </div><div class="line"> local_action: shell &apos;echo &quot;192.168.1.100 test.xyz.com &quot; &gt;&gt; /etc/hosts&apos;</div></pre></td></tr></table></figure>
<p>  当然您也可以使用 connection:local 方法，如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">- name: add host record to center server </div><div class="line">  shell: &apos;echo &quot;192.168.1.100 test.xyz.com &quot; &gt;&gt; /etc/hosts&apos;</div><div class="line">  connection: local</div></pre></td></tr></table></figure>
</li>
<li><p>选择性执行 task–Tag（标签）<br>您可能因为某些原因，会创建一个很大型的 playbook，但是你可能只想想运行其中特定部分的配置而无需要运行整个 playbook 。那么这时你可能需要用到 tag 功能。示例如下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">- name: yun install package </div><div class="line"> yum: name=&#123;&#123; item &#125;&#125; state=installed </div><div class="line"> with_items: </div><div class="line">    - httpd </div><div class="line">    - memcached </div><div class="line"> tags: </div><div class="line">    - packages </div><div class="line"></div><div class="line">- name: configuration modity </div><div class="line"> template: src=templates/src.j2 dest=/etc/foo.conf </div><div class="line"> tags: </div><div class="line">     - configuration</div></pre></td></tr></table></figure>
<p>如果你只想运行 playbook 中的”configuration”和”packages”，你可以这样做</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ansible-playbook example.yml – tags &quot;configuration,packages&quot;</div></pre></td></tr></table></figure>
<p>  如果你只想执行 playbook 中某个特定任务之外的所有任务，你可以这样做：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ansible-playbook example.yml – skip-tags &quot;configuration&quot;</div></pre></td></tr></table></figure>
<p>tag 特性是一个不错的功能，但如果真的是要维护一个大型的 playbook，还是建议将 playbook 按功能或应用拆分成多个 playbook，然后再在主 playbook include 其他子 playbook，这样即既利于维护也方便管理</p>
</li>
</ul>
<p>ref<br><a href="http://docs.ansible.com/ansible/dev_guide/developing_api.html#python-api-2-0" target="_blank" rel="external">python-api-2-0</a><br><a href="http://www.ansible.com.cn/docs/intro_inventory.html#id11" target="_blank" rel="external">Inventory </a><br><a href="http://docs.ansible.com/ansible/playbooks_variables.html" target="_blank" rel="external">Docs Variables</a><br><a href="http://www.ibm.com/developerworks/cn/linux/1608_lih_ansible/index.html?ca=drs-" target="_blank" rel="external">Ansible 进阶技巧</a><br><a href="http://www.361way.com/playbook-advanced/4443.html" target="_blank" rel="external">ansible小结（九）playbook进阶</a></p>
<hr>
<p>您的鼓励是我写作最大的动力</p>
<p>俗话说，投资效率是最好的投资。 如果您感觉我的文章质量不错，读后收获很大，预计能为您提高 10% 的工作效率，不妨小额捐助我一下，让我有动力继续写出更多好文章。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前言&lt;br&gt;在前面文章中我们认识了ansible的常用功能，今天我们来了解下ansible变量和ansible api,之后我们来看看如何优化ansible的性能&lt;/p&gt;
&lt;h5 id=&quot;ansible变量&quot;&gt;&lt;a href=&quot;#ansible变量&quot; class=&quot;head
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ansible使用指北(二)</title>
    <link href="https://t1ger.github.io/2016/12/13/ansible%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8C%97-%E4%BA%8C/"/>
    <id>https://t1ger.github.io/2016/12/13/ansible使用指北-二/</id>
    <published>2016-12-13T10:31:21.000Z</published>
    <updated>2016-12-14T08:49:28.731Z</updated>
    
    <content type="html"><![CDATA[<p>前言<br>在上一篇文章里我们了解了ansible的常用模块，今天我们来了解下ansible-playbook,ansbile-playbook是一系统ansible命令的集合，其利用yaml 语言编写,ansbile-playbook命令根据自上而下的顺序依次执行。</p>
<p>playbook通过ansible-playbook命令使用,它的参数和ansible命令类似,如参数-k(–ask-pass) 和 -K (–ask-sudo) 来询问ssh密码和sudo密码,-u指定用户,这些指令也可以通过规定的单元写在playbook 。<br>ansible-playbook的简单使用方法: ansible-playbook play.yml </p>
<h4 id="ansible-Example"><a href="#ansible-Example" class="headerlink" title="ansible Example"></a><b>ansible Example</b></h4><p>现在给出一个ansible-playbook示例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">- hosts: webservers</div><div class="line">  vars:</div><div class="line">    http_port: 80</div><div class="line">    max_clients: 200</div><div class="line">  remote_user: root</div><div class="line">  tasks:</div><div class="line">  - name: ensure apache is at the latest version</div><div class="line">    yum: name=httpd state=latest</div><div class="line">  - name: write the apache config file</div><div class="line">    template: src=/srv/httpd.j2 dest=/etc/httpd.conf</div><div class="line">    notify:</div><div class="line">    - restart apache</div><div class="line">  - name: ensure apache is running (and enable it at boot)</div><div class="line">    service: name=httpd state=started enabled=yes</div><div class="line">  handlers:</div><div class="line">    - name: restart apache</div><div class="line">      service: name=httpd state=restarted</div></pre></td></tr></table></figure></p>
<p>hosts参数指定了对哪些主机进行操作<br>vars参数指定了变量<br>remote_user 则用于指定执行任务的用户<br>tasks指定了一个任务</p>
<ul>
<li>name参数是对任务的描述</li>
<li>yum参数是执行的任务</li>
<li>template参数指拷贝的模板</li>
<li>notify触发条件，指config有变化是重启服务<br>handlers指task 执行完成以后需要调用的任务<br>备注：在 notify 中定义内容一定要和tasks中定义的 - name 内容一样，这样才能达到触发的效果，否则会不生效</li>
</ul>
<p>从这个示例我们可以看出playbook的构成<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">playbooks组成：</div><div class="line">  Target section：   定义要执行 playbook 主机组</div><div class="line">  Variable section： 定义 playbook 运行使用的变量</div><div class="line">  Task section：     定义执行的任务列表</div><div class="line">  Handler section：  定义 task 执行完成以后需要调用的任务</div></pre></td></tr></table></figure></p>
<h4 id="Include-Statements"><a href="#Include-Statements" class="headerlink" title="Include Statements"></a><b>Include Statements</b></h4><ul>
<li><p>普通的include:一个 task include file 由一个普通的 task 列表所组成，像这样:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line"># possibly saved as tasks/foo.yml</div><div class="line">- name: placeholder foo</div><div class="line">  command: /bin/foo</div><div class="line">- name: placeholder bar</div><div class="line">  command: /bin/bar</div></pre></td></tr></table></figure>
<p>  Include 指令看起来像下面这样，在一个 playbook 中，Include 指令可以跟普通的 task 混合在一起使用:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">tasks:</div><div class="line">  - include: tasks/foo.yml</div></pre></td></tr></table></figure>
</li>
<li><p>参数化的 include<br>如果我们要部署多个 wordpress 实例，我们可将所有的 wordpress task 写在一个 wordpress.yml 文件中， 然后像下面这样使用 wordpress.yml 文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">tasks:</div><div class="line">  - include: wordpress.yml wp_user=timmy</div><div class="line">  - include: wordpress.yml wp_user=alice</div><div class="line">  - include: wordpress.yml wp_user=bob</div></pre></td></tr></table></figure>
<p>  备注：Ansible 1.4 及以后的版本，include 语法可更为精简，这种写法同样允许传递列表和字典参数:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">tasks:</div><div class="line"> - &#123; include: wordpress.yml, wp_user: timmy, ssh_keys: [ &apos;keys/one.txt&apos;, &apos;keys/two.txt&apos; ] &#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Include 语句也可用来将一个 playbook 文件导入另一个 playbook 文件。这种方式允许你定义一个 顶层的 playbook，这个顶层 playbook 由其他 playbook 所组成,先看一个例子吧</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">- name: this is a play at the top level of a file</div><div class="line">  hosts: all</div><div class="line">  remote_user: root</div><div class="line">  tasks:</div><div class="line">  - name: say hi</div><div class="line">    tags: foo</div><div class="line">    shell: echo &quot;hi...&quot;</div><div class="line">- include: load_balancers.yml</div><div class="line">- include: webservers.yml</div><div class="line">- include: dbservers.yml</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="Playbook-Roles"><a href="#Playbook-Roles" class="headerlink" title="Playbook Roles"></a><b>Playbook Roles</b></h4><ul>
<li><p>Roles 基于一个已知的文件结构，去自动的加载某些 vars_files，tasks 以及 handlers。基于 roles 对内容进行分组，使得我们可以容易地与其他用户分享 roles</p>
<p>  Ansible主要是通过一个inventory来定义role和主机之间的匹配，通过一个ini风格的配置文件来管理所有的主机，通过一个<br>group_vars下与主机组同名的文件来管理变量，或者host_vars下与主机同名的文件来管理变量(和pillar类似)，然后按照固定的目录<br>结构在角色名目录下创建好files, handlers, tasks, templates,<br>vars(角色级别的变量)等目录；最后通过ansible命令再跟一系列的参数指定好inventory, playbooks,<br>user等来触发对所有主机的配置<br>项目的结构如下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">site.yml</div><div class="line">webservers.yml</div><div class="line">fooservers.yml</div><div class="line">roles/</div><div class="line">   common/</div><div class="line">     files/</div><div class="line">     templates/</div><div class="line">     tasks/</div><div class="line">     handlers/</div><div class="line">     vars/</div><div class="line">     defaults/</div><div class="line">     meta/</div><div class="line">   webservers/</div><div class="line">     files/</div><div class="line">     templates/</div><div class="line">     tasks/</div><div class="line">     handlers/</div><div class="line">     vars/</div><div class="line">     defaults/</div><div class="line">     meta/</div></pre></td></tr></table></figure>
<p>  playbook 如下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">- hosts: webservers</div><div class="line">  roles:</div><div class="line">     - common</div><div class="line">     - webservers</div></pre></td></tr></table></figure>
<p>  这个 playbook 为一个角色 ‘x’ 指定了如下的行为</p>
<ul>
<li>如果 roles/x/tasks/main.yml 存在, 其中列出的 tasks 将被添加到 play 中</li>
<li>如果 roles/x/handlers/main.yml 存在, 其中列出的 handlers 将被添加到 play 中</li>
<li>如果 roles/x/vars/main.yml 存在, 其中列出的 variables 将被添加到 play 中</li>
<li>如果 roles/x/meta/main.yml 存在, 其中列出的 “角色依赖” 将被添加到 roles 列表中 (1.3 and later)</li>
<li>所有 copy tasks 可以引用 roles/x/files/ 中的文件，不需要指明文件的路径。</li>
<li>所有 script tasks 可以引用 roles/x/files/ 中的脚本，不需要指明文件的路径。</li>
<li>所有 template tasks 可以引用 roles/x/templates/ 中的文件，不需要指明文件的路径。</li>
<li><p>所有 include tasks 可以引用 roles/x/tasks/ 中的文件，不需要指明文件的路径。</p>
<p>如果 roles 目录下有文件不存在，这些文件将被忽略。比如 roles 目录下面缺少了 ‘vars/’ 目录，这也没关系。<br>注意：你仍然可以在 playbook 中松散地列出 tasks，vars_files 以及 handlers，这种方式仍然可用，但 roles 是一种很好的具有组织性的功能特性，我们强烈建议使用它。如果你在 playbook 中同时使用 roles 和 tasks，vars_files 或者 handlers，roles 将优先执行</p>
</li>
</ul>
<p>也可以使用参数化的 roles，这种方式通过添加变量来实现，比如</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">- hosts: webservers</div><div class="line">  roles:</div><div class="line">    - common</div><div class="line">    - &#123; role: foo_app_instance, dir: &apos;/opt/a&apos;,  port: 5000 &#125;</div><div class="line">    - &#123; role: foo_app_instance, dir: &apos;/opt/b&apos;,  port: 5001 &#125;</div></pre></td></tr></table></figure>
<p>也可以为 roles 设置触发条件，像这样:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">- hosts: webservers</div><div class="line">  roles:</div><div class="line">    - &#123; role: some_role, when: &quot;ansible_os_family == &apos;RedHat&apos;&quot; &#125;</div></pre></td></tr></table></figure>
<p>它的工作方式是：将条件子句应用到 role 中的每一个 task 上。关于”条件子句”的讨论参见本文档后面的章节。</p>
<p>最后，你可能希望给 roles 分配指定的 tags。比如:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">- hosts: webservers</div><div class="line">  roles:</div><div class="line">    - &#123; role: foo, tags: [&quot;bar&quot;, &quot;baz&quot;] &#125;</div></pre></td></tr></table></figure>
<p>如果 play 仍然包含有 ‘tasks’ section，这些 tasks 将在所有 roles 应用完成之后才被执行。<br>如果你希望定义一些 tasks，让它们在 roles 之前以及之后执行，你可以这样做:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">- hosts: webservers</div><div class="line">  pre_tasks:</div><div class="line">    - shell: echo &apos;hello&apos;</div><div class="line">  roles:</div><div class="line">    - &#123; role: some_role &#125;</div><div class="line">  tasks:</div><div class="line">    - shell: echo &apos;still busy&apos;</div><div class="line">  post_tasks:</div><div class="line">    - shell: echo &apos;goodbye&apos;</div></pre></td></tr></table></figure>
<p>备注：如果对 tasks 应用了 tags，需确保给 pre_tasks 以及 post_tasks 也同样应用 tags，并且将它们一并传递。特别是当 pre_tasks 和 post_tasks 被用来监视 “停止窗口控制” 或者 “负载均衡” 时要确保这样做</p>
</li>
<li><p>角色默认变量(Role Default Variables)<br>角色默认变量允许你为 included roles 或者 dependent roles(见下) 设置默认变量。要创建默认变量，只需在 roles 目录下添加 defaults/main.yml 文件。这些变量在所有可用变量中拥有最低优先级，可能被其他地方定义的变量(包括 inventory 中的变量)所覆盖</p>
</li>
<li><p>角色依赖(Role Dependencies)<br>“角色依赖” 使你可以自动地将其他 roles 拉取到现在使用的 role 中。”角色依赖” 保存在 roles 目录下的 meta/main.yml 文件中。这个文件应包含一列 roles 和 为之指定的参数，下面是在 roles/myapp/meta/main.yml 文件中的示例</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">dependencies:</div><div class="line">  - &#123; role: common, some_parameter: 3 &#125;</div><div class="line">  - &#123; role: apache, port: 80 &#125;</div><div class="line">  - &#123; role: postgres, dbname: blarg, other_parameter: 12 &#125;</div></pre></td></tr></table></figure>
</li>
<li><p>实战nginx</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line"># mkdir -pv roles/nginx/&#123;tasks,files,templates,handlers,vars,meta,default&#125;</div><div class="line"># ansible all -m setup | grep ansible_processor_cores</div><div class="line">        &quot;ansible_processor_cores&quot;: 1,  \\获取ansible的要调用的相关函数</div><div class="line"># cd roles/nginx/templates/   \\模板文件一定要放到此目录</div><div class="line">vim nginx.conf </div><div class="line">worker_processes &#123;&#123;  ansible_processor_cores &#125;&#125;;  \\调用获取到的函数</div><div class="line"></div><div class="line"># ls -l  roles/nginx/files/</div><div class="line">-rw-r--r--. 1 root root   1290 Nov 12  2014 default.conf</div><div class="line">-rw-r--r--. 1 root root 319456 Mar 29 20:44 nginx-1.4.7-1.el6.ngx.x86_64.rpm</div><div class="line"></div><div class="line">#cd  roles/nginx/tasks/</div><div class="line">[root@localhost tasks]# vim  main.yml </div><div class="line">  - name: copy nginx.rpm</div><div class="line">    copy: src=nginx-1.4.7-1.el6.ngx.x86_64.rpm  dest=/tmp/nginx-1.4.7-1.el6.ngx.x86_64.rpm</div><div class="line">  - name: install nginx</div><div class="line">    shell: yum -y  install /tmp/nginx-1.4.7-1.el6.ngx.x86_64.rpm</div><div class="line">  - name: provides nginx.conf</div><div class="line">    template: src=nginx.conf  dest=/etc/nginx/nginx.conf</div><div class="line">    tags: nginxconf</div><div class="line">    notify:</div><div class="line">    - server restart</div><div class="line">  - name: provides default.conf</div><div class="line">    copy: src=default.conf dest=/etc/nginx/conf.d/default.conf </div><div class="line">    tags: nginxconf</div><div class="line">  - name: server start</div><div class="line">    service: name=nginx enabled=true state=started</div><div class="line">	</div><div class="line">[root@localhost playbook]# cd roles/nginx/handlers/</div><div class="line">[root@localhost handlers]# vim  main.yml </div><div class="line">- name: server restart</div><div class="line">  service: name=nginx  state=restarted</div><div class="line">  </div><div class="line">[root@localhost playbook]# cat site.yml </div><div class="line">- hosts: nginx</div><div class="line">  remote_user: root</div><div class="line">  roles:</div><div class="line">  - nginx</div><div class="line">  </div><div class="line">[root@localhost ]# ansible-playbook site.yml   </div><div class="line"></div><div class="line">[root@localhost playbook]# tree roles/</div><div class="line">roles/</div><div class="line">└── nginx</div><div class="line">    ├── default</div><div class="line">    ├── files</div><div class="line">    │  ├── default.conf</div><div class="line">    │  └── nginx-1.4.7-1.el6.ngx.x86_64.rpm</div><div class="line">    ├── handlers</div><div class="line">    │  └── main.yml</div><div class="line">    ├── meta</div><div class="line">    ├── tasks</div><div class="line">    │  └── main.yml</div><div class="line">    ├── templates</div><div class="line">    │  └── nginx.conf</div><div class="line">    └── vars</div><div class="line">`</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="ansible-Conditionals"><a href="#ansible-Conditionals" class="headerlink" title="ansible Conditionals"></a><b>ansible Conditionals</b></h4><ul>
<li><p>Loops and Conditionals</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">#use list</div><div class="line">tasks:</div><div class="line">    - command: echo &#123;&#123; item &#125;&#125;</div><div class="line">      with_items: [ 0, 2, 4, 6, 8, 10 ]</div><div class="line">      when: item &gt; 5</div><div class="line">#use dict</div><div class="line">- command: echo &#123;&#123; item.key &#125;&#125;</div><div class="line">  with_dict: &quot;&#123;&#123; mydict|default(&#123;&#125;) &#125;&#125;&quot;</div><div class="line">  when: item.value &gt; 5</div></pre></td></tr></table></figure>
</li>
<li><p>The When Statement</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">#group conditions(a logical &apos;or&apos;)</div><div class="line">tasks:</div><div class="line">  - name: &quot;shut down CentOS 6 and Debian 7 systems&quot;</div><div class="line">    command: /sbin/shutdown -t now</div><div class="line">    when: (ansible_distribution == &quot;CentOS&quot; and ansible_distribution_major_version == &quot;6&quot;) or</div><div class="line">          (ansible_distribution == &quot;Debian&quot; and ansible_distribution_major_version == &quot;7&quot;)</div><div class="line"></div><div class="line">#multiple(a logical &apos;and&apos;)</div><div class="line">tasks:</div><div class="line">  - name: &quot;shut down CentOS 6 systems&quot;</div><div class="line">    command: /sbin/shutdown -t now</div><div class="line">    when:</div><div class="line">      - ansible_distribution == &quot;CentOS&quot;</div><div class="line">      - ansible_distribution_major_version == &quot;6&quot;</div></pre></td></tr></table></figure>
<p>备注： example requires the lsb_release package on the target host in order to return the ansible_lsb.major_release fact</p>
</li>
</ul>
<p>ref </p>
<p><a href="http://docs.ansible.com/ansible/playbooks_conditionals.html#loops-and-conditionals" target="_blank" rel="external">Docs-Conditionals</a></p>
<hr>
<p>您的鼓励是我写作最大的动力</p>
<p>俗话说，投资效率是最好的投资。 如果您感觉我的文章质量不错，读后收获很大，预计能为您提高 10% 的工作效率，不妨小额捐助我一下，让我有动力继续写出更多好文章。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前言&lt;br&gt;在上一篇文章里我们了解了ansible的常用模块，今天我们来了解下ansible-playbook,ansbile-playbook是一系统ansible命令的集合，其利用yaml 语言编写,ansbile-playbook命令根据自上而下的顺序依次执行。&lt;/p
    
    </summary>
    
    
  </entry>
  
</feed>
