<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>t1ger的茶馆</title>
  <subtitle>头顶有光终是幻，足下生云未是仙</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://t1ger.github.io/"/>
  <updated>2019-05-10T03:31:06.122Z</updated>
  <id>https://t1ger.github.io/</id>
  
  <author>
    <name>t1ger</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Backup Mysql by [ZRM] for MySQL</title>
    <link href="https://t1ger.github.io/2019/05/10/Backup-Mysql-by-ZRM-for-MySQL/"/>
    <id>https://t1ger.github.io/2019/05/10/Backup-Mysql-by-ZRM-for-MySQL/</id>
    <published>2019-05-10T03:17:23.000Z</published>
    <updated>2019-05-10T03:31:06.122Z</updated>
    
    <content type="html"><![CDATA[<h5 id="install-zrm-backup"><a href="#install-zrm-backup" class="headerlink" title="install zrm backup"></a><b>install zrm backup</b></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install epel-release -y</span><br><span class="line">yum install MySQL-zrm.noarch -y</span><br></pre></td></tr></table></figure>
<h5 id="create-mysql-user-account-privileges"><a href="#create-mysql-user-account-privileges" class="headerlink" title="create mysql user account privileges"></a><b>create mysql user account privileges</b></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant select, insert, update, create, drop, reload, shutdown, alter, super, lock tables, replication client on *.* to &apos;backupuser@&apos;%&apos; identified by &apos;secret password&apos;;</span><br></pre></td></tr></table></figure>
<h5 id="config-zrm-backup"><a href="#config-zrm-backup" class="headerlink" title="config zrm backup"></a><b>config zrm backup</b></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/mysql-zrm/</span><br><span class="line">mkdir dailyrun</span><br><span class="line">cp mysql-zrm.conf dailyrun</span><br><span class="line">cd dailyrun</span><br><span class="line">cat mysql-zrm.conf</span><br><span class="line"></span><br><span class="line">backup-mode=logical</span><br><span class="line">destination=/var/lib/mysql-zrm  //backup directory, make sure disk large enough</span><br><span class="line">retention-policy=180D</span><br><span class="line">compress=1</span><br><span class="line">compress-plugin=/usr/bin/gzip</span><br><span class="line">databases=wikidb forums</span><br><span class="line">user=&quot;backupuser&quot;</span><br><span class="line">password=&quot;password&quot;</span><br><span class="line">host=&quot;192.168.10.1&quot;</span><br><span class="line">port=3306</span><br><span class="line">default-character-set=utf8</span><br><span class="line">mysql-binpath=&quot;/usr/local/mysql/bin&quot;</span><br><span class="line">mailto=&quot;user@company.com.cn&quot;   // make user postfix service start </span><br><span class="line">mail-policy=only-on-error</span><br></pre></td></tr></table></figure>
<h5 id="Perform-a-Backup"><a href="#Perform-a-Backup" class="headerlink" title="Perform a Backup"></a><b>Perform a Backup</b></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#backup now Verification of Backup Images</span><br><span class="line">mysql-zrm --action verify-backup --backup-set dailyrun</span><br><span class="line">mysql-zrm-scheduler --now --backup-set dailyrun     </span><br><span class="line"></span><br><span class="line">#add backup task to schedule, for example, backup database every day 1am</span><br><span class="line">mysql-zrm-scheduler --add --interval daily --start 01:00 --backup-level 0 --backup-set dailyrun</span><br><span class="line"></span><br><span class="line">#query backup schedule info</span><br><span class="line">mysql-zrm-scheduler --query</span><br></pre></td></tr></table></figure>
<h5 id="Backup-Reports"><a href="#Backup-Reports" class="headerlink" title="Backup Reports"></a><b>Backup Reports</b></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql-zrm-reporter --where backup-set=dailyrun --show backup-status-info</span><br><span class="line">mysql-zrm-reporter --where backup-set=dailyrun --show backup-performance-info</span><br><span class="line"># Verification of Backup Images</span><br><span class="line">mysql-zrm --action verify-backup --backup-set dailyrun</span><br></pre></td></tr></table></figure>
<h5 id="Perform-a-full-restoration"><a href="#Perform-a-full-restoration" class="headerlink" title="Perform a full restoration"></a><b>Perform a full restoration</b></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#example for restore database</span><br><span class="line">[root@localhost dailyrun]# mysql-zrm-reporter --show restore-info --where backup-set=dailyrun</span><br><span class="line"></span><br><span class="line">REPORT TYPE : restore-info </span><br><span class="line"></span><br><span class="line">          backup_set  backup_date                  backup_level  backup_directory                          backup_status         comment</span><br><span class="line">-----------------------------------------------------------------------------------------------------------------------------------------------------</span><br><span class="line">            dailyrun  Fri 10 May 2019 09:48:58                0  /var/lib/mysql-zrm/dailyrun/201905100948  Backup succeeded      ----</span><br><span class="line">                      AM CST                                     58</span><br><span class="line"></span><br><span class="line">[root@localhost dailyrun]# mysql-zrm --action restore --backup-set dailyrun --source-directory /var/lib/mysql-zrm/dailyrun/20190510094858/</span><br><span class="line">restore:INFO: ZRM for MySQL Community Edition - version 3.0</span><br><span class="line">dailyrun:restore:INFO: The quick backup-type is supported only for snapshot backups. Setting backup-type to &apos;regular&apos;</span><br><span class="line">dailyrun:restore:WARNING: Binary logging is off.</span><br><span class="line">Warning: Using a password on the command line interface can be insecure.</span><br><span class="line">dailyrun:restore:INFO: Restored database(s) from logical backup:  wikidb forums</span><br><span class="line">dailyrun:restore:INFO: Restore done in 3 seconds.</span><br></pre></td></tr></table></figure>
<p>ref<br><a href="https://github.com/tuhoanganh/mysql-zrm" target="_blank" rel="noopener">mysql-zrm</a><br><a href="https://www.zmanda.com/quick-mysql-backup.html" target="_blank" rel="noopener">[ZRM] for MySQL</a><br><a href="https://www.linux-geex.com/mysql-zrm-backuppc-centos-7/" target="_blank" rel="noopener">MySQL-ZRM and BackupPC – CentOS 7</a></p>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;install-zrm-backup&quot;&gt;&lt;a href=&quot;#install-zrm-backup&quot; class=&quot;headerlink&quot; title=&quot;install zrm backup&quot;&gt;&lt;/a&gt;&lt;b&gt;install zrm backup&lt;/b&gt;&lt;/h5&gt;&lt;f
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Shell命令行处理JSON</title>
    <link href="https://t1ger.github.io/2019/05/09/Shell%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%A4%84%E7%90%86JSON/"/>
    <id>https://t1ger.github.io/2019/05/09/Shell命令行处理JSON/</id>
    <published>2019-05-09T05:43:09.000Z</published>
    <updated>2019-05-09T06:25:41.295Z</updated>
    
    <content type="html"><![CDATA[<h5 id="安装JQ"><a href="#安装JQ" class="headerlink" title="安装JQ"></a><b>安装JQ</b></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget -O /usr/bin/jq https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64</span><br><span class="line">chmod +x /usr/bin/jq</span><br></pre></td></tr></table></figure>
<h5 id="常用举例"><a href="#常用举例" class="headerlink" title="常用举例"></a><b>常用举例</b></h5><ul>
<li><p>原始JSON数据</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;Rd&quot;:&quot;android&quot;,&quot;Ru&quot;:&quot;orginfo&quot;,&quot;service_type&quot;:&quot;&quot;,&quot;level&quot;:&quot;info&quot;,&quot;Rs&quot;:&quot;xzn&quot;,&quot;R&quot;:&quot;MsgInfo&quot;,&quot;runtime&quot;:45,&quot;date&quot;:&quot;2019-05-08 23:59:58&quot;,&quot;Rversion&quot;:&quot;6.7&quot;,&quot;clientip&quot;:&quot;140.97.127.275&quot;&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>格式化输出</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost tmp]# jq -r . abc.json </span><br><span class="line">&#123;</span><br><span class="line">  &quot;Rd&quot;: &quot;android&quot;,</span><br><span class="line">  &quot;Ru&quot;: &quot;orginfo&quot;,</span><br><span class="line">  &quot;service_type&quot;: &quot;&quot;,</span><br><span class="line">  &quot;level&quot;: &quot;info&quot;,</span><br><span class="line">  &quot;Rs&quot;: &quot;xzn&quot;,</span><br><span class="line">  &quot;R&quot;: &quot;MsgInfo&quot;,</span><br><span class="line">  &quot;runtime&quot;: 45,</span><br><span class="line">  &quot;date&quot;: &quot;2019-05-08 23:59:58&quot;,</span><br><span class="line">  &quot;Rversion&quot;: &quot;6.7&quot;,</span><br><span class="line">  &quot;clientip&quot;: &quot;140.97.127.275&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>提取json指定字段转csv</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost tmp]# jq -r &apos;[.runtime,(.clientip|tostring),(.Rs|tostring),(.R|tostring)]|join(&quot;,&quot;)&apos; abc.json       </span><br><span class="line">45,140.97.127.275,xzn,MsgInfo</span><br></pre></td></tr></table></figure>
</li>
<li><p>复杂json数据查询</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">complexJson=&apos;&#123;&quot;uid&quot;:&quot;u2013&quot;,&quot;nameInfo&quot;:[&#123;&quot;firstName&quot;:&quot;java&quot;,&quot;lastName&quot;:&quot;scala&quot;&#125;]&#125;&apos;</span><br><span class="line">echo $&#123;complexJson&#125; |jq</span><br><span class="line">&#123;</span><br><span class="line">  &quot;uid&quot;: &quot;u2013&quot;,</span><br><span class="line">  &quot;nameInfo&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;firstName&quot;: &quot;java&quot;,</span><br><span class="line">      &quot;lastName&quot;: &quot;scala&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">echo $&#123;complexJson&#125; |jq -r &apos;.nameInfo[].lastName&apos;</span><br><span class="line">结果:scala</span><br><span class="line">注意:.nameInfo[].lastName是获取.nameInfo[] json array中每个json object的lastName字段。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$ cat sample.json</span><br><span class="line">[</span><br><span class="line">&#123;</span><br><span class="line">&quot;24hvol&quot;: &quot;3.908&quot;,</span><br><span class="line">&quot;code&quot;: &quot;AUR&quot;</span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">$ cat sample.json |jq -r &apos;.[][&quot;24hvol&quot;]&apos;</span><br><span class="line">3.908</span><br></pre></td></tr></table></figure>
</li>
<li><p>csv文件转json文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cat csvData.csv</span><br><span class="line">1478,john,38</span><br><span class="line">1529,lucy,25</span><br><span class="line">1673,iris,22</span><br><span class="line">jq -R -c &apos;split(&quot;,&quot;)|&#123;&quot;uid&quot;:.[0],&quot;name&quot;:.[1],&quot;age&quot;:.[2]|tonumber&#125;&apos; csvData.csv &gt; csv2json.json</span><br><span class="line">cat csv2json.json</span><br><span class="line">&#123;&quot;uid&quot;:&quot;1478&quot;,&quot;name&quot;:&quot;john&quot;,&quot;age&quot;:38&#125;</span><br><span class="line">&#123;&quot;uid&quot;:&quot;1529&quot;,&quot;name&quot;:&quot;lucy&quot;,&quot;age&quot;:25&#125;</span><br><span class="line">&#123;&quot;uid&quot;:&quot;1673&quot;,&quot;name&quot;:&quot;iris&quot;,&quot;age&quot;:22&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<p>ref<br><a href="https://stedolan.github.io/jq/manual/#Basicfilters" target="_blank" rel="noopener">JQ使用手册</a><br><a href="https://github.com/stedolan/jq/issues/344" target="_blank" rel="noopener">Error with fields starting with a number</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;安装JQ&quot;&gt;&lt;a href=&quot;#安装JQ&quot; class=&quot;headerlink&quot; title=&quot;安装JQ&quot;&gt;&lt;/a&gt;&lt;b&gt;安装JQ&lt;/b&gt;&lt;/h5&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutt
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>How to align partitions for best performance using parted</title>
    <link href="https://t1ger.github.io/2019/04/18/How-to-align-partitions-for-best-performance-using-parted/"/>
    <id>https://t1ger.github.io/2019/04/18/How-to-align-partitions-for-best-performance-using-parted/</id>
    <published>2019-04-18T10:26:10.000Z</published>
    <updated>2019-04-18T10:54:16.730Z</updated>
    
    <content type="html"><![CDATA[<h5 id="backgroud"><a href="#backgroud" class="headerlink" title="backgroud"></a><b>backgroud</b></h5><p>as usual, Trying to create a 10TB partition using parted,I type command like<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">parted -s -a optimal /dev/sdb mklabel gpt -- mkpart primary xfs 1 -1</span><br></pre></td></tr></table></figure></p>
<p>but parted always complains as follows<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The resulting partition is not properly aligned for best performance</span><br></pre></td></tr></table></figure></p>
<h5 id="soulation"><a href="#soulation" class="headerlink" title="soulation"></a><b>soulation</b></h5><p>Add optimal_io_size to alignment_offset and divide the result by physical_block_size. In my case this was<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># cat /sys/block/sdb/queue/optimal_io_size</span><br><span class="line">1048576</span><br><span class="line"># cat /sys/block/sdb/alignment_offset</span><br><span class="line">0</span><br><span class="line">(1048576 + 0) / 512 = 2048</span><br><span class="line"></span><br><span class="line">#Your new parted command should look like</span><br><span class="line">parted -s -a optimal /dev/sdb mklabel gpt -- mkpart primary xfs 4608s 100%</span><br></pre></td></tr></table></figure></p>
<p>The trailing ‘s’ is important: it tells parted that you’re talking about sectors, not bytes or megabytes</p>
<p>finally,let check it,the partition will have been created with no warnings. You can check the alignment thusly (replacing ‘1’ with the partition number if necessary):<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(parted) align-check optimal 1                                            </span><br><span class="line">1 aligned</span><br></pre></td></tr></table></figure></p>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;backgroud&quot;&gt;&lt;a href=&quot;#backgroud&quot; class=&quot;headerlink&quot; title=&quot;backgroud&quot;&gt;&lt;/a&gt;&lt;b&gt;backgroud&lt;/b&gt;&lt;/h5&gt;&lt;p&gt;as usual, Trying to create a 10TB p
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>how to use hexo deploy blog by  private gitlab</title>
    <link href="https://t1ger.github.io/2018/12/27/how-to-use-hexo-deploy-blog-by-private-gitlab/"/>
    <id>https://t1ger.github.io/2018/12/27/how-to-use-hexo-deploy-blog-by-private-gitlab/</id>
    <published>2018-12-27T07:52:17.000Z</published>
    <updated>2018-12-27T08:24:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>环境：<br>gitlab访问地址： gitlab.io.com.cn<br>博客访问地址: tiger.pages.io.com.cn</p>
<p>1.开启GitLab Pages功能<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">##! Define to enable GitLab Pages</span><br><span class="line">pages_external_url &quot;pages.io.com.cn&quot;</span><br><span class="line">gitlab_pages[&apos;enable&apos;] = true</span><br></pre></td></tr></table></figure></p>
<p>2.安装配置GitLab Runner,可以点击<a href="https://packages.gitlab.com/runner/gitlab-runner" target="_blank" rel="noopener">这里</a> ，进行安装<br>通过 gitlab-runner register 命令进行注册，按照提示完成</p>
<p>3.配置nginx，这里nginx没有使用gitlab内置nginx<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen         80;</span><br><span class="line">        server_name   *.pages.io.com.cn;</span><br><span class="line">        error_log  logs/pages_error.log;</span><br><span class="line">        access_log logs/pages_access.log main;</span><br><span class="line"></span><br><span class="line">        charset utf-8;</span><br><span class="line">        index index.html index.htm index.php;</span><br><span class="line">        error_page  404              /404.html;</span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line"></span><br><span class="line">        root  /usr/local/gitlab/$http_host/public;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>4.提交blog代码</p>
<ul>
<li>登录gitlab.io.com.cn,在gitlab新建项目blog，这里为tiger.pages.io.com.cn<br>注意：项目名必须为访问域名，否则无法访问</li>
<li><p>本地新建hexo项目</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ cd test  #存放项目的目录</span><br><span class="line">$ hexo init blog  #下载模版项目</span><br><span class="line">$ cd blog  #打开模板项目目录</span><br><span class="line">$ cnpm install  #下载相关依赖的包</span><br><span class="line">$ cnpm install hexo-deployer-git --save  #安装扩展包</span><br></pre></td></tr></table></figure>
</li>
<li><p>如果一切正常的话，就可以发布到gitlab pages上</p>
</li>
<li><p>添加ssh-key</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;tiger&quot;</span><br><span class="line">git config --global user.email &quot;tiger@gitlab.io.com.cn&quot;</span><br><span class="line">ssh-keygen -t rsa -C &quot;work@tiger.pub&quot;</span><br></pre></td></tr></table></figure>
</li>
<li><p>添加.gitlab-ci.yml 文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">variables:</span><br><span class="line">  WebPath: &quot;/usr/local/gitlab&quot;</span><br><span class="line"></span><br><span class="line">stages:</span><br><span class="line">  - install</span><br><span class="line">  - build</span><br><span class="line">  - deploy</span><br><span class="line"></span><br><span class="line">cache:</span><br><span class="line">  paths:</span><br><span class="line">    - node_modules/</span><br><span class="line">    </span><br><span class="line">install_npm:</span><br><span class="line">  stage: install</span><br><span class="line">  script:</span><br><span class="line">    - npm install</span><br><span class="line">  only:</span><br><span class="line">    - master</span><br><span class="line"></span><br><span class="line">build_public:</span><br><span class="line">  stage: build</span><br><span class="line">  script:</span><br><span class="line">    - hexo g</span><br><span class="line">  only: </span><br><span class="line">    - master</span><br><span class="line"></span><br><span class="line">deploy:</span><br><span class="line">  stage: deploy</span><br><span class="line">  script:</span><br><span class="line">    - hexo d</span><br><span class="line">    - rsync -avz --delete public $WebPath/$CI_PROJECT_NAME</span><br><span class="line">  artifacts:</span><br><span class="line">    paths:</span><br><span class="line">    - public  </span><br><span class="line">  only:</span><br><span class="line">    - master</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改站点配置文件&amp;更换主题</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git remote add origin git@gitlab.io.com.cn/tiger/tiger.pages.io.com.cn.git</span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;init blog&quot;</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>完成之后可以通过<a href="http://tiger.pages.io.com.cn" target="_blank" rel="noopener">http://tiger.pages.io.com.cn</a> 来浏览页面了</p>
<p>ref<br><a href="https://gitlab.com/gitlab-org/gitlab-ce/issues/33240" target="_blank" rel="noopener">Use gitlab pages under the same domain as gitlab</a><br><a href="https://wangxiaokai.vip/posts/2018-05-24-gitlab-ci-publish-hexo/" target="_blank" rel="noopener">个人站点升级持续集成，自动构建和部署</a><br><a href="http://www.daxiblog.com/2018/05/17/%E6%9C%AC%E5%9C%B0%E6%90%AD%E5%BB%BA%E7%9A%84gitlab%E4%B8%AD%E5%BC%80%E5%90%AFpages%E5%8A%9F%E8%83%BD%EF%BC%8C%E4%B8%8D%E9%9C%80%E8%A6%81%E5%9F%9F%E5%90%8D%E4%B9%9F%E5%8F%AF%E4%BB%A5/" target="_blank" rel="noopener">本地搭建的GitLab中开启Pages功能，不需要域名也可以</a></p>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;环境：&lt;br&gt;gitlab访问地址： gitlab.io.com.cn&lt;br&gt;博客访问地址: tiger.pages.io.com.cn&lt;/p&gt;
&lt;p&gt;1.开启GitLab Pages功能&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CentOS6 install Supervisor3</title>
    <link href="https://t1ger.github.io/2018/12/12/CentOS6-install-Supervisor3/"/>
    <id>https://t1ger.github.io/2018/12/12/CentOS6-install-Supervisor3/</id>
    <published>2018-12-12T10:06:52.000Z</published>
    <updated>2018-12-12T10:28:32.000Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li><p>install python-pip</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if exit epel, already install, first remove supervisor</span><br><span class="line">yum remove supervisor</span><br><span class="line"></span><br><span class="line">yum -y install python-pip</span><br></pre></td></tr></table></figure>
</li>
<li><p>install supervisor</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">pip install supervisor</span><br><span class="line"></span><br><span class="line"># supervisord -v</span><br><span class="line">3.3.4</span><br><span class="line"></span><br><span class="line">pip install meld3==1.0.0</span><br></pre></td></tr></table></figure>
</li>
<li><p>config supervisor</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">echo_supervisord_conf &gt; /etc/supervisord.conf</span><br><span class="line"></span><br><span class="line">mkdir /etc/supervisor/conf.d</span><br><span class="line"></span><br><span class="line">/etc/supervisord.conf append below:</span><br><span class="line">[include]</span><br><span class="line">files = /etc/supervisor/conf.d/*.conf</span><br></pre></td></tr></table></figure>
</li>
<li><p>Supervisor manage program, /etc/supervisor/conf.d/xxxx.conf</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[program:appname]</span><br><span class="line">command=/usr/local/redis/bin/redis-server /etc/redis.conf </span><br><span class="line">autostart=true</span><br><span class="line">autorestart=true</span><br><span class="line">user=redis</span><br><span class="line">redirect_stderr=true</span><br></pre></td></tr></table></figure>
</li>
<li><p>add system service</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">curl -o /etc/rc.d/init.d/supervisord https://raw.githubusercontent.com/Supervisor/initscripts/master/redhat-init-equeffelec</span><br><span class="line">chmod 755 /etc/rc.d/init.d/supervisord</span><br><span class="line">chkconfig --add supervisord</span><br><span class="line">service supervisord start</span><br><span class="line">pkill supervisord</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>ref<br><a href="https://raw.githubusercontent.com/Supervisor/initscripts/master/redhat-init-equeffelec" target="_blank" rel="noopener">redhat-init-equeffelec</a></p>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;install python-pip&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span c
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Getting Started with osquery</title>
    <link href="https://t1ger.github.io/2018/12/11/Getting-Started-with-osquery/"/>
    <id>https://t1ger.github.io/2018/12/11/Getting-Started-with-osquery/</id>
    <published>2018-12-11T09:04:39.000Z</published>
    <updated>2018-12-11T09:38:20.000Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li><p>How to install</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#for Centos7</span><br><span class="line">sudo rpm -ivh https://osquery-packages.s3.amazonaws.com/centos7/noarch/osquery-s3-centos7-repo-1-0.0.noarch.rpm</span><br><span class="line">sudo yum install osquery</span><br><span class="line"></span><br><span class="line">sudo cp /usr/share/osquery/osquery.example.conf /etc/osquery/osquery.conf</span><br><span class="line"># sudo service osqueryd start</span><br><span class="line">sudo systemctl start osqueryd</span><br><span class="line"># for CentOS6.x</span><br><span class="line">sudo rpm -ivh https://osquery-packages.s3.amazonaws.com/centos6/noarch/osquery-s3-centos6-repo-1-0.0.noarch.rpm</span><br><span class="line">sudo yum install osquery</span><br><span class="line"></span><br><span class="line"># default packages create the following structure</span><br><span class="line">/etc/osquery/</span><br><span class="line">/usr/share/osquery/osquery.example.conf</span><br><span class="line">/usr/share/osquery/lenses/&#123;*&#125;.aug</span><br><span class="line">/usr/share/osquery/packs/&#123;*&#125;.conf</span><br><span class="line">/var/log/osquery/</span><br><span class="line">/usr/lib/osquery/</span><br><span class="line">/usr/bin/osqueryctl</span><br><span class="line">/usr/bin/osqueryd</span><br><span class="line">/usr/bin/osqueryi</span><br></pre></td></tr></table></figure>
</li>
<li><p>How to use</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">osquery&gt; SELECT pid, name, path FROM processes LIMIT 1;</span><br><span class="line">+-----+------+------------+</span><br><span class="line">| pid | name | path       |</span><br><span class="line">+-----+------+------------+</span><br><span class="line">| 1   | init | /sbin/init |</span><br><span class="line">+-----+------+------------+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">osqueryi --json &quot;SELECT * FROM processes limit 1&quot;</span><br><span class="line">[</span><br><span class="line">  &#123;&quot;cmdline&quot;:&quot;/sbin/init&quot;,&quot;cwd&quot;:&quot;/&quot;,&quot;disk_bytes_read&quot;:&quot;150400097280&quot;,&quot;disk_bytes_written&quot;:&quot;31441313792&quot;,&quot;egid&quot;:&quot;0&quot;,&quot;euid&quot;:&quot;0&quot;,&quot;gid&quot;:&quot;0&quot;,&quot;name&quot;:&quot;init&quot;,&quot;nice&quot;:&quot;0&quot;,&quot;on_disk&quot;:&quot;1&quot;,&quot;parent&quot;:&quot;0&quot;,&quot;path&quot;:&quot;/sbin/init&quot;,&quot;pgroup&quot;:&quot;1&quot;,&quot;pid&quot;:&quot;1&quot;,&quot;resident_size&quot;:&quot;396000&quot;,&quot;root&quot;:&quot;/&quot;,&quot;sgid&quot;:&quot;0&quot;,&quot;start_time&quot;:&quot;0&quot;,&quot;state&quot;:&quot;S&quot;,&quot;suid&quot;:&quot;0&quot;,&quot;system_time&quot;:&quot;1440&quot;,&quot;threads&quot;:&quot;1&quot;,&quot;total_size&quot;:&quot;19356000&quot;,&quot;uid&quot;:&quot;0&quot;,&quot;user_time&quot;:&quot;230&quot;,&quot;wired_size&quot;:&quot;0&quot;&#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
</li>
<li><p>Features Overview</p>
</li>
</ol>
<ul>
<li><p>osqueryd<br>The high-performance and low-footprint distributed host monitoring daemon,osqueryd, allows you to schedule queries to be executed across your entire infrastructure. The daemon takes care of aggregating the query results over time and generates logs which indicate state changes in your infrastructure. You can use this to maintain insight into the security, performance, configuration, and state of your entire infrastructure. osqueryd’s logging can integrate into your internal log aggregation pipeline, regardless of your technology stack, via a robust plugin architecture.</p>
</li>
<li><p>osqueryi<br>The interactive query console, gives you a SQL interface to try out new queries and explore your operating system.With the power of a complete SQL language and dozens of useful tables built-in,osqueryi is an invaluable tool when performing incident response, diagnosing an systems operations problem, troubleshooting a performance issue, etc.</p>
</li>
<li><p>osquery<br>osquery is cross platform. Even though osquery takes advantage of very low-level operating system APIs, you can build and use osquery on Mac OS X, Ubuntu, Cent OS and other popular enterprise Linux distributions</p>
</li>
<li><p>plugin architecture<br>To assist with the rollout process, the osquery user guide has detailed documentation on internal deployment. osquery was built so that every environment specific aspect of the toolchain can be hot-swapped at run-time with custom plugins. Use these interfaces to deeply integrate osquery into your infrastructure if one of the several existing plugins don not suit your needs</p>
</li>
</ul>
<ol start="4">
<li>Logging<br>The osquery daemon uses a default filesystem logging plugin. Like the config, output from the filesystem plugin is written as JSON.Results from the query schedule are written to /var/log/osquery/osqueryd.results.log.<br>There are two types of logs<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. Status logs (info, warning, error, and fatal)</span><br><span class="line">2. Query schedule results logs</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>ref<br><a href="https://github.com/facebook/osquery" target="_blank" rel="noopener">osquery</a><br><a href="https://blog.spoock.com/2018/11/27/usage-of-osqueryd/" target="_blank" rel="noopener">使用osqueryd监控系统</a></p>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;How to install&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>How to install ModSecurity with Nginx</title>
    <link href="https://t1ger.github.io/2018/11/22/How-to-install-ModSecurity-with-Nginx/"/>
    <id>https://t1ger.github.io/2018/11/22/How-to-install-ModSecurity-with-Nginx/</id>
    <published>2018-11-22T08:45:00.000Z</published>
    <updated>2018-11-22T09:44:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文不打算写安装过程，具体安装参考<a href="https://github.com/SpiderLabs/ModSecurity/wiki/Compilation-recipes-for-v3.x" target="_blank" rel="noopener">这里</a><br>安装环境： centos6.8 </p>
<p>安装前准备,需要安装gcc4.8 和 更新autoconf，参考<a href="https://gist.github.com/tkuchiki/543e277a2f7221a7833a" target="_blank" rel="noopener">这里</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost opt]# curl -L -O http://ftp.gnu.org/gnu/autoconf/autoconf-2.69.tar.gz</span><br><span class="line">[root@localhost opt]# tar zxf autoconf-2.69.tar.gz</span><br><span class="line">[root@localhost opt]# cd autoconf-2.69</span><br><span class="line">[root@localhost opt]# yum install -y openssl-devel</span><br><span class="line">[root@localhost opt]# ./configure</span><br><span class="line">[root@localhost opt]# make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line">[root@localhost opt]#  wget http://people.centos.org/tru/devtools-2/devtools-2.repo -O /etc/yum.repos.d/devtools-2.repo</span><br><span class="line">[root@localhost opt]#  yum install -y devtoolset-2-gcc-c++ devtoolset-2-binutils</span><br><span class="line">[root@localhost opt]#  source /opt/rh/devtoolset-2/enable</span><br></pre></td></tr></table></figure></p>
<p>规则下载<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd /opt</span><br><span class="line">git clone https://github.com/SpiderLabs/owasp-modsecurity-crs.git</span><br><span class="line">cd owasp-modsecurity-crs/</span><br><span class="line">cp crs-setup.conf.example /usr/local/openresty/nginx/conf/crs-setup.conf</span><br><span class="line">cd rules</span><br><span class="line">cp REQUEST-900-EXCLUSION-RULES-BEFORE-CRS.conf.example REQUEST-900-EXCLUSION-RULES-BEFORE-CRS.conf</span><br><span class="line">cp RESPONSE-999-EXCLUSION-RULES-AFTER-CRS.conf.example RESPONSE-999-EXCLUSION-RULES-AFTER-CRS.conf</span><br></pre></td></tr></table></figure></p>
<p>添加modsecurity配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">cp /opt/ModSecurity/modsecurity.conf-recommended /usr/local/openresty/nginx/conf/modsecurity.conf</span><br><span class="line">cp /opt/ModSecurity/unicode.mapping /usr/local/openresty/nginx/conf/unicode.mapping</span><br><span class="line">cp cp *.data /usr/local/openresty/nginx/conf/owasp/rules</span><br><span class="line">cp cp *.conf /usr/local/openresty/nginx/conf/owasp/rules</span><br><span class="line">vi modsecurity.conf</span><br><span class="line">最后添加</span><br><span class="line">Include /usr/local/openresty/nginx/conf/crs-setup.conf</span><br><span class="line">Include /usr/local/openresty/nginx/conf/owasp/rules/REQUEST-900-EXCLUSION-RULES-BEFORE-CRS.conf</span><br><span class="line">Include /usr/local/openresty/nginx/conf/owasp/rules/REQUEST-901-INITIALIZATION.conf</span><br><span class="line">Include /usr/local/openresty/nginx/conf/owasp/rules/REQUEST-905-COMMON-EXCEPTIONS.conf</span><br><span class="line">Include /usr/local/openresty/nginx/conf/owasp/rules/REQUEST-910-IP-REPUTATION.conf</span><br><span class="line">Include /usr/local/openresty/nginx/conf/owasp/rules/REQUEST-911-METHOD-ENFORCEMENT.conf</span><br><span class="line">Include /usr/local/openresty/nginx/conf/owasp/rules/REQUEST-912-DOS-PROTECTION.conf</span><br><span class="line">Include /usr/local/openresty/nginx/conf/owasp/rules/REQUEST-913-SCANNER-DETECTION.conf</span><br><span class="line">Include /usr/local/openresty/nginx/conf/owasp/rules/REQUEST-920-PROTOCOL-ENFORCEMENT.conf</span><br><span class="line">Include /usr/local/openresty/nginx/conf/owasp/rules/REQUEST-921-PROTOCOL-ATTACK.conf</span><br><span class="line">Include /usr/local/openresty/nginx/conf/owasp/rules/REQUEST-930-APPLICATION-ATTACK-LFI.conf</span><br><span class="line">Include /usr/local/openresty/nginx/conf/owasp/rules/REQUEST-931-APPLICATION-ATTACK-RFI.conf</span><br><span class="line">Include /usr/local/openresty/nginx/conf/owasp/rules/REQUEST-932-APPLICATION-ATTACK-RCE.conf</span><br><span class="line">Include /usr/local/openresty/nginx/conf/owasp/rules/REQUEST-933-APPLICATION-ATTACK-PHP.conf</span><br><span class="line">Include /usr/local/openresty/nginx/conf/owasp/rules/REQUEST-941-APPLICATION-ATTACK-XSS.conf</span><br><span class="line">Include /usr/local/openresty/nginx/conf/owasp/rules/REQUEST-942-APPLICATION-ATTACK-SQLI.conf</span><br><span class="line">Include /usr/local/openresty/nginx/conf/owasp/rules/REQUEST-943-APPLICATION-ATTACK-SESSION-FIXATION.conf</span><br><span class="line">Include /usr/local/openresty/nginx/conf/owasp/rules/REQUEST-949-BLOCKING-EVALUATION.conf</span><br><span class="line">Include /usr/local/openresty/nginx/conf/owasp/rules/RESPONSE-950-DATA-LEAKAGES.conf</span><br><span class="line">Include /usr/local/openresty/nginx/conf/owasp/rules/RESPONSE-951-DATA-LEAKAGES-SQL.conf</span><br><span class="line">Include /usr/local/openresty/nginx/conf/owasp/rules/RESPONSE-952-DATA-LEAKAGES-JAVA.conf</span><br><span class="line">Include /usr/local/openresty/nginx/conf/owasp/rules/RESPONSE-953-DATA-LEAKAGES-PHP.conf</span><br><span class="line">Include /usr/local/openresty/nginx/conf/owasp/rules/RESPONSE-954-DATA-LEAKAGES-IIS.conf</span><br><span class="line">Include /usr/local/openresty/nginx/conf/owasp/rules/RESPONSE-959-BLOCKING-EVALUATION.conf</span><br><span class="line">Include /usr/local/openresty/nginx/conf/owasp/rules/RESPONSE-980-CORRELATION.conf</span><br><span class="line">Include /usr/local/openresty/nginx/conf/owasp/rules/RESPONSE-999-EXCLUSION-RULES-AFTER-CRS.conf</span><br><span class="line">#禁用某个规则方法</span><br><span class="line">#SecRuleRemoveById 949110</span><br><span class="line">#SecRuleRemoveById 920420</span><br><span class="line">#SecRuleRemoveById 931100</span><br></pre></td></tr></table></figure></p>
<p>默认只是检测，不拦截，可以修改配置，将<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SecRuleEngine DetectionOnly改为</span><br><span class="line">SecRuleEngine On</span><br></pre></td></tr></table></figure></p>
<p>编辑crs-setup.conf文件<br>默认ModSecurity不会阻挡恶意连接，只会记录在Log里。修改SecDefaultAction选项，默认开启阻挡<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ sed -ie &apos;s/SecDefaultAction &quot;phase:1,log,auditlog,pass&quot;/#SecDefaultAction &quot;phase:1,log,auditlog,pass&quot;/g&apos; crs-setup.conf</span><br><span class="line">$ sed -ie &apos;s/SecDefaultAction &quot;phase:2,log,auditlog,pass&quot;/#SecDefaultAction &quot;phase:2,log,auditlog,pass&quot;/g&apos; crs-setup.conf</span><br><span class="line">$ sed -ie &apos;s/#.*SecDefaultAction &quot;phase:1,log,auditlog,deny,status:403&quot;/SecDefaultAction &quot;phase:1,log,auditlog,deny,status:403&quot;/g&apos; crs-setup.conf</span><br><span class="line">$ sed -ie &apos;s/# SecDefaultAction &quot;phase:2,log,auditlog,deny,status:403&quot;/SecDefaultAction &quot;phase:2,log,auditlog,deny,status:403&quot;/g&apos; crs-setup.conf</span><br></pre></td></tr></table></figure></p>
<p>nginx中增加</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">modsecurity on;</span><br><span class="line">modsecurity_rules_file /usr/local/openresty/nginx/conf/modsecurity.conf;</span><br></pre></td></tr></table></figure>
<p>重启nginx<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service nginx restart</span><br></pre></td></tr></table></figure></p>
<p>打开modsecurity检测日志<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tail -f /var/log/modsec_audit.log</span><br></pre></td></tr></table></figure></p>
<p>测试Modsecurity</p>
<p>在浏览器中访问默认首页，会看到Nginx默认的欢迎页<br>这时我们在网址后面自己加上正常参数，例如： <a href="http://localhost/?id=1" target="_blank" rel="noopener">http://localhost/?id=1</a> 。同样会看到Nginx默认的欢迎页：<br>接下来，我们在前面正常参数的基础上再加上 AND 1=1 ,整个请求变成： <a href="http://localhost/?id=1" target="_blank" rel="noopener">http://localhost/?id=1</a> AND 1=1<br>就会看到Nginx返回403 Forbidden的信息了，说明Modsecurity成功拦截了此请求。</p>
<p>出现的错误：</p>
<ol>
<li>未更新autoconf,更新即可<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ModSecurity]# sh build.sh </span><br><span class="line">libtoolize: putting auxiliary files in `.&apos;.</span><br><span class="line">libtoolize: copying file `./ltmain.sh&apos;</span><br><span class="line">libtoolize: putting macros in AC_CONFIG_MACRO_DIR, `build&apos;.</span><br><span class="line">libtoolize: copying file `build/libtool.m4&apos;</span><br><span class="line">libtoolize: copying file `build/ltoptions.m4&apos;</span><br><span class="line">libtoolize: copying file `build/ltsugar.m4&apos;</span><br><span class="line">libtoolize: copying file `build/ltversion.m4&apos;</span><br><span class="line">libtoolize: copying file `build/lt~obsolete.m4&apos;</span><br><span class="line">/usr/bin/m4:configure.ac:209: bad expression in eval: m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep &quot;define MODSECURITY_MAJOR &quot; | awk &#123;&apos;print &apos;&#125; | sed &apos;s/\&quot;//g&apos;) + m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep &quot;define MODSECURITY_MINOR &quot; | awk &#123;&apos;print &apos;&#125; | sed &apos;s/\&quot;//g&apos;)</span><br><span class="line">autom4te: /usr/bin/m4 failed with exit status: 1</span><br><span class="line">aclocal: autom4te failed with exit status: 1</span><br><span class="line">autoreconf: aclocal failed with exit status: 1</span><br><span class="line">/usr/bin/m4:configure.ac:209: bad expression in eval: m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep &quot;define MODSECURITY_MAJOR &quot; | awk &#123;&apos;print &apos;&#125; | sed &apos;s/\&quot;//g&apos;) + m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep &quot;define MODSECURITY_MINOR &quot; | awk &#123;&apos;print &apos;&#125; | sed &apos;s/\&quot;//g&apos;)</span><br><span class="line">autom4te: /usr/bin/m4 failed with exit status: 1</span><br><span class="line">autoheader: &apos;/usr/bin/autom4te&apos; failed with exit status: 1</span><br><span class="line">/usr/bin/m4:configure.ac:209: bad expression in eval: m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep &quot;define MODSECURITY_MAJOR &quot; | awk &#123;&apos;print &apos;&#125; | sed &apos;s/\&quot;//g&apos;) + m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep &quot;define MODSECURITY_MINOR &quot; | awk &#123;&apos;print &apos;&#125; | sed &apos;s/\&quot;//g&apos;)</span><br><span class="line">autom4te: /usr/bin/m4 failed with exit status: 1</span><br><span class="line">automake: autoconf failed with exit status: 1</span><br><span class="line">/usr/bin/m4:configure.ac:209: bad expression in eval: m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep &quot;define MODSECURITY_MAJOR &quot; | awk &#123;&apos;print &apos;&#125; | sed &apos;s/\&quot;//g&apos;) + m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep &quot;define MODSECURITY_MINOR &quot; | awk &#123;&apos;print &apos;&#125; | sed &apos;s/\&quot;//g&apos;)</span><br><span class="line">autom4te: /usr/bin/m4 failed with exit status: 1</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>ref</p>
<p><a href="https://docs.nginx.com/nginx-waf/admin-guide/nginx-plus-modsecurity-waf-owasp-crs/" target="_blank" rel="noopener">Using the OWASP CRS with NGINX WAF</a><br><a href="https://fossies.org/linux/owasp-modsecurity-crs/INSTALL" target="_blank" rel="noopener">owasp-modsecurity-crs-3.0.2/INSTALL</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文不打算写安装过程，具体安装参考&lt;a href=&quot;https://github.com/SpiderLabs/ModSecurity/wiki/Compilation-recipes-for-v3.x&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;这里&lt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>How to config Kafka SASL zookeeper authentication</title>
    <link href="https://t1ger.github.io/2018/11/21/How-to-config-Kafka-SASL-zookeeper-authentication/"/>
    <id>https://t1ger.github.io/2018/11/21/How-to-config-Kafka-SASL-zookeeper-authentication/</id>
    <published>2018-11-21T09:06:00.000Z</published>
    <updated>2018-11-22T09:56:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>单节点zookeeper配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost kafka]# cat /etc/zookeeper/zoo.cfg </span><br><span class="line"># The number of milliseconds of each tick</span><br><span class="line">tickTime=2000</span><br><span class="line"># The number of ticks that the initial </span><br><span class="line"># synchronization phase can take</span><br><span class="line">initLimit=10</span><br><span class="line"># The number of ticks that can pass between </span><br><span class="line"># sending a request and getting an acknowledgement</span><br><span class="line">syncLimit=5</span><br><span class="line"># the directory where the snapshot is stored.</span><br><span class="line">dataDir=/var/lib/zookeeper/data</span><br><span class="line"># the port at which the clients will connect</span><br><span class="line">clientPort=2181</span><br><span class="line"></span><br><span class="line">authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider</span><br><span class="line">requireClientAuthScheme=sasl</span><br><span class="line">jaasLoginRenew=3600000</span><br></pre></td></tr></table></figure></p>
<p>JAAS配置文件指定身份认证插件，并提供登录到zookeeper的登录名与密码。我创建了一个配置文件kafka_zoo_jaas.conf<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Server &#123;</span><br><span class="line">  org.apache.kafka.common.security.plain.PlainLoginModule required</span><br><span class="line">    username=&quot;admin&quot;</span><br><span class="line">    password=&quot;admin&quot;</span><br><span class="line">    user_admin=&quot;admin&quot;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<p>拷贝第三方Jar包到ZooKeeper目录,可以从<a href="https://mvnrepository.com/" target="_blank" rel="noopener">https://mvnrepository.com/</a> 查看需要的包依赖<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">kafka-clients-2.0.1.jar </span><br><span class="line">lz4-java-1.4.jar</span><br><span class="line">org.osgi.core-4.3.0.jar</span><br><span class="line">slf4j-api-1.7.25.jar</span><br><span class="line">snappy-java-1.1.4.jar</span><br></pre></td></tr></table></figure></p>
<p> /usr/local/kafka_2.12-1.1.1/config 目录下的   server.properties 文件 进行修改</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">listeners=SASL_PLAINTEXT://172.16.10.112:9092</span><br><span class="line">security.inter.broker.protocol=SASL_PLAINTEXT  </span><br><span class="line">sasl.enabled.mechanisms=PLAIN </span><br><span class="line">sasl.mechanism.inter.broker.protocol=PLAIN  </span><br><span class="line">authorizer.class.name=kafka.security.auth.SimpleAclAuthorizer</span><br><span class="line">allow.everyone.if.no.acl.found=true</span><br><span class="line">auto.create.topics.enable=false</span><br><span class="line">super.users=User:admin</span><br><span class="line">delete.topic.enable=true</span><br></pre></td></tr></table></figure>
<p>在config目录添加kafka_server_jaas.conf<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">KafkaServer &#123;</span><br><span class="line">    org.apache.kafka.common.security.plain.PlainLoginModule required</span><br><span class="line">    username=&quot;admin&quot;</span><br><span class="line">    password=&quot;admin&quot;</span><br><span class="line">    user_admin=&quot;admin&quot;</span><br><span class="line">    user_kafka=&quot;kafka&quot;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Client &#123;</span><br><span class="line">    org.apache.kafka.common.security.plain.PlainLoginModule required</span><br><span class="line">        username=&quot;admin&quot;</span><br><span class="line">        password=&quot;admin&quot;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">KafkaClient &#123;</span><br><span class="line">    org.apache.kafka.common.security.plain.PlainLoginModule required</span><br><span class="line">            username=&quot;kafka&quot;</span><br><span class="line">            password=&quot;kafka&quot;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<p>kafka-run-class.sh添加下面配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">KAFKA_SASL_OPTS=&quot;-Djava.security.auth.login.config=/opt/kafka/config/kafka_server_jaas.conf&quot;</span><br><span class="line"></span><br><span class="line"># Launch mode</span><br><span class="line">if [ &quot;x$DAEMON_MODE&quot; = &quot;xtrue&quot; ]; then</span><br><span class="line">  nohup $JAVA $KAFKA_HEAP_OPTS $KAFKA_JVM_PERFORMANCE_OPTS $KAFKA_GC_LOG_OPTS $KAFKA_SASL_OPTS $KAFKA_JMX_OPTS $KAFKA_LOG4J_OPTS -cp $CLASSPATH $KAFKA_OPTS &quot;$@&quot; &gt; &quot;$CONSOLE_OUTPUT_FILE&quot; 2&gt;&amp;1 &lt; /dev/null &amp;</span><br><span class="line">else</span><br><span class="line">  exec $JAVA $KAFKA_HEAP_OPTS $KAFKA_JVM_PERFORMANCE_OPTS $KAFKA_GC_LOG_OPTS $KAFKA_SASL_OPTS $KAFKA_JMX_OPTS $KAFKA_LOG4J_OPTS -cp $CLASSPATH $KAFKA_OPTS &quot;$@&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<p>kafka已经开启了SASL/PLAIN权限认证,producer和consumer不做配置是无法连接kafka的<br>在config目录下创建kafka_client_jaas.conf<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">KafkaClient &#123;</span><br><span class="line">        org.apache.kafka.common.security.plain.PlainLoginModule required</span><br><span class="line">        username=&quot;kafka&quot;</span><br><span class="line">        password=&quot;kafka&quot;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<p>在config下的producer.properties和consumer.properties添加下面配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">security.protocol=SASL_PLAINTEXT</span><br><span class="line">sasl.mechanism=PLAIN</span><br></pre></td></tr></table></figure></p>
<p>在bin下的kafka-console-producer.sh和kafka-console-consumer.sh下添加下面配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if [ &quot;x$KAFKA_OPTS&quot; ]; then</span><br><span class="line"> export KAFKA_OPTS=&quot;-Djava.security.auth.login.config=/opt/kafka/config/kafka_client_jaas.conf&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure></p>
<p>为你需要使用的用户授权<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/kafka-acls.sh --authorizer-properties zookeeper.connect=localhost:2181/kafka --add --allow-principal User:alice --operation Read --operation Write --topic sean-security</span><br></pre></td></tr></table></figure></p>
<p>查询已经授权的用户</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/kafka-acls.sh --authorizer-properties zookeeper.connect=localhost:2181/kafka --list --topic sean-security</span><br></pre></td></tr></table></figure>
<p>配置完成后，测试下,注意如果有开机自启,需要修改相应脚本,加载KAFKA_OPTS 选项<br>创建topic<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./kafka-topics.sh  --zookeeper localhost:2181/kafka --create --topic Test  --partitions 1 --replication-factor 1</span><br></pre></td></tr></table></figure></p>
<p>producer发送消息：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">./kafka-console-producer.sh --broker-list 172.16.10.100:9092 --topic test</span><br><span class="line">--producer.config /opt/kafk/config/producer.properties</span><br></pre></td></tr></table></figure></p>
<p>consumer消费消息：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./kafka-console-consumer.sh --bootstrap-server 172.16.10.100:9092 --topic test --from-beginning</span><br><span class="line"> --consumer.config /opt/kafk/config/consumer.properties</span><br></pre></td></tr></table></figure></p>
<p>如果是在程序里面只需要在kafka配置信息里添加如下配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">System.setProperty(&quot;java.security.auth.login.config&quot;, &quot;kafka_client_jaas.conf&quot;); // 环境变量添加，需要输入配置文件的路径</span><br><span class="line">propsMap.put(&quot;security.protocol&quot;,&quot;SASL_PLAINTEXT&quot;);</span><br><span class="line">propsMap.put(&quot;sasl.mechanism&quot;, &quot;PLAIN&quot;);</span><br></pre></td></tr></table></figure></p>
<p>无论是producer还是consumer，都需要配置认证信息，其中kafka_client_jaas.conf的内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">KafkaClient &#123;</span><br><span class="line">        org.apache.kafka.common.security.plain.PlainLoginModule required</span><br><span class="line">        username=&quot;kafka&quot;</span><br><span class="line">        password=&quot;kafka&quot;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<p>ref<br><a href="http://kafka.apache.org/documentation/" target="_blank" rel="noopener">Documentation</a><br><a href="https://blog.csdn.net/u012040869/article/details/82589002?utm_source=blogkpcl4" target="_blank" rel="noopener">为Kafka 添加用户名 密码权限，即SASL/PLAIN</a><br><a href="http://www.2bowl.info/kafka%E7%9A%84saslplain%E8%AE%A4%E8%AF%81%E9%85%8D%E7%BD%AE%E8%AF%B4%E6%98%8E/" target="_blank" rel="noopener">Kafka的SASL/PLAIN认证配置说明</a><br><a href="https://stackoverflow.com/questions/43469962/kafka-sasl-zookeeper-authentication" target="_blank" rel="noopener">Kafka SASL zookeeper authentication</a><br><a href="https://blog.csdn.net/u012842205/article/details/73188534?utm_source=blogxgwz0" target="_blank" rel="noopener">单机节点Kafka配置SASL用户名密码认证</a><br><a href="https://blog.csdn.net/u010416101/article/details/79562214" target="_blank" rel="noopener">Kafka SASL配置 &amp; Demo测试</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;单节点zookeeper配置&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>How to install Cabot on CentOS</title>
    <link href="https://t1ger.github.io/2018/11/14/How-to-install-Cabot-on-CentOS/"/>
    <id>https://t1ger.github.io/2018/11/14/How-to-install-Cabot-on-CentOS/</id>
    <published>2018-11-14T09:56:36.000Z</published>
    <updated>2018-11-15T06:11:12.000Z</updated>
    
    <content type="html"><![CDATA[<p>Cabot环境搭建</p>
<p>初始化mysql数据库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ mysql -u root -p -e &quot;CREATE USER cabot@localhost IDENTIFIED BY &apos;cabot&apos;&quot;;</span><br><span class="line">$ mysql -u root -p -e &quot;CREATE DATABASE cabot&quot;;</span><br><span class="line">$ mysql -u root -p -e &quot;GRANT ALL PRIVILEGES ON \`cabot\`.* TO \`cabot\`@localhost&quot;;</span><br></pre></td></tr></table></figure></p>
<p>下载cabot</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/arachnys/cabot.git</span><br></pre></td></tr></table></figure>
<p>安装依赖软件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum install ruby</span><br><span class="line">$ sudo gem install foreman</span><br><span class="line">$ sudo pip install fabric</span><br><span class="line">$ sudo yum install python-devel</span><br><span class="line">$ sudo yum install openldap-devel</span><br><span class="line">$ sudo pip install -r requirements.txt </span><br><span class="line">$ sudo pip install -r requirements-plugins.txt </span><br><span class="line">$ sudo pip install -r requirements-dev.txt</span><br><span class="line">$ sudo pip install MySQL-python</span><br><span class="line">$ sudo yum install nodejs</span><br><span class="line">$ sudo npm install -g less</span><br><span class="line">$ sudo npm install -g coffee-script</span><br></pre></td></tr></table></figure></p>
<p>修改配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$ cp production.env.example production.env</span><br><span class="line">$ vi production.env</span><br><span class="line">DEBUG=t</span><br><span class="line">DATABASE_URL=mysql://cabot:cabot@localhost:3306/cabot</span><br><span class="line">DJANGO_SETTINGS_MODULE=cabot.settings</span><br><span class="line">LOG_FILE=log</span><br><span class="line">PORT=5008</span><br><span class="line"></span><br><span class="line"># Local time zone for this installation. Choices can be found here:</span><br><span class="line"># http://en.wikipedia.org/wiki/List_of_tz_zones_by_name</span><br><span class="line">TIME_ZONE=Asia/Shanghai</span><br><span class="line"></span><br><span class="line"># Django settings</span><br><span class="line">CELERY_BROKER_URL=redis://localhost:6379/1</span><br><span class="line">DJANGO_SECRET_KEY=2FL6ORhHwr5eX34pP9mMugnIOd3jzVuT45f7w430Mt5PnEwbcJgma0q8zUXNZ68A</span><br><span class="line"></span><br><span class="line"># Hostname of your Graphite server instance</span><br><span class="line">GRAPHITE_API=http://*.*.*.*:12346/</span><br><span class="line">GRAPHITE_USER=username</span><br><span class="line">GRAPHITE_PASS=password</span><br></pre></td></tr></table></figure></p>
<p>修改启动文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ vi .foreman</span><br><span class="line"></span><br><span class="line"># vi: set ft=yaml :</span><br><span class="line">procfile: Procfile</span><br><span class="line">env: conf/production.env</span><br><span class="line"></span><br><span class="line">$ vi gunicorn.conf</span><br><span class="line"></span><br><span class="line"># -*- mode: python -*-</span><br><span class="line"># vi: set ft=python :</span><br><span class="line">import os</span><br><span class="line">bind = &apos;0.0.0.0:%s&apos; % os.environ[&apos;PORT&apos;]</span><br><span class="line">workers = 3</span><br><span class="line"></span><br><span class="line">$ vi Procfile</span><br><span class="line">web:       gunicorn cabot.wsgi:application --config gunicorn.conf</span><br><span class="line">celery:    celery worker -B -A cabot --loglevel=INFO --concurrency=16 -Ofair</span><br><span class="line">beat:      celery beat -A cabot --loglevel=INFO</span><br></pre></td></tr></table></figure></p>
<p>初始化数据库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sh setup_dev.sh</span><br></pre></td></tr></table></figure></p>
<p>启动web程序<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ foreman start web</span><br></pre></td></tr></table></figure></p>
<p>启动celery<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">foreman start celery</span><br></pre></td></tr></table></figure></p>
<p>登录管理页面(第一次登录需要设置管理员账号)</p>
<p>使用supervisor管理Cabot,Celery进程<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vi /etc/supervisord.d/cabot.conf</span><br><span class="line"></span><br><span class="line">[program:web]</span><br><span class="line">command=foreman start web</span><br><span class="line">autorstart=true</span><br><span class="line">autorestart=true</span><br><span class="line">redirect_stderr=true</span><br><span class="line">stopsignal=TERM</span><br><span class="line">stdout_logfile=/var/log/web.log</span><br><span class="line">directory=/opt/cabot</span><br><span class="line"></span><br><span class="line">[program:celery]</span><br><span class="line">command=foreman start celery</span><br><span class="line">autorstart=true</span><br><span class="line">autorestart=true</span><br><span class="line">redirect_stderr=true</span><br><span class="line">stopsignal=TERM</span><br><span class="line">stdout_logfile=/var/log/celery.log</span><br><span class="line">directory=/opt/cabot</span><br></pre></td></tr></table></figure></p>
<p>使用supervisor管理程序<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo supervisorctl reload</span><br></pre></td></tr></table></figure></p>
<p>遇到的错误<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1. &quot;Missing staticfiles manifest entry for &apos;%s&apos;&quot; % clean_name</span><br><span class="line">#解决方法</span><br><span class="line">python manage.py collectstatic</span><br><span class="line"></span><br><span class="line">2. CommandError: An error occurred during rendering /usr/local/whistle/webapps/cabot/cabot/templates/cabotapp/statuscheck_report.html:</span><br><span class="line"> /bin/sh: lessc: command not found</span><br><span class="line">#解决方法</span><br><span class="line">pip install nodeenv</span><br><span class="line">nodeenv nodeenv</span><br><span class="line">source nodeenv/bin/activate</span><br><span class="line">npm install -g less</span><br></pre></td></tr></table></figure></p>
<p>ref<br><a href="https://my.oschina.net/cdsc/blog/1480219" target="_blank" rel="noopener">Cabot Alert Mysql环境搭建</a><br><a href="https://github.com/ialbert/biostar-central/issues/193" target="_blank" rel="noopener">Cannot run Biostars out of the box: “lessc: command not found”</a><br><a href="https://stackoverflow.com/questions/44160666/valueerror-missing-staticfiles-manifest-entry-for-favicon-ico" target="_blank" rel="noopener">ValueError: Missing staticfiles manifest entry for ‘favicon.ico’</a></p>
<hr>
<p>您的鼓励是我写作最大的动力</p>
<p>俗话说，投资效率是最好的投资。 如果您感觉我的文章质量不错，读后收获很大，预计能为您提高 10% 的工作效率，不妨小额捐助我一下，让我有动力继续写出更多好文章。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Cabot环境搭建&lt;/p&gt;
&lt;p&gt;初始化mysql数据库&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span c
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>mysql audit plugin</title>
    <link href="https://t1ger.github.io/2018/11/05/mysql-audit-plugin/"/>
    <id>https://t1ger.github.io/2018/11/05/mysql-audit-plugin/</id>
    <published>2018-11-05T09:40:06.000Z</published>
    <updated>2018-11-05T09:59:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>此文转载于<a href="https://blog.csdn.net/heizistudio/article/details/50954294" target="_blank" rel="noopener">ora600</a>,略作调整.</p>
<p>下载地址如下<br><a href="http://pan.baidu.com/s/1dFGFCrv" target="_blank" rel="noopener">http://pan.baidu.com/s/1dFGFCrv</a></p>
<p>mysql5.6.X.tar.gz到mysql-5.7.8-rc.tar.gz是一个版本—-audit5_6_21.so<br>mysql5.7.1.tar.gz—mysql5.7.9.tar.gz是一个版本—-audit5_7_9.so<br>mysql5.7.10–mysql5.7.22是一个版本</p>
<p>一、查找插件所在位置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show variables like &apos;%plugin_dir%&apos;;</span><br><span class="line">+---------------+------------------------------+</span><br><span class="line">| Variable_name | Value                        |</span><br><span class="line">+---------------+------------------------------+</span><br><span class="line">| plugin_dir    | /usr/local/mysql/lib/plugin/ |</span><br><span class="line">+---------------+------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">---------------------</span><br></pre></td></tr></table></figure></p>
<p>二、将audit_版本号.so插件下载后放到plugin_dir位置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv audit_版本号.so  audit.so</span><br></pre></td></tr></table></figure></p>
<p>三、加载插件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; install plugin audit  SONAME &apos;audit.so&apos;;</span><br></pre></td></tr></table></figure></p>
<p>四、卸载插件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; uninstall plugin audit;</span><br></pre></td></tr></table></figure></p>
<p>使用插件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show variables like &apos;%audit%&apos;;</span><br><span class="line">+----------------+----------------------+</span><br><span class="line">| Variable_name  | Value                |</span><br><span class="line">+----------------+----------------------+</span><br><span class="line">| audit_logfile  | /tmp/mysql_audit.log |</span><br><span class="line">| audit_myswitch | OFF                  |</span><br><span class="line">| audit_num      | 0                    |</span><br><span class="line">| audit_sql      | all_sql              |</span><br><span class="line">| audit_user     | all_user             |</span><br><span class="line">+----------------+----------------------+</span><br><span class="line">5 rows in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; set global audit_logfile=&apos;/tmp/mysql_audit_1.log&apos;;----只读变量，审计仅指定在/tmp/mysql_audit.log文件，保障权限可以写</span><br><span class="line">ERROR 1238 (HY000): Variable &apos;audit_logfile&apos; is a read only variable</span><br><span class="line"></span><br><span class="line">set global audit_sql=&apos;delete;select;drop&apos;;   -----这些审计关键字用;分开</span><br><span class="line">set global audit_user=&apos;user2;user3&apos;;         ----审计用户用;隔开</span><br><span class="line">set global audit_num =0;                          ----审计sql影响的最少行数，默认为0</span><br><span class="line">set global audit_myswitch=on|off|ON|OFF|1|0;       -----开启关闭审计</span><br></pre></td></tr></table></figure></p>
<p>查看日志linux下tailf /tmp/mysql_audit.log</p>
<p>ref<br><a href="https://blog.csdn.net/heizistudio/article/details/50954294" target="_blank" rel="noopener">mysql审计插件(运维不在背锅)</a><br><a href="https://dev.mysql.com/doc/refman/5.5/en/writing-audit-plugins.html" target="_blank" rel="noopener">Writing Audit Plugins</a><br><a href="https://github.com/mcafee/mysql-audit/wiki/Configuration" target="_blank" rel="noopener">mcafee/mysql-audit</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;此文转载于&lt;a href=&quot;https://blog.csdn.net/heizistudio/article/details/50954294&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ora600&lt;/a&gt;,略作调整.&lt;/p&gt;
&lt;p&gt;下载地址如下&lt;b
    
    </summary>
    
    
  </entry>
  
</feed>
